// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Investment.pb.h"
// @@protoc_insertion_point(imports)

@implementation InvestmentRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [InvestmentRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CommonRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL tg_investment_period_typeIsValidValue(tg_investment_period_type value) {
  switch (value) {
    case tg_investment_period_typeTgInvestmentPeriodTypeNull:
    case tg_investment_period_typeTgShortPeriod:
    case tg_investment_period_typeTgMidPeriod:
    case tg_investment_period_typeTgLongPeriod:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromtg_investment_period_type(tg_investment_period_type value) {
  switch (value) {
    case tg_investment_period_typeTgInvestmentPeriodTypeNull:
      return @"tg_investment_period_typeTgInvestmentPeriodTypeNull";
    case tg_investment_period_typeTgShortPeriod:
      return @"tg_investment_period_typeTgShortPeriod";
    case tg_investment_period_typeTgMidPeriod:
      return @"tg_investment_period_typeTgMidPeriod";
    case tg_investment_period_typeTgLongPeriod:
      return @"tg_investment_period_typeTgLongPeriod";
    default:
      return nil;
  }
}

BOOL tg_stock_investment_stateIsValidValue(tg_stock_investment_state value) {
  switch (value) {
    case tg_stock_investment_stateTgStockInvestmentStateNull:
    case tg_stock_investment_stateTgInPool:
    case tg_stock_investment_stateTgAutoBuy:
    case tg_stock_investment_stateTgManualBuy:
    case tg_stock_investment_stateTgHold:
    case tg_stock_investment_stateTgOutPool:
    case tg_stock_investment_stateTgModifyProfit:
    case tg_stock_investment_stateTgModifyStop:
    case tg_stock_investment_stateTgAutoProfit:
    case tg_stock_investment_stateTgAutoStop:
    case tg_stock_investment_stateTgManuallyProfit:
    case tg_stock_investment_stateTgManuallyStop:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromtg_stock_investment_state(tg_stock_investment_state value) {
  switch (value) {
    case tg_stock_investment_stateTgStockInvestmentStateNull:
      return @"tg_stock_investment_stateTgStockInvestmentStateNull";
    case tg_stock_investment_stateTgInPool:
      return @"tg_stock_investment_stateTgInPool";
    case tg_stock_investment_stateTgAutoBuy:
      return @"tg_stock_investment_stateTgAutoBuy";
    case tg_stock_investment_stateTgManualBuy:
      return @"tg_stock_investment_stateTgManualBuy";
    case tg_stock_investment_stateTgHold:
      return @"tg_stock_investment_stateTgHold";
    case tg_stock_investment_stateTgOutPool:
      return @"tg_stock_investment_stateTgOutPool";
    case tg_stock_investment_stateTgModifyProfit:
      return @"tg_stock_investment_stateTgModifyProfit";
    case tg_stock_investment_stateTgModifyStop:
      return @"tg_stock_investment_stateTgModifyStop";
    case tg_stock_investment_stateTgAutoProfit:
      return @"tg_stock_investment_stateTgAutoProfit";
    case tg_stock_investment_stateTgAutoStop:
      return @"tg_stock_investment_stateTgAutoStop";
    case tg_stock_investment_stateTgManuallyProfit:
      return @"tg_stock_investment_stateTgManuallyProfit";
    case tg_stock_investment_stateTgManuallyStop:
      return @"tg_stock_investment_stateTgManuallyStop";
    default:
      return nil;
  }
}

@interface tg_stock_att ()
@property (strong) NSString* code;
@property SInt64 date;
@property Float32 lowBuyPirce;
@property Float32 highBuyPrice;
@property Float32 targetPrice;
@property Float32 stopPrice;
@property tg_investment_period_type invType;
@property tg_stock_investment_state buyState;
@property Float32 currentBuyPrice;
@property Float32 currentSellPrice;
@end

@implementation tg_stock_att

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasLowBuyPirce {
  return !!hasLowBuyPirce_;
}
- (void) setHasLowBuyPirce:(BOOL) _value_ {
  hasLowBuyPirce_ = !!_value_;
}
@synthesize lowBuyPirce;
- (BOOL) hasHighBuyPrice {
  return !!hasHighBuyPrice_;
}
- (void) setHasHighBuyPrice:(BOOL) _value_ {
  hasHighBuyPrice_ = !!_value_;
}
@synthesize highBuyPrice;
- (BOOL) hasTargetPrice {
  return !!hasTargetPrice_;
}
- (void) setHasTargetPrice:(BOOL) _value_ {
  hasTargetPrice_ = !!_value_;
}
@synthesize targetPrice;
- (BOOL) hasStopPrice {
  return !!hasStopPrice_;
}
- (void) setHasStopPrice:(BOOL) _value_ {
  hasStopPrice_ = !!_value_;
}
@synthesize stopPrice;
- (BOOL) hasInvType {
  return !!hasInvType_;
}
- (void) setHasInvType:(BOOL) _value_ {
  hasInvType_ = !!_value_;
}
@synthesize invType;
- (BOOL) hasBuyState {
  return !!hasBuyState_;
}
- (void) setHasBuyState:(BOOL) _value_ {
  hasBuyState_ = !!_value_;
}
@synthesize buyState;
- (BOOL) hasCurrentBuyPrice {
  return !!hasCurrentBuyPrice_;
}
- (void) setHasCurrentBuyPrice:(BOOL) _value_ {
  hasCurrentBuyPrice_ = !!_value_;
}
@synthesize currentBuyPrice;
- (BOOL) hasCurrentSellPrice {
  return !!hasCurrentSellPrice_;
}
- (void) setHasCurrentSellPrice:(BOOL) _value_ {
  hasCurrentSellPrice_ = !!_value_;
}
@synthesize currentSellPrice;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.date = 0L;
    self.lowBuyPirce = 0;
    self.highBuyPrice = 0;
    self.targetPrice = 0;
    self.stopPrice = 0;
    self.invType = tg_investment_period_typeTgInvestmentPeriodTypeNull;
    self.buyState = tg_stock_investment_stateTgStockInvestmentStateNull;
    self.currentBuyPrice = 0;
    self.currentSellPrice = 0;
  }
  return self;
}
static tg_stock_att* defaulttg_stock_attInstance = nil;
+ (void) initialize {
  if (self == [tg_stock_att class]) {
    defaulttg_stock_attInstance = [[tg_stock_att alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_stock_attInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_stock_attInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasLowBuyPirce) {
    return NO;
  }
  if (!self.hasHighBuyPrice) {
    return NO;
  }
  if (!self.hasTargetPrice) {
    return NO;
  }
  if (!self.hasStopPrice) {
    return NO;
  }
  if (!self.hasInvType) {
    return NO;
  }
  if (!self.hasBuyState) {
    return NO;
  }
  if (!self.hasCurrentBuyPrice) {
    return NO;
  }
  if (!self.hasCurrentSellPrice) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasDate) {
    [output writeInt64:2 value:self.date];
  }
  if (self.hasLowBuyPirce) {
    [output writeFloat:3 value:self.lowBuyPirce];
  }
  if (self.hasHighBuyPrice) {
    [output writeFloat:4 value:self.highBuyPrice];
  }
  if (self.hasTargetPrice) {
    [output writeFloat:5 value:self.targetPrice];
  }
  if (self.hasStopPrice) {
    [output writeFloat:6 value:self.stopPrice];
  }
  if (self.hasInvType) {
    [output writeEnum:7 value:self.invType];
  }
  if (self.hasBuyState) {
    [output writeEnum:8 value:self.buyState];
  }
  if (self.hasCurrentBuyPrice) {
    [output writeFloat:9 value:self.currentBuyPrice];
  }
  if (self.hasCurrentSellPrice) {
    [output writeFloat:10 value:self.currentSellPrice];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasDate) {
    size_ += computeInt64Size(2, self.date);
  }
  if (self.hasLowBuyPirce) {
    size_ += computeFloatSize(3, self.lowBuyPirce);
  }
  if (self.hasHighBuyPrice) {
    size_ += computeFloatSize(4, self.highBuyPrice);
  }
  if (self.hasTargetPrice) {
    size_ += computeFloatSize(5, self.targetPrice);
  }
  if (self.hasStopPrice) {
    size_ += computeFloatSize(6, self.stopPrice);
  }
  if (self.hasInvType) {
    size_ += computeEnumSize(7, self.invType);
  }
  if (self.hasBuyState) {
    size_ += computeEnumSize(8, self.buyState);
  }
  if (self.hasCurrentBuyPrice) {
    size_ += computeFloatSize(9, self.currentBuyPrice);
  }
  if (self.hasCurrentSellPrice) {
    size_ += computeFloatSize(10, self.currentSellPrice);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_stock_att*) parseFromData:(NSData*) data {
  return (tg_stock_att*)[[[tg_stock_att builder] mergeFromData:data] build];
}
+ (tg_stock_att*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_att*)[[[tg_stock_att builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_att*) parseFromInputStream:(NSInputStream*) input {
  return (tg_stock_att*)[[[tg_stock_att builder] mergeFromInputStream:input] build];
}
+ (tg_stock_att*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_att*)[[[tg_stock_att builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_att*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_stock_att*)[[[tg_stock_att builder] mergeFromCodedInputStream:input] build];
}
+ (tg_stock_att*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_att*)[[[tg_stock_att builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_attBuilder*) builder {
  return [[tg_stock_attBuilder alloc] init];
}
+ (tg_stock_attBuilder*) builderWithPrototype:(tg_stock_att*) prototype {
  return [[tg_stock_att builder] mergeFrom:prototype];
}
- (tg_stock_attBuilder*) builder {
  return [tg_stock_att builder];
}
- (tg_stock_attBuilder*) toBuilder {
  return [tg_stock_att builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasLowBuyPirce) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lowBuyPirce", [NSNumber numberWithFloat:self.lowBuyPirce]];
  }
  if (self.hasHighBuyPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"highBuyPrice", [NSNumber numberWithFloat:self.highBuyPrice]];
  }
  if (self.hasTargetPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetPrice", [NSNumber numberWithFloat:self.targetPrice]];
  }
  if (self.hasStopPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"stopPrice", [NSNumber numberWithFloat:self.stopPrice]];
  }
  if (self.hasInvType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"invType", NSStringFromtg_investment_period_type(self.invType)];
  }
  if (self.hasBuyState) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buyState", NSStringFromtg_stock_investment_state(self.buyState)];
  }
  if (self.hasCurrentBuyPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"currentBuyPrice", [NSNumber numberWithFloat:self.currentBuyPrice]];
  }
  if (self.hasCurrentSellPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"currentSellPrice", [NSNumber numberWithFloat:self.currentSellPrice]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasLowBuyPirce) {
    [dictionary setObject: [NSNumber numberWithFloat:self.lowBuyPirce] forKey: @"lowBuyPirce"];
  }
  if (self.hasHighBuyPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.highBuyPrice] forKey: @"highBuyPrice"];
  }
  if (self.hasTargetPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.targetPrice] forKey: @"targetPrice"];
  }
  if (self.hasStopPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.stopPrice] forKey: @"stopPrice"];
  }
  if (self.hasInvType) {
    [dictionary setObject: @(self.invType) forKey: @"invType"];
  }
  if (self.hasBuyState) {
    [dictionary setObject: @(self.buyState) forKey: @"buyState"];
  }
  if (self.hasCurrentBuyPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.currentBuyPrice] forKey: @"currentBuyPrice"];
  }
  if (self.hasCurrentSellPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.currentSellPrice] forKey: @"currentSellPrice"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_stock_att class]]) {
    return NO;
  }
  tg_stock_att *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasLowBuyPirce == otherMessage.hasLowBuyPirce &&
      (!self.hasLowBuyPirce || self.lowBuyPirce == otherMessage.lowBuyPirce) &&
      self.hasHighBuyPrice == otherMessage.hasHighBuyPrice &&
      (!self.hasHighBuyPrice || self.highBuyPrice == otherMessage.highBuyPrice) &&
      self.hasTargetPrice == otherMessage.hasTargetPrice &&
      (!self.hasTargetPrice || self.targetPrice == otherMessage.targetPrice) &&
      self.hasStopPrice == otherMessage.hasStopPrice &&
      (!self.hasStopPrice || self.stopPrice == otherMessage.stopPrice) &&
      self.hasInvType == otherMessage.hasInvType &&
      (!self.hasInvType || self.invType == otherMessage.invType) &&
      self.hasBuyState == otherMessage.hasBuyState &&
      (!self.hasBuyState || self.buyState == otherMessage.buyState) &&
      self.hasCurrentBuyPrice == otherMessage.hasCurrentBuyPrice &&
      (!self.hasCurrentBuyPrice || self.currentBuyPrice == otherMessage.currentBuyPrice) &&
      self.hasCurrentSellPrice == otherMessage.hasCurrentSellPrice &&
      (!self.hasCurrentSellPrice || self.currentSellPrice == otherMessage.currentSellPrice) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasLowBuyPirce) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.lowBuyPirce] hash];
  }
  if (self.hasHighBuyPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.highBuyPrice] hash];
  }
  if (self.hasTargetPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.targetPrice] hash];
  }
  if (self.hasStopPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.stopPrice] hash];
  }
  if (self.hasInvType) {
    hashCode = hashCode * 31 + self.invType;
  }
  if (self.hasBuyState) {
    hashCode = hashCode * 31 + self.buyState;
  }
  if (self.hasCurrentBuyPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.currentBuyPrice] hash];
  }
  if (self.hasCurrentSellPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.currentSellPrice] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_stock_attBuilder()
@property (strong) tg_stock_att* resultTgStockAtt;
@end

@implementation tg_stock_attBuilder
@synthesize resultTgStockAtt;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgStockAtt = [[tg_stock_att alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgStockAtt;
}
- (tg_stock_attBuilder*) clear {
  self.resultTgStockAtt = [[tg_stock_att alloc] init];
  return self;
}
- (tg_stock_attBuilder*) clone {
  return [tg_stock_att builderWithPrototype:resultTgStockAtt];
}
- (tg_stock_att*) defaultInstance {
  return [tg_stock_att defaultInstance];
}
- (tg_stock_att*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_stock_att*) buildPartial {
  tg_stock_att* returnMe = resultTgStockAtt;
  self.resultTgStockAtt = nil;
  return returnMe;
}
- (tg_stock_attBuilder*) mergeFrom:(tg_stock_att*) other {
  if (other == [tg_stock_att defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasLowBuyPirce) {
    [self setLowBuyPirce:other.lowBuyPirce];
  }
  if (other.hasHighBuyPrice) {
    [self setHighBuyPrice:other.highBuyPrice];
  }
  if (other.hasTargetPrice) {
    [self setTargetPrice:other.targetPrice];
  }
  if (other.hasStopPrice) {
    [self setStopPrice:other.stopPrice];
  }
  if (other.hasInvType) {
    [self setInvType:other.invType];
  }
  if (other.hasBuyState) {
    [self setBuyState:other.buyState];
  }
  if (other.hasCurrentBuyPrice) {
    [self setCurrentBuyPrice:other.currentBuyPrice];
  }
  if (other.hasCurrentSellPrice) {
    [self setCurrentSellPrice:other.currentSellPrice];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_stock_attBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_stock_attBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 16: {
        [self setDate:[input readInt64]];
        break;
      }
      case 29: {
        [self setLowBuyPirce:[input readFloat]];
        break;
      }
      case 37: {
        [self setHighBuyPrice:[input readFloat]];
        break;
      }
      case 45: {
        [self setTargetPrice:[input readFloat]];
        break;
      }
      case 53: {
        [self setStopPrice:[input readFloat]];
        break;
      }
      case 56: {
        tg_investment_period_type value = (tg_investment_period_type)[input readEnum];
        if (tg_investment_period_typeIsValidValue(value)) {
          [self setInvType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 64: {
        tg_stock_investment_state value = (tg_stock_investment_state)[input readEnum];
        if (tg_stock_investment_stateIsValidValue(value)) {
          [self setBuyState:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
      case 77: {
        [self setCurrentBuyPrice:[input readFloat]];
        break;
      }
      case 85: {
        [self setCurrentSellPrice:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultTgStockAtt.hasCode;
}
- (NSString*) code {
  return resultTgStockAtt.code;
}
- (tg_stock_attBuilder*) setCode:(NSString*) value {
  resultTgStockAtt.hasCode = YES;
  resultTgStockAtt.code = value;
  return self;
}
- (tg_stock_attBuilder*) clearCode {
  resultTgStockAtt.hasCode = NO;
  resultTgStockAtt.code = @"";
  return self;
}
- (BOOL) hasDate {
  return resultTgStockAtt.hasDate;
}
- (SInt64) date {
  return resultTgStockAtt.date;
}
- (tg_stock_attBuilder*) setDate:(SInt64) value {
  resultTgStockAtt.hasDate = YES;
  resultTgStockAtt.date = value;
  return self;
}
- (tg_stock_attBuilder*) clearDate {
  resultTgStockAtt.hasDate = NO;
  resultTgStockAtt.date = 0L;
  return self;
}
- (BOOL) hasLowBuyPirce {
  return resultTgStockAtt.hasLowBuyPirce;
}
- (Float32) lowBuyPirce {
  return resultTgStockAtt.lowBuyPirce;
}
- (tg_stock_attBuilder*) setLowBuyPirce:(Float32) value {
  resultTgStockAtt.hasLowBuyPirce = YES;
  resultTgStockAtt.lowBuyPirce = value;
  return self;
}
- (tg_stock_attBuilder*) clearLowBuyPirce {
  resultTgStockAtt.hasLowBuyPirce = NO;
  resultTgStockAtt.lowBuyPirce = 0;
  return self;
}
- (BOOL) hasHighBuyPrice {
  return resultTgStockAtt.hasHighBuyPrice;
}
- (Float32) highBuyPrice {
  return resultTgStockAtt.highBuyPrice;
}
- (tg_stock_attBuilder*) setHighBuyPrice:(Float32) value {
  resultTgStockAtt.hasHighBuyPrice = YES;
  resultTgStockAtt.highBuyPrice = value;
  return self;
}
- (tg_stock_attBuilder*) clearHighBuyPrice {
  resultTgStockAtt.hasHighBuyPrice = NO;
  resultTgStockAtt.highBuyPrice = 0;
  return self;
}
- (BOOL) hasTargetPrice {
  return resultTgStockAtt.hasTargetPrice;
}
- (Float32) targetPrice {
  return resultTgStockAtt.targetPrice;
}
- (tg_stock_attBuilder*) setTargetPrice:(Float32) value {
  resultTgStockAtt.hasTargetPrice = YES;
  resultTgStockAtt.targetPrice = value;
  return self;
}
- (tg_stock_attBuilder*) clearTargetPrice {
  resultTgStockAtt.hasTargetPrice = NO;
  resultTgStockAtt.targetPrice = 0;
  return self;
}
- (BOOL) hasStopPrice {
  return resultTgStockAtt.hasStopPrice;
}
- (Float32) stopPrice {
  return resultTgStockAtt.stopPrice;
}
- (tg_stock_attBuilder*) setStopPrice:(Float32) value {
  resultTgStockAtt.hasStopPrice = YES;
  resultTgStockAtt.stopPrice = value;
  return self;
}
- (tg_stock_attBuilder*) clearStopPrice {
  resultTgStockAtt.hasStopPrice = NO;
  resultTgStockAtt.stopPrice = 0;
  return self;
}
- (BOOL) hasInvType {
  return resultTgStockAtt.hasInvType;
}
- (tg_investment_period_type) invType {
  return resultTgStockAtt.invType;
}
- (tg_stock_attBuilder*) setInvType:(tg_investment_period_type) value {
  resultTgStockAtt.hasInvType = YES;
  resultTgStockAtt.invType = value;
  return self;
}
- (tg_stock_attBuilder*) clearInvType {
  resultTgStockAtt.hasInvType = NO;
  resultTgStockAtt.invType = tg_investment_period_typeTgInvestmentPeriodTypeNull;
  return self;
}
- (BOOL) hasBuyState {
  return resultTgStockAtt.hasBuyState;
}
- (tg_stock_investment_state) buyState {
  return resultTgStockAtt.buyState;
}
- (tg_stock_attBuilder*) setBuyState:(tg_stock_investment_state) value {
  resultTgStockAtt.hasBuyState = YES;
  resultTgStockAtt.buyState = value;
  return self;
}
- (tg_stock_attBuilder*) clearBuyState {
  resultTgStockAtt.hasBuyState = NO;
  resultTgStockAtt.buyState = tg_stock_investment_stateTgStockInvestmentStateNull;
  return self;
}
- (BOOL) hasCurrentBuyPrice {
  return resultTgStockAtt.hasCurrentBuyPrice;
}
- (Float32) currentBuyPrice {
  return resultTgStockAtt.currentBuyPrice;
}
- (tg_stock_attBuilder*) setCurrentBuyPrice:(Float32) value {
  resultTgStockAtt.hasCurrentBuyPrice = YES;
  resultTgStockAtt.currentBuyPrice = value;
  return self;
}
- (tg_stock_attBuilder*) clearCurrentBuyPrice {
  resultTgStockAtt.hasCurrentBuyPrice = NO;
  resultTgStockAtt.currentBuyPrice = 0;
  return self;
}
- (BOOL) hasCurrentSellPrice {
  return resultTgStockAtt.hasCurrentSellPrice;
}
- (Float32) currentSellPrice {
  return resultTgStockAtt.currentSellPrice;
}
- (tg_stock_attBuilder*) setCurrentSellPrice:(Float32) value {
  resultTgStockAtt.hasCurrentSellPrice = YES;
  resultTgStockAtt.currentSellPrice = value;
  return self;
}
- (tg_stock_attBuilder*) clearCurrentSellPrice {
  resultTgStockAtt.hasCurrentSellPrice = NO;
  resultTgStockAtt.currentSellPrice = 0;
  return self;
}
@end

@interface tg_req_stock_pool_msg ()
@property SInt64 versionId;
@property SInt32 pid;
@end

@implementation tg_req_stock_pool_msg

- (BOOL) hasVersionId {
  return !!hasVersionId_;
}
- (void) setHasVersionId:(BOOL) _value_ {
  hasVersionId_ = !!_value_;
}
@synthesize versionId;
- (BOOL) hasPid {
  return !!hasPid_;
}
- (void) setHasPid:(BOOL) _value_ {
  hasPid_ = !!_value_;
}
@synthesize pid;
- (instancetype) init {
  if ((self = [super init])) {
    self.versionId = 0L;
    self.pid = 0;
  }
  return self;
}
static tg_req_stock_pool_msg* defaulttg_req_stock_pool_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_req_stock_pool_msg class]) {
    defaulttg_req_stock_pool_msgInstance = [[tg_req_stock_pool_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_req_stock_pool_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_req_stock_pool_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasVersionId) {
    return NO;
  }
  if (!self.hasPid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersionId) {
    [output writeInt64:1 value:self.versionId];
  }
  if (self.hasPid) {
    [output writeInt32:2 value:self.pid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersionId) {
    size_ += computeInt64Size(1, self.versionId);
  }
  if (self.hasPid) {
    size_ += computeInt32Size(2, self.pid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_req_stock_pool_msg*) parseFromData:(NSData*) data {
  return (tg_req_stock_pool_msg*)[[[tg_req_stock_pool_msg builder] mergeFromData:data] build];
}
+ (tg_req_stock_pool_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_req_stock_pool_msg*)[[[tg_req_stock_pool_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_req_stock_pool_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_req_stock_pool_msg*)[[[tg_req_stock_pool_msg builder] mergeFromInputStream:input] build];
}
+ (tg_req_stock_pool_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_req_stock_pool_msg*)[[[tg_req_stock_pool_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_req_stock_pool_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_req_stock_pool_msg*)[[[tg_req_stock_pool_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_req_stock_pool_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_req_stock_pool_msg*)[[[tg_req_stock_pool_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_req_stock_pool_msgBuilder*) builder {
  return [[tg_req_stock_pool_msgBuilder alloc] init];
}
+ (tg_req_stock_pool_msgBuilder*) builderWithPrototype:(tg_req_stock_pool_msg*) prototype {
  return [[tg_req_stock_pool_msg builder] mergeFrom:prototype];
}
- (tg_req_stock_pool_msgBuilder*) builder {
  return [tg_req_stock_pool_msg builder];
}
- (tg_req_stock_pool_msgBuilder*) toBuilder {
  return [tg_req_stock_pool_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionId", [NSNumber numberWithLongLong:self.versionId]];
  }
  if (self.hasPid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pid", [NSNumber numberWithInteger:self.pid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasVersionId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.versionId] forKey: @"versionId"];
  }
  if (self.hasPid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pid] forKey: @"pid"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_req_stock_pool_msg class]]) {
    return NO;
  }
  tg_req_stock_pool_msg *otherMessage = other;
  return
      self.hasVersionId == otherMessage.hasVersionId &&
      (!self.hasVersionId || self.versionId == otherMessage.versionId) &&
      self.hasPid == otherMessage.hasPid &&
      (!self.hasPid || self.pid == otherMessage.pid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVersionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.versionId] hash];
  }
  if (self.hasPid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_req_stock_pool_msgBuilder()
@property (strong) tg_req_stock_pool_msg* resultTgReqStockPoolMsg;
@end

@implementation tg_req_stock_pool_msgBuilder
@synthesize resultTgReqStockPoolMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgReqStockPoolMsg = [[tg_req_stock_pool_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgReqStockPoolMsg;
}
- (tg_req_stock_pool_msgBuilder*) clear {
  self.resultTgReqStockPoolMsg = [[tg_req_stock_pool_msg alloc] init];
  return self;
}
- (tg_req_stock_pool_msgBuilder*) clone {
  return [tg_req_stock_pool_msg builderWithPrototype:resultTgReqStockPoolMsg];
}
- (tg_req_stock_pool_msg*) defaultInstance {
  return [tg_req_stock_pool_msg defaultInstance];
}
- (tg_req_stock_pool_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_req_stock_pool_msg*) buildPartial {
  tg_req_stock_pool_msg* returnMe = resultTgReqStockPoolMsg;
  self.resultTgReqStockPoolMsg = nil;
  return returnMe;
}
- (tg_req_stock_pool_msgBuilder*) mergeFrom:(tg_req_stock_pool_msg*) other {
  if (other == [tg_req_stock_pool_msg defaultInstance]) {
    return self;
  }
  if (other.hasVersionId) {
    [self setVersionId:other.versionId];
  }
  if (other.hasPid) {
    [self setPid:other.pid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_req_stock_pool_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_req_stock_pool_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVersionId:[input readInt64]];
        break;
      }
      case 16: {
        [self setPid:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasVersionId {
  return resultTgReqStockPoolMsg.hasVersionId;
}
- (SInt64) versionId {
  return resultTgReqStockPoolMsg.versionId;
}
- (tg_req_stock_pool_msgBuilder*) setVersionId:(SInt64) value {
  resultTgReqStockPoolMsg.hasVersionId = YES;
  resultTgReqStockPoolMsg.versionId = value;
  return self;
}
- (tg_req_stock_pool_msgBuilder*) clearVersionId {
  resultTgReqStockPoolMsg.hasVersionId = NO;
  resultTgReqStockPoolMsg.versionId = 0L;
  return self;
}
- (BOOL) hasPid {
  return resultTgReqStockPoolMsg.hasPid;
}
- (SInt32) pid {
  return resultTgReqStockPoolMsg.pid;
}
- (tg_req_stock_pool_msgBuilder*) setPid:(SInt32) value {
  resultTgReqStockPoolMsg.hasPid = YES;
  resultTgReqStockPoolMsg.pid = value;
  return self;
}
- (tg_req_stock_pool_msgBuilder*) clearPid {
  resultTgReqStockPoolMsg.hasPid = NO;
  resultTgReqStockPoolMsg.pid = 0;
  return self;
}
@end

@interface tg_stock_pool_msg ()
@property SInt64 versionId;
@property (strong) NSMutableArray * stocksArray;
@property Float64 position;
@end

@implementation tg_stock_pool_msg

- (BOOL) hasVersionId {
  return !!hasVersionId_;
}
- (void) setHasVersionId:(BOOL) _value_ {
  hasVersionId_ = !!_value_;
}
@synthesize versionId;
@synthesize stocksArray;
@dynamic stocks;
- (BOOL) hasPosition {
  return !!hasPosition_;
}
- (void) setHasPosition:(BOOL) _value_ {
  hasPosition_ = !!_value_;
}
@synthesize position;
- (instancetype) init {
  if ((self = [super init])) {
    self.versionId = 0L;
    self.position = 0;
  }
  return self;
}
static tg_stock_pool_msg* defaulttg_stock_pool_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_stock_pool_msg class]) {
    defaulttg_stock_pool_msgInstance = [[tg_stock_pool_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_stock_pool_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_stock_pool_msgInstance;
}
- (NSArray *)stocks {
  return stocksArray;
}
- (tg_stock_att*)stocksAtIndex:(NSUInteger)index {
  return [stocksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasVersionId) {
    return NO;
  }
  if (!self.hasPosition) {
    return NO;
  }
  __block BOOL isInitstocks = YES;
   [self.stocks enumerateObjectsUsingBlock:^(tg_stock_att *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitstocks = NO;
      *stop = YES;
    }
  }];
  if (!isInitstocks) return isInitstocks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersionId) {
    [output writeInt64:1 value:self.versionId];
  }
  [self.stocksArray enumerateObjectsUsingBlock:^(tg_stock_att *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasPosition) {
    [output writeDouble:3 value:self.position];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersionId) {
    size_ += computeInt64Size(1, self.versionId);
  }
  [self.stocksArray enumerateObjectsUsingBlock:^(tg_stock_att *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasPosition) {
    size_ += computeDoubleSize(3, self.position);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_stock_pool_msg*) parseFromData:(NSData*) data {
  return (tg_stock_pool_msg*)[[[tg_stock_pool_msg builder] mergeFromData:data] build];
}
+ (tg_stock_pool_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_pool_msg*)[[[tg_stock_pool_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_pool_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_stock_pool_msg*)[[[tg_stock_pool_msg builder] mergeFromInputStream:input] build];
}
+ (tg_stock_pool_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_pool_msg*)[[[tg_stock_pool_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_pool_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_stock_pool_msg*)[[[tg_stock_pool_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_stock_pool_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_pool_msg*)[[[tg_stock_pool_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_pool_msgBuilder*) builder {
  return [[tg_stock_pool_msgBuilder alloc] init];
}
+ (tg_stock_pool_msgBuilder*) builderWithPrototype:(tg_stock_pool_msg*) prototype {
  return [[tg_stock_pool_msg builder] mergeFrom:prototype];
}
- (tg_stock_pool_msgBuilder*) builder {
  return [tg_stock_pool_msg builder];
}
- (tg_stock_pool_msgBuilder*) toBuilder {
  return [tg_stock_pool_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionId", [NSNumber numberWithLongLong:self.versionId]];
  }
  [self.stocksArray enumerateObjectsUsingBlock:^(tg_stock_att *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"stocks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasPosition) {
    [output appendFormat:@"%@%@: %@\n", indent, @"position", [NSNumber numberWithDouble:self.position]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasVersionId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.versionId] forKey: @"versionId"];
  }
  for (tg_stock_att* element in self.stocksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"stocks"];
  }
  if (self.hasPosition) {
    [dictionary setObject: [NSNumber numberWithDouble:self.position] forKey: @"position"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_stock_pool_msg class]]) {
    return NO;
  }
  tg_stock_pool_msg *otherMessage = other;
  return
      self.hasVersionId == otherMessage.hasVersionId &&
      (!self.hasVersionId || self.versionId == otherMessage.versionId) &&
      [self.stocksArray isEqualToArray:otherMessage.stocksArray] &&
      self.hasPosition == otherMessage.hasPosition &&
      (!self.hasPosition || self.position == otherMessage.position) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVersionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.versionId] hash];
  }
  [self.stocksArray enumerateObjectsUsingBlock:^(tg_stock_att *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasPosition) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.position] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_stock_pool_msgBuilder()
@property (strong) tg_stock_pool_msg* resultTgStockPoolMsg;
@end

@implementation tg_stock_pool_msgBuilder
@synthesize resultTgStockPoolMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgStockPoolMsg = [[tg_stock_pool_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgStockPoolMsg;
}
- (tg_stock_pool_msgBuilder*) clear {
  self.resultTgStockPoolMsg = [[tg_stock_pool_msg alloc] init];
  return self;
}
- (tg_stock_pool_msgBuilder*) clone {
  return [tg_stock_pool_msg builderWithPrototype:resultTgStockPoolMsg];
}
- (tg_stock_pool_msg*) defaultInstance {
  return [tg_stock_pool_msg defaultInstance];
}
- (tg_stock_pool_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_stock_pool_msg*) buildPartial {
  tg_stock_pool_msg* returnMe = resultTgStockPoolMsg;
  self.resultTgStockPoolMsg = nil;
  return returnMe;
}
- (tg_stock_pool_msgBuilder*) mergeFrom:(tg_stock_pool_msg*) other {
  if (other == [tg_stock_pool_msg defaultInstance]) {
    return self;
  }
  if (other.hasVersionId) {
    [self setVersionId:other.versionId];
  }
  if (other.stocksArray.count > 0) {
    if (resultTgStockPoolMsg.stocksArray == nil) {
      resultTgStockPoolMsg.stocksArray = [[NSMutableArray alloc] initWithArray:other.stocksArray];
    } else {
      [resultTgStockPoolMsg.stocksArray addObjectsFromArray:other.stocksArray];
    }
  }
  if (other.hasPosition) {
    [self setPosition:other.position];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_stock_pool_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_stock_pool_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVersionId:[input readInt64]];
        break;
      }
      case 18: {
        tg_stock_attBuilder* subBuilder = [tg_stock_att builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addStocks:[subBuilder buildPartial]];
        break;
      }
      case 25: {
        [self setPosition:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasVersionId {
  return resultTgStockPoolMsg.hasVersionId;
}
- (SInt64) versionId {
  return resultTgStockPoolMsg.versionId;
}
- (tg_stock_pool_msgBuilder*) setVersionId:(SInt64) value {
  resultTgStockPoolMsg.hasVersionId = YES;
  resultTgStockPoolMsg.versionId = value;
  return self;
}
- (tg_stock_pool_msgBuilder*) clearVersionId {
  resultTgStockPoolMsg.hasVersionId = NO;
  resultTgStockPoolMsg.versionId = 0L;
  return self;
}
- (NSMutableArray *)stocks {
  return resultTgStockPoolMsg.stocksArray;
}
- (tg_stock_att*)stocksAtIndex:(NSUInteger)index {
  return [resultTgStockPoolMsg stocksAtIndex:index];
}
- (tg_stock_pool_msgBuilder *)addStocks:(tg_stock_att*)value {
  if (resultTgStockPoolMsg.stocksArray == nil) {
    resultTgStockPoolMsg.stocksArray = [[NSMutableArray alloc]init];
  }
  [resultTgStockPoolMsg.stocksArray addObject:value];
  return self;
}
- (tg_stock_pool_msgBuilder *)setStocksArray:(NSArray *)array {
  resultTgStockPoolMsg.stocksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (tg_stock_pool_msgBuilder *)clearStocks {
  resultTgStockPoolMsg.stocksArray = nil;
  return self;
}
- (BOOL) hasPosition {
  return resultTgStockPoolMsg.hasPosition;
}
- (Float64) position {
  return resultTgStockPoolMsg.position;
}
- (tg_stock_pool_msgBuilder*) setPosition:(Float64) value {
  resultTgStockPoolMsg.hasPosition = YES;
  resultTgStockPoolMsg.position = value;
  return self;
}
- (tg_stock_pool_msgBuilder*) clearPosition {
  resultTgStockPoolMsg.hasPosition = NO;
  resultTgStockPoolMsg.position = 0;
  return self;
}
@end

@interface tg_stock_in_pool_notify_msg ()
@property SInt64 date;
@property (strong) NSString* code;
@property (strong) NSString* name;
@property Float32 lowPrice;
@property Float32 highPrice;
@property Float32 targetPrice;
@property Float32 stopPrice;
@end

@implementation tg_stock_in_pool_notify_msg

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasLowPrice {
  return !!hasLowPrice_;
}
- (void) setHasLowPrice:(BOOL) _value_ {
  hasLowPrice_ = !!_value_;
}
@synthesize lowPrice;
- (BOOL) hasHighPrice {
  return !!hasHighPrice_;
}
- (void) setHasHighPrice:(BOOL) _value_ {
  hasHighPrice_ = !!_value_;
}
@synthesize highPrice;
- (BOOL) hasTargetPrice {
  return !!hasTargetPrice_;
}
- (void) setHasTargetPrice:(BOOL) _value_ {
  hasTargetPrice_ = !!_value_;
}
@synthesize targetPrice;
- (BOOL) hasStopPrice {
  return !!hasStopPrice_;
}
- (void) setHasStopPrice:(BOOL) _value_ {
  hasStopPrice_ = !!_value_;
}
@synthesize stopPrice;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
    self.code = @"";
    self.name = @"";
    self.lowPrice = 0;
    self.highPrice = 0;
    self.targetPrice = 0;
    self.stopPrice = 0;
  }
  return self;
}
static tg_stock_in_pool_notify_msg* defaulttg_stock_in_pool_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_stock_in_pool_notify_msg class]) {
    defaulttg_stock_in_pool_notify_msgInstance = [[tg_stock_in_pool_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_stock_in_pool_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_stock_in_pool_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasLowPrice) {
    return NO;
  }
  if (!self.hasHighPrice) {
    return NO;
  }
  if (!self.hasTargetPrice) {
    return NO;
  }
  if (!self.hasStopPrice) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasLowPrice) {
    [output writeFloat:4 value:self.lowPrice];
  }
  if (self.hasHighPrice) {
    [output writeFloat:5 value:self.highPrice];
  }
  if (self.hasTargetPrice) {
    [output writeFloat:6 value:self.targetPrice];
  }
  if (self.hasStopPrice) {
    [output writeFloat:7 value:self.stopPrice];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  if (self.hasLowPrice) {
    size_ += computeFloatSize(4, self.lowPrice);
  }
  if (self.hasHighPrice) {
    size_ += computeFloatSize(5, self.highPrice);
  }
  if (self.hasTargetPrice) {
    size_ += computeFloatSize(6, self.targetPrice);
  }
  if (self.hasStopPrice) {
    size_ += computeFloatSize(7, self.stopPrice);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_stock_in_pool_notify_msg*) parseFromData:(NSData*) data {
  return (tg_stock_in_pool_notify_msg*)[[[tg_stock_in_pool_notify_msg builder] mergeFromData:data] build];
}
+ (tg_stock_in_pool_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_in_pool_notify_msg*)[[[tg_stock_in_pool_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_in_pool_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_stock_in_pool_notify_msg*)[[[tg_stock_in_pool_notify_msg builder] mergeFromInputStream:input] build];
}
+ (tg_stock_in_pool_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_in_pool_notify_msg*)[[[tg_stock_in_pool_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_in_pool_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_stock_in_pool_notify_msg*)[[[tg_stock_in_pool_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_stock_in_pool_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_in_pool_notify_msg*)[[[tg_stock_in_pool_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_in_pool_notify_msgBuilder*) builder {
  return [[tg_stock_in_pool_notify_msgBuilder alloc] init];
}
+ (tg_stock_in_pool_notify_msgBuilder*) builderWithPrototype:(tg_stock_in_pool_notify_msg*) prototype {
  return [[tg_stock_in_pool_notify_msg builder] mergeFrom:prototype];
}
- (tg_stock_in_pool_notify_msgBuilder*) builder {
  return [tg_stock_in_pool_notify_msg builder];
}
- (tg_stock_in_pool_notify_msgBuilder*) toBuilder {
  return [tg_stock_in_pool_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasLowPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lowPrice", [NSNumber numberWithFloat:self.lowPrice]];
  }
  if (self.hasHighPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"highPrice", [NSNumber numberWithFloat:self.highPrice]];
  }
  if (self.hasTargetPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetPrice", [NSNumber numberWithFloat:self.targetPrice]];
  }
  if (self.hasStopPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"stopPrice", [NSNumber numberWithFloat:self.stopPrice]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasLowPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.lowPrice] forKey: @"lowPrice"];
  }
  if (self.hasHighPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.highPrice] forKey: @"highPrice"];
  }
  if (self.hasTargetPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.targetPrice] forKey: @"targetPrice"];
  }
  if (self.hasStopPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.stopPrice] forKey: @"stopPrice"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_stock_in_pool_notify_msg class]]) {
    return NO;
  }
  tg_stock_in_pool_notify_msg *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasLowPrice == otherMessage.hasLowPrice &&
      (!self.hasLowPrice || self.lowPrice == otherMessage.lowPrice) &&
      self.hasHighPrice == otherMessage.hasHighPrice &&
      (!self.hasHighPrice || self.highPrice == otherMessage.highPrice) &&
      self.hasTargetPrice == otherMessage.hasTargetPrice &&
      (!self.hasTargetPrice || self.targetPrice == otherMessage.targetPrice) &&
      self.hasStopPrice == otherMessage.hasStopPrice &&
      (!self.hasStopPrice || self.stopPrice == otherMessage.stopPrice) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasLowPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.lowPrice] hash];
  }
  if (self.hasHighPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.highPrice] hash];
  }
  if (self.hasTargetPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.targetPrice] hash];
  }
  if (self.hasStopPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.stopPrice] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_stock_in_pool_notify_msgBuilder()
@property (strong) tg_stock_in_pool_notify_msg* resultTgStockInPoolNotifyMsg;
@end

@implementation tg_stock_in_pool_notify_msgBuilder
@synthesize resultTgStockInPoolNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgStockInPoolNotifyMsg = [[tg_stock_in_pool_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgStockInPoolNotifyMsg;
}
- (tg_stock_in_pool_notify_msgBuilder*) clear {
  self.resultTgStockInPoolNotifyMsg = [[tg_stock_in_pool_notify_msg alloc] init];
  return self;
}
- (tg_stock_in_pool_notify_msgBuilder*) clone {
  return [tg_stock_in_pool_notify_msg builderWithPrototype:resultTgStockInPoolNotifyMsg];
}
- (tg_stock_in_pool_notify_msg*) defaultInstance {
  return [tg_stock_in_pool_notify_msg defaultInstance];
}
- (tg_stock_in_pool_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_stock_in_pool_notify_msg*) buildPartial {
  tg_stock_in_pool_notify_msg* returnMe = resultTgStockInPoolNotifyMsg;
  self.resultTgStockInPoolNotifyMsg = nil;
  return returnMe;
}
- (tg_stock_in_pool_notify_msgBuilder*) mergeFrom:(tg_stock_in_pool_notify_msg*) other {
  if (other == [tg_stock_in_pool_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasLowPrice) {
    [self setLowPrice:other.lowPrice];
  }
  if (other.hasHighPrice) {
    [self setHighPrice:other.highPrice];
  }
  if (other.hasTargetPrice) {
    [self setTargetPrice:other.targetPrice];
  }
  if (other.hasStopPrice) {
    [self setStopPrice:other.stopPrice];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_stock_in_pool_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_stock_in_pool_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 37: {
        [self setLowPrice:[input readFloat]];
        break;
      }
      case 45: {
        [self setHighPrice:[input readFloat]];
        break;
      }
      case 53: {
        [self setTargetPrice:[input readFloat]];
        break;
      }
      case 61: {
        [self setStopPrice:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultTgStockInPoolNotifyMsg.hasDate;
}
- (SInt64) date {
  return resultTgStockInPoolNotifyMsg.date;
}
- (tg_stock_in_pool_notify_msgBuilder*) setDate:(SInt64) value {
  resultTgStockInPoolNotifyMsg.hasDate = YES;
  resultTgStockInPoolNotifyMsg.date = value;
  return self;
}
- (tg_stock_in_pool_notify_msgBuilder*) clearDate {
  resultTgStockInPoolNotifyMsg.hasDate = NO;
  resultTgStockInPoolNotifyMsg.date = 0L;
  return self;
}
- (BOOL) hasCode {
  return resultTgStockInPoolNotifyMsg.hasCode;
}
- (NSString*) code {
  return resultTgStockInPoolNotifyMsg.code;
}
- (tg_stock_in_pool_notify_msgBuilder*) setCode:(NSString*) value {
  resultTgStockInPoolNotifyMsg.hasCode = YES;
  resultTgStockInPoolNotifyMsg.code = value;
  return self;
}
- (tg_stock_in_pool_notify_msgBuilder*) clearCode {
  resultTgStockInPoolNotifyMsg.hasCode = NO;
  resultTgStockInPoolNotifyMsg.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultTgStockInPoolNotifyMsg.hasName;
}
- (NSString*) name {
  return resultTgStockInPoolNotifyMsg.name;
}
- (tg_stock_in_pool_notify_msgBuilder*) setName:(NSString*) value {
  resultTgStockInPoolNotifyMsg.hasName = YES;
  resultTgStockInPoolNotifyMsg.name = value;
  return self;
}
- (tg_stock_in_pool_notify_msgBuilder*) clearName {
  resultTgStockInPoolNotifyMsg.hasName = NO;
  resultTgStockInPoolNotifyMsg.name = @"";
  return self;
}
- (BOOL) hasLowPrice {
  return resultTgStockInPoolNotifyMsg.hasLowPrice;
}
- (Float32) lowPrice {
  return resultTgStockInPoolNotifyMsg.lowPrice;
}
- (tg_stock_in_pool_notify_msgBuilder*) setLowPrice:(Float32) value {
  resultTgStockInPoolNotifyMsg.hasLowPrice = YES;
  resultTgStockInPoolNotifyMsg.lowPrice = value;
  return self;
}
- (tg_stock_in_pool_notify_msgBuilder*) clearLowPrice {
  resultTgStockInPoolNotifyMsg.hasLowPrice = NO;
  resultTgStockInPoolNotifyMsg.lowPrice = 0;
  return self;
}
- (BOOL) hasHighPrice {
  return resultTgStockInPoolNotifyMsg.hasHighPrice;
}
- (Float32) highPrice {
  return resultTgStockInPoolNotifyMsg.highPrice;
}
- (tg_stock_in_pool_notify_msgBuilder*) setHighPrice:(Float32) value {
  resultTgStockInPoolNotifyMsg.hasHighPrice = YES;
  resultTgStockInPoolNotifyMsg.highPrice = value;
  return self;
}
- (tg_stock_in_pool_notify_msgBuilder*) clearHighPrice {
  resultTgStockInPoolNotifyMsg.hasHighPrice = NO;
  resultTgStockInPoolNotifyMsg.highPrice = 0;
  return self;
}
- (BOOL) hasTargetPrice {
  return resultTgStockInPoolNotifyMsg.hasTargetPrice;
}
- (Float32) targetPrice {
  return resultTgStockInPoolNotifyMsg.targetPrice;
}
- (tg_stock_in_pool_notify_msgBuilder*) setTargetPrice:(Float32) value {
  resultTgStockInPoolNotifyMsg.hasTargetPrice = YES;
  resultTgStockInPoolNotifyMsg.targetPrice = value;
  return self;
}
- (tg_stock_in_pool_notify_msgBuilder*) clearTargetPrice {
  resultTgStockInPoolNotifyMsg.hasTargetPrice = NO;
  resultTgStockInPoolNotifyMsg.targetPrice = 0;
  return self;
}
- (BOOL) hasStopPrice {
  return resultTgStockInPoolNotifyMsg.hasStopPrice;
}
- (Float32) stopPrice {
  return resultTgStockInPoolNotifyMsg.stopPrice;
}
- (tg_stock_in_pool_notify_msgBuilder*) setStopPrice:(Float32) value {
  resultTgStockInPoolNotifyMsg.hasStopPrice = YES;
  resultTgStockInPoolNotifyMsg.stopPrice = value;
  return self;
}
- (tg_stock_in_pool_notify_msgBuilder*) clearStopPrice {
  resultTgStockInPoolNotifyMsg.hasStopPrice = NO;
  resultTgStockInPoolNotifyMsg.stopPrice = 0;
  return self;
}
@end

@interface tg_stock_buy_notify_msg ()
@property SInt64 date;
@property (strong) NSString* code;
@property (strong) NSString* name;
@property Float32 buyPrice;
@property Float32 targetPrice;
@property Float32 stopPrice;
@property BOOL autoBuy;
@end

@implementation tg_stock_buy_notify_msg

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasBuyPrice {
  return !!hasBuyPrice_;
}
- (void) setHasBuyPrice:(BOOL) _value_ {
  hasBuyPrice_ = !!_value_;
}
@synthesize buyPrice;
- (BOOL) hasTargetPrice {
  return !!hasTargetPrice_;
}
- (void) setHasTargetPrice:(BOOL) _value_ {
  hasTargetPrice_ = !!_value_;
}
@synthesize targetPrice;
- (BOOL) hasStopPrice {
  return !!hasStopPrice_;
}
- (void) setHasStopPrice:(BOOL) _value_ {
  hasStopPrice_ = !!_value_;
}
@synthesize stopPrice;
- (BOOL) hasAutoBuy {
  return !!hasAutoBuy_;
}
- (void) setHasAutoBuy:(BOOL) _value_ {
  hasAutoBuy_ = !!_value_;
}
- (BOOL) autoBuy {
  return !!autoBuy_;
}
- (void) setAutoBuy:(BOOL) _value_ {
  autoBuy_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
    self.code = @"";
    self.name = @"";
    self.buyPrice = 0;
    self.targetPrice = 0;
    self.stopPrice = 0;
    self.autoBuy = NO;
  }
  return self;
}
static tg_stock_buy_notify_msg* defaulttg_stock_buy_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_stock_buy_notify_msg class]) {
    defaulttg_stock_buy_notify_msgInstance = [[tg_stock_buy_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_stock_buy_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_stock_buy_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasBuyPrice) {
    return NO;
  }
  if (!self.hasTargetPrice) {
    return NO;
  }
  if (!self.hasStopPrice) {
    return NO;
  }
  if (!self.hasAutoBuy) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasBuyPrice) {
    [output writeFloat:4 value:self.buyPrice];
  }
  if (self.hasTargetPrice) {
    [output writeFloat:5 value:self.targetPrice];
  }
  if (self.hasStopPrice) {
    [output writeFloat:6 value:self.stopPrice];
  }
  if (self.hasAutoBuy) {
    [output writeBool:8 value:self.autoBuy];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  if (self.hasBuyPrice) {
    size_ += computeFloatSize(4, self.buyPrice);
  }
  if (self.hasTargetPrice) {
    size_ += computeFloatSize(5, self.targetPrice);
  }
  if (self.hasStopPrice) {
    size_ += computeFloatSize(6, self.stopPrice);
  }
  if (self.hasAutoBuy) {
    size_ += computeBoolSize(8, self.autoBuy);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_stock_buy_notify_msg*) parseFromData:(NSData*) data {
  return (tg_stock_buy_notify_msg*)[[[tg_stock_buy_notify_msg builder] mergeFromData:data] build];
}
+ (tg_stock_buy_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_buy_notify_msg*)[[[tg_stock_buy_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_buy_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_stock_buy_notify_msg*)[[[tg_stock_buy_notify_msg builder] mergeFromInputStream:input] build];
}
+ (tg_stock_buy_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_buy_notify_msg*)[[[tg_stock_buy_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_buy_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_stock_buy_notify_msg*)[[[tg_stock_buy_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_stock_buy_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_buy_notify_msg*)[[[tg_stock_buy_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_buy_notify_msgBuilder*) builder {
  return [[tg_stock_buy_notify_msgBuilder alloc] init];
}
+ (tg_stock_buy_notify_msgBuilder*) builderWithPrototype:(tg_stock_buy_notify_msg*) prototype {
  return [[tg_stock_buy_notify_msg builder] mergeFrom:prototype];
}
- (tg_stock_buy_notify_msgBuilder*) builder {
  return [tg_stock_buy_notify_msg builder];
}
- (tg_stock_buy_notify_msgBuilder*) toBuilder {
  return [tg_stock_buy_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasBuyPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buyPrice", [NSNumber numberWithFloat:self.buyPrice]];
  }
  if (self.hasTargetPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetPrice", [NSNumber numberWithFloat:self.targetPrice]];
  }
  if (self.hasStopPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"stopPrice", [NSNumber numberWithFloat:self.stopPrice]];
  }
  if (self.hasAutoBuy) {
    [output appendFormat:@"%@%@: %@\n", indent, @"autoBuy", [NSNumber numberWithBool:self.autoBuy]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasBuyPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.buyPrice] forKey: @"buyPrice"];
  }
  if (self.hasTargetPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.targetPrice] forKey: @"targetPrice"];
  }
  if (self.hasStopPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.stopPrice] forKey: @"stopPrice"];
  }
  if (self.hasAutoBuy) {
    [dictionary setObject: [NSNumber numberWithBool:self.autoBuy] forKey: @"autoBuy"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_stock_buy_notify_msg class]]) {
    return NO;
  }
  tg_stock_buy_notify_msg *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasBuyPrice == otherMessage.hasBuyPrice &&
      (!self.hasBuyPrice || self.buyPrice == otherMessage.buyPrice) &&
      self.hasTargetPrice == otherMessage.hasTargetPrice &&
      (!self.hasTargetPrice || self.targetPrice == otherMessage.targetPrice) &&
      self.hasStopPrice == otherMessage.hasStopPrice &&
      (!self.hasStopPrice || self.stopPrice == otherMessage.stopPrice) &&
      self.hasAutoBuy == otherMessage.hasAutoBuy &&
      (!self.hasAutoBuy || self.autoBuy == otherMessage.autoBuy) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasBuyPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.buyPrice] hash];
  }
  if (self.hasTargetPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.targetPrice] hash];
  }
  if (self.hasStopPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.stopPrice] hash];
  }
  if (self.hasAutoBuy) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.autoBuy] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_stock_buy_notify_msgBuilder()
@property (strong) tg_stock_buy_notify_msg* resultTgStockBuyNotifyMsg;
@end

@implementation tg_stock_buy_notify_msgBuilder
@synthesize resultTgStockBuyNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgStockBuyNotifyMsg = [[tg_stock_buy_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgStockBuyNotifyMsg;
}
- (tg_stock_buy_notify_msgBuilder*) clear {
  self.resultTgStockBuyNotifyMsg = [[tg_stock_buy_notify_msg alloc] init];
  return self;
}
- (tg_stock_buy_notify_msgBuilder*) clone {
  return [tg_stock_buy_notify_msg builderWithPrototype:resultTgStockBuyNotifyMsg];
}
- (tg_stock_buy_notify_msg*) defaultInstance {
  return [tg_stock_buy_notify_msg defaultInstance];
}
- (tg_stock_buy_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_stock_buy_notify_msg*) buildPartial {
  tg_stock_buy_notify_msg* returnMe = resultTgStockBuyNotifyMsg;
  self.resultTgStockBuyNotifyMsg = nil;
  return returnMe;
}
- (tg_stock_buy_notify_msgBuilder*) mergeFrom:(tg_stock_buy_notify_msg*) other {
  if (other == [tg_stock_buy_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasBuyPrice) {
    [self setBuyPrice:other.buyPrice];
  }
  if (other.hasTargetPrice) {
    [self setTargetPrice:other.targetPrice];
  }
  if (other.hasStopPrice) {
    [self setStopPrice:other.stopPrice];
  }
  if (other.hasAutoBuy) {
    [self setAutoBuy:other.autoBuy];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_stock_buy_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_stock_buy_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 37: {
        [self setBuyPrice:[input readFloat]];
        break;
      }
      case 45: {
        [self setTargetPrice:[input readFloat]];
        break;
      }
      case 53: {
        [self setStopPrice:[input readFloat]];
        break;
      }
      case 64: {
        [self setAutoBuy:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultTgStockBuyNotifyMsg.hasDate;
}
- (SInt64) date {
  return resultTgStockBuyNotifyMsg.date;
}
- (tg_stock_buy_notify_msgBuilder*) setDate:(SInt64) value {
  resultTgStockBuyNotifyMsg.hasDate = YES;
  resultTgStockBuyNotifyMsg.date = value;
  return self;
}
- (tg_stock_buy_notify_msgBuilder*) clearDate {
  resultTgStockBuyNotifyMsg.hasDate = NO;
  resultTgStockBuyNotifyMsg.date = 0L;
  return self;
}
- (BOOL) hasCode {
  return resultTgStockBuyNotifyMsg.hasCode;
}
- (NSString*) code {
  return resultTgStockBuyNotifyMsg.code;
}
- (tg_stock_buy_notify_msgBuilder*) setCode:(NSString*) value {
  resultTgStockBuyNotifyMsg.hasCode = YES;
  resultTgStockBuyNotifyMsg.code = value;
  return self;
}
- (tg_stock_buy_notify_msgBuilder*) clearCode {
  resultTgStockBuyNotifyMsg.hasCode = NO;
  resultTgStockBuyNotifyMsg.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultTgStockBuyNotifyMsg.hasName;
}
- (NSString*) name {
  return resultTgStockBuyNotifyMsg.name;
}
- (tg_stock_buy_notify_msgBuilder*) setName:(NSString*) value {
  resultTgStockBuyNotifyMsg.hasName = YES;
  resultTgStockBuyNotifyMsg.name = value;
  return self;
}
- (tg_stock_buy_notify_msgBuilder*) clearName {
  resultTgStockBuyNotifyMsg.hasName = NO;
  resultTgStockBuyNotifyMsg.name = @"";
  return self;
}
- (BOOL) hasBuyPrice {
  return resultTgStockBuyNotifyMsg.hasBuyPrice;
}
- (Float32) buyPrice {
  return resultTgStockBuyNotifyMsg.buyPrice;
}
- (tg_stock_buy_notify_msgBuilder*) setBuyPrice:(Float32) value {
  resultTgStockBuyNotifyMsg.hasBuyPrice = YES;
  resultTgStockBuyNotifyMsg.buyPrice = value;
  return self;
}
- (tg_stock_buy_notify_msgBuilder*) clearBuyPrice {
  resultTgStockBuyNotifyMsg.hasBuyPrice = NO;
  resultTgStockBuyNotifyMsg.buyPrice = 0;
  return self;
}
- (BOOL) hasTargetPrice {
  return resultTgStockBuyNotifyMsg.hasTargetPrice;
}
- (Float32) targetPrice {
  return resultTgStockBuyNotifyMsg.targetPrice;
}
- (tg_stock_buy_notify_msgBuilder*) setTargetPrice:(Float32) value {
  resultTgStockBuyNotifyMsg.hasTargetPrice = YES;
  resultTgStockBuyNotifyMsg.targetPrice = value;
  return self;
}
- (tg_stock_buy_notify_msgBuilder*) clearTargetPrice {
  resultTgStockBuyNotifyMsg.hasTargetPrice = NO;
  resultTgStockBuyNotifyMsg.targetPrice = 0;
  return self;
}
- (BOOL) hasStopPrice {
  return resultTgStockBuyNotifyMsg.hasStopPrice;
}
- (Float32) stopPrice {
  return resultTgStockBuyNotifyMsg.stopPrice;
}
- (tg_stock_buy_notify_msgBuilder*) setStopPrice:(Float32) value {
  resultTgStockBuyNotifyMsg.hasStopPrice = YES;
  resultTgStockBuyNotifyMsg.stopPrice = value;
  return self;
}
- (tg_stock_buy_notify_msgBuilder*) clearStopPrice {
  resultTgStockBuyNotifyMsg.hasStopPrice = NO;
  resultTgStockBuyNotifyMsg.stopPrice = 0;
  return self;
}
- (BOOL) hasAutoBuy {
  return resultTgStockBuyNotifyMsg.hasAutoBuy;
}
- (BOOL) autoBuy {
  return resultTgStockBuyNotifyMsg.autoBuy;
}
- (tg_stock_buy_notify_msgBuilder*) setAutoBuy:(BOOL) value {
  resultTgStockBuyNotifyMsg.hasAutoBuy = YES;
  resultTgStockBuyNotifyMsg.autoBuy = value;
  return self;
}
- (tg_stock_buy_notify_msgBuilder*) clearAutoBuy {
  resultTgStockBuyNotifyMsg.hasAutoBuy = NO;
  resultTgStockBuyNotifyMsg.autoBuy = NO;
  return self;
}
@end

@interface tg_stock_out_pool_notify_msg ()
@property SInt64 date;
@property (strong) NSString* code;
@property (strong) NSString* name;
@property (strong) NSString* desc;
@end

@implementation tg_stock_out_pool_notify_msg

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) _value_ {
  hasDesc_ = !!_value_;
}
@synthesize desc;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
    self.code = @"";
    self.name = @"";
    self.desc = @"";
  }
  return self;
}
static tg_stock_out_pool_notify_msg* defaulttg_stock_out_pool_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_stock_out_pool_notify_msg class]) {
    defaulttg_stock_out_pool_notify_msgInstance = [[tg_stock_out_pool_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_stock_out_pool_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_stock_out_pool_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasDesc) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasDesc) {
    [output writeString:4 value:self.desc];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  if (self.hasDesc) {
    size_ += computeStringSize(4, self.desc);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_stock_out_pool_notify_msg*) parseFromData:(NSData*) data {
  return (tg_stock_out_pool_notify_msg*)[[[tg_stock_out_pool_notify_msg builder] mergeFromData:data] build];
}
+ (tg_stock_out_pool_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_out_pool_notify_msg*)[[[tg_stock_out_pool_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_out_pool_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_stock_out_pool_notify_msg*)[[[tg_stock_out_pool_notify_msg builder] mergeFromInputStream:input] build];
}
+ (tg_stock_out_pool_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_out_pool_notify_msg*)[[[tg_stock_out_pool_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_out_pool_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_stock_out_pool_notify_msg*)[[[tg_stock_out_pool_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_stock_out_pool_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_out_pool_notify_msg*)[[[tg_stock_out_pool_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_out_pool_notify_msgBuilder*) builder {
  return [[tg_stock_out_pool_notify_msgBuilder alloc] init];
}
+ (tg_stock_out_pool_notify_msgBuilder*) builderWithPrototype:(tg_stock_out_pool_notify_msg*) prototype {
  return [[tg_stock_out_pool_notify_msg builder] mergeFrom:prototype];
}
- (tg_stock_out_pool_notify_msgBuilder*) builder {
  return [tg_stock_out_pool_notify_msg builder];
}
- (tg_stock_out_pool_notify_msgBuilder*) toBuilder {
  return [tg_stock_out_pool_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"desc", self.desc];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasDesc) {
    [dictionary setObject: self.desc forKey: @"desc"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_stock_out_pool_notify_msg class]]) {
    return NO;
  }
  tg_stock_out_pool_notify_msg *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasDesc == otherMessage.hasDesc &&
      (!self.hasDesc || [self.desc isEqual:otherMessage.desc]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasDesc) {
    hashCode = hashCode * 31 + [self.desc hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_stock_out_pool_notify_msgBuilder()
@property (strong) tg_stock_out_pool_notify_msg* resultTgStockOutPoolNotifyMsg;
@end

@implementation tg_stock_out_pool_notify_msgBuilder
@synthesize resultTgStockOutPoolNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgStockOutPoolNotifyMsg = [[tg_stock_out_pool_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgStockOutPoolNotifyMsg;
}
- (tg_stock_out_pool_notify_msgBuilder*) clear {
  self.resultTgStockOutPoolNotifyMsg = [[tg_stock_out_pool_notify_msg alloc] init];
  return self;
}
- (tg_stock_out_pool_notify_msgBuilder*) clone {
  return [tg_stock_out_pool_notify_msg builderWithPrototype:resultTgStockOutPoolNotifyMsg];
}
- (tg_stock_out_pool_notify_msg*) defaultInstance {
  return [tg_stock_out_pool_notify_msg defaultInstance];
}
- (tg_stock_out_pool_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_stock_out_pool_notify_msg*) buildPartial {
  tg_stock_out_pool_notify_msg* returnMe = resultTgStockOutPoolNotifyMsg;
  self.resultTgStockOutPoolNotifyMsg = nil;
  return returnMe;
}
- (tg_stock_out_pool_notify_msgBuilder*) mergeFrom:(tg_stock_out_pool_notify_msg*) other {
  if (other == [tg_stock_out_pool_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_stock_out_pool_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_stock_out_pool_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self setDesc:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultTgStockOutPoolNotifyMsg.hasDate;
}
- (SInt64) date {
  return resultTgStockOutPoolNotifyMsg.date;
}
- (tg_stock_out_pool_notify_msgBuilder*) setDate:(SInt64) value {
  resultTgStockOutPoolNotifyMsg.hasDate = YES;
  resultTgStockOutPoolNotifyMsg.date = value;
  return self;
}
- (tg_stock_out_pool_notify_msgBuilder*) clearDate {
  resultTgStockOutPoolNotifyMsg.hasDate = NO;
  resultTgStockOutPoolNotifyMsg.date = 0L;
  return self;
}
- (BOOL) hasCode {
  return resultTgStockOutPoolNotifyMsg.hasCode;
}
- (NSString*) code {
  return resultTgStockOutPoolNotifyMsg.code;
}
- (tg_stock_out_pool_notify_msgBuilder*) setCode:(NSString*) value {
  resultTgStockOutPoolNotifyMsg.hasCode = YES;
  resultTgStockOutPoolNotifyMsg.code = value;
  return self;
}
- (tg_stock_out_pool_notify_msgBuilder*) clearCode {
  resultTgStockOutPoolNotifyMsg.hasCode = NO;
  resultTgStockOutPoolNotifyMsg.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultTgStockOutPoolNotifyMsg.hasName;
}
- (NSString*) name {
  return resultTgStockOutPoolNotifyMsg.name;
}
- (tg_stock_out_pool_notify_msgBuilder*) setName:(NSString*) value {
  resultTgStockOutPoolNotifyMsg.hasName = YES;
  resultTgStockOutPoolNotifyMsg.name = value;
  return self;
}
- (tg_stock_out_pool_notify_msgBuilder*) clearName {
  resultTgStockOutPoolNotifyMsg.hasName = NO;
  resultTgStockOutPoolNotifyMsg.name = @"";
  return self;
}
- (BOOL) hasDesc {
  return resultTgStockOutPoolNotifyMsg.hasDesc;
}
- (NSString*) desc {
  return resultTgStockOutPoolNotifyMsg.desc;
}
- (tg_stock_out_pool_notify_msgBuilder*) setDesc:(NSString*) value {
  resultTgStockOutPoolNotifyMsg.hasDesc = YES;
  resultTgStockOutPoolNotifyMsg.desc = value;
  return self;
}
- (tg_stock_out_pool_notify_msgBuilder*) clearDesc {
  resultTgStockOutPoolNotifyMsg.hasDesc = NO;
  resultTgStockOutPoolNotifyMsg.desc = @"";
  return self;
}
@end

@interface tg_stock_new_target_notify_msg ()
@property SInt64 date;
@property (strong) NSString* code;
@property Float32 oldTarget;
@property Float32 newTarget;
@end

@implementation tg_stock_new_target_notify_msg

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasOldTarget {
  return !!hasOldTarget_;
}
- (void) setHasOldTarget:(BOOL) _value_ {
  hasOldTarget_ = !!_value_;
}
@synthesize oldTarget;
- (BOOL) hasNewTarget {
  return !!hasNewTarget_;
}
- (void) setHasNewTarget:(BOOL) _value_ {
  hasNewTarget_ = !!_value_;
}
@synthesize newTarget;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
    self.code = @"";
    self.oldTarget = 0;
    self.newTarget = 0;
  }
  return self;
}
static tg_stock_new_target_notify_msg* defaulttg_stock_new_target_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_stock_new_target_notify_msg class]) {
    defaulttg_stock_new_target_notify_msgInstance = [[tg_stock_new_target_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_stock_new_target_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_stock_new_target_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasOldTarget) {
    return NO;
  }
  if (!self.hasNewTarget) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasOldTarget) {
    [output writeFloat:3 value:self.oldTarget];
  }
  if (self.hasNewTarget) {
    [output writeFloat:4 value:self.newTarget];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasOldTarget) {
    size_ += computeFloatSize(3, self.oldTarget);
  }
  if (self.hasNewTarget) {
    size_ += computeFloatSize(4, self.newTarget);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_stock_new_target_notify_msg*) parseFromData:(NSData*) data {
  return (tg_stock_new_target_notify_msg*)[[[tg_stock_new_target_notify_msg builder] mergeFromData:data] build];
}
+ (tg_stock_new_target_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_new_target_notify_msg*)[[[tg_stock_new_target_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_new_target_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_stock_new_target_notify_msg*)[[[tg_stock_new_target_notify_msg builder] mergeFromInputStream:input] build];
}
+ (tg_stock_new_target_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_new_target_notify_msg*)[[[tg_stock_new_target_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_new_target_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_stock_new_target_notify_msg*)[[[tg_stock_new_target_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_stock_new_target_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_new_target_notify_msg*)[[[tg_stock_new_target_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_new_target_notify_msgBuilder*) builder {
  return [[tg_stock_new_target_notify_msgBuilder alloc] init];
}
+ (tg_stock_new_target_notify_msgBuilder*) builderWithPrototype:(tg_stock_new_target_notify_msg*) prototype {
  return [[tg_stock_new_target_notify_msg builder] mergeFrom:prototype];
}
- (tg_stock_new_target_notify_msgBuilder*) builder {
  return [tg_stock_new_target_notify_msg builder];
}
- (tg_stock_new_target_notify_msgBuilder*) toBuilder {
  return [tg_stock_new_target_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasOldTarget) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oldTarget", [NSNumber numberWithFloat:self.oldTarget]];
  }
  if (self.hasNewTarget) {
    [output appendFormat:@"%@%@: %@\n", indent, @"newTarget", [NSNumber numberWithFloat:self.newTarget]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasOldTarget) {
    [dictionary setObject: [NSNumber numberWithFloat:self.oldTarget] forKey: @"oldTarget"];
  }
  if (self.hasNewTarget) {
    [dictionary setObject: [NSNumber numberWithFloat:self.newTarget] forKey: @"newTarget"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_stock_new_target_notify_msg class]]) {
    return NO;
  }
  tg_stock_new_target_notify_msg *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasOldTarget == otherMessage.hasOldTarget &&
      (!self.hasOldTarget || self.oldTarget == otherMessage.oldTarget) &&
      self.hasNewTarget == otherMessage.hasNewTarget &&
      (!self.hasNewTarget || self.newTarget == otherMessage.newTarget) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasOldTarget) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.oldTarget] hash];
  }
  if (self.hasNewTarget) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.newTarget] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_stock_new_target_notify_msgBuilder()
@property (strong) tg_stock_new_target_notify_msg* resultTgStockNewTargetNotifyMsg;
@end

@implementation tg_stock_new_target_notify_msgBuilder
@synthesize resultTgStockNewTargetNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgStockNewTargetNotifyMsg = [[tg_stock_new_target_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgStockNewTargetNotifyMsg;
}
- (tg_stock_new_target_notify_msgBuilder*) clear {
  self.resultTgStockNewTargetNotifyMsg = [[tg_stock_new_target_notify_msg alloc] init];
  return self;
}
- (tg_stock_new_target_notify_msgBuilder*) clone {
  return [tg_stock_new_target_notify_msg builderWithPrototype:resultTgStockNewTargetNotifyMsg];
}
- (tg_stock_new_target_notify_msg*) defaultInstance {
  return [tg_stock_new_target_notify_msg defaultInstance];
}
- (tg_stock_new_target_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_stock_new_target_notify_msg*) buildPartial {
  tg_stock_new_target_notify_msg* returnMe = resultTgStockNewTargetNotifyMsg;
  self.resultTgStockNewTargetNotifyMsg = nil;
  return returnMe;
}
- (tg_stock_new_target_notify_msgBuilder*) mergeFrom:(tg_stock_new_target_notify_msg*) other {
  if (other == [tg_stock_new_target_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasOldTarget) {
    [self setOldTarget:other.oldTarget];
  }
  if (other.hasNewTarget) {
    [self setNewTarget:other.newTarget];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_stock_new_target_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_stock_new_target_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 29: {
        [self setOldTarget:[input readFloat]];
        break;
      }
      case 37: {
        [self setNewTarget:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultTgStockNewTargetNotifyMsg.hasDate;
}
- (SInt64) date {
  return resultTgStockNewTargetNotifyMsg.date;
}
- (tg_stock_new_target_notify_msgBuilder*) setDate:(SInt64) value {
  resultTgStockNewTargetNotifyMsg.hasDate = YES;
  resultTgStockNewTargetNotifyMsg.date = value;
  return self;
}
- (tg_stock_new_target_notify_msgBuilder*) clearDate {
  resultTgStockNewTargetNotifyMsg.hasDate = NO;
  resultTgStockNewTargetNotifyMsg.date = 0L;
  return self;
}
- (BOOL) hasCode {
  return resultTgStockNewTargetNotifyMsg.hasCode;
}
- (NSString*) code {
  return resultTgStockNewTargetNotifyMsg.code;
}
- (tg_stock_new_target_notify_msgBuilder*) setCode:(NSString*) value {
  resultTgStockNewTargetNotifyMsg.hasCode = YES;
  resultTgStockNewTargetNotifyMsg.code = value;
  return self;
}
- (tg_stock_new_target_notify_msgBuilder*) clearCode {
  resultTgStockNewTargetNotifyMsg.hasCode = NO;
  resultTgStockNewTargetNotifyMsg.code = @"";
  return self;
}
- (BOOL) hasOldTarget {
  return resultTgStockNewTargetNotifyMsg.hasOldTarget;
}
- (Float32) oldTarget {
  return resultTgStockNewTargetNotifyMsg.oldTarget;
}
- (tg_stock_new_target_notify_msgBuilder*) setOldTarget:(Float32) value {
  resultTgStockNewTargetNotifyMsg.hasOldTarget = YES;
  resultTgStockNewTargetNotifyMsg.oldTarget = value;
  return self;
}
- (tg_stock_new_target_notify_msgBuilder*) clearOldTarget {
  resultTgStockNewTargetNotifyMsg.hasOldTarget = NO;
  resultTgStockNewTargetNotifyMsg.oldTarget = 0;
  return self;
}
- (BOOL) hasNewTarget {
  return resultTgStockNewTargetNotifyMsg.hasNewTarget;
}
- (Float32) newTarget {
  return resultTgStockNewTargetNotifyMsg.newTarget;
}
- (tg_stock_new_target_notify_msgBuilder*) setNewTarget:(Float32) value {
  resultTgStockNewTargetNotifyMsg.hasNewTarget = YES;
  resultTgStockNewTargetNotifyMsg.newTarget = value;
  return self;
}
- (tg_stock_new_target_notify_msgBuilder*) clearNewTarget {
  resultTgStockNewTargetNotifyMsg.hasNewTarget = NO;
  resultTgStockNewTargetNotifyMsg.newTarget = 0;
  return self;
}
@end

@interface tg_stock_new_stop_notify_msg ()
@property SInt64 date;
@property (strong) NSString* code;
@property Float32 oldStop;
@property Float32 newStop;
@end

@implementation tg_stock_new_stop_notify_msg

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasOldStop {
  return !!hasOldStop_;
}
- (void) setHasOldStop:(BOOL) _value_ {
  hasOldStop_ = !!_value_;
}
@synthesize oldStop;
- (BOOL) hasNewStop {
  return !!hasNewStop_;
}
- (void) setHasNewStop:(BOOL) _value_ {
  hasNewStop_ = !!_value_;
}
@synthesize newStop;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
    self.code = @"";
    self.oldStop = 0;
    self.newStop = 0;
  }
  return self;
}
static tg_stock_new_stop_notify_msg* defaulttg_stock_new_stop_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_stock_new_stop_notify_msg class]) {
    defaulttg_stock_new_stop_notify_msgInstance = [[tg_stock_new_stop_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_stock_new_stop_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_stock_new_stop_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasOldStop) {
    return NO;
  }
  if (!self.hasNewStop) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasOldStop) {
    [output writeFloat:3 value:self.oldStop];
  }
  if (self.hasNewStop) {
    [output writeFloat:4 value:self.newStop];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasOldStop) {
    size_ += computeFloatSize(3, self.oldStop);
  }
  if (self.hasNewStop) {
    size_ += computeFloatSize(4, self.newStop);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_stock_new_stop_notify_msg*) parseFromData:(NSData*) data {
  return (tg_stock_new_stop_notify_msg*)[[[tg_stock_new_stop_notify_msg builder] mergeFromData:data] build];
}
+ (tg_stock_new_stop_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_new_stop_notify_msg*)[[[tg_stock_new_stop_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_new_stop_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_stock_new_stop_notify_msg*)[[[tg_stock_new_stop_notify_msg builder] mergeFromInputStream:input] build];
}
+ (tg_stock_new_stop_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_new_stop_notify_msg*)[[[tg_stock_new_stop_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_new_stop_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_stock_new_stop_notify_msg*)[[[tg_stock_new_stop_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_stock_new_stop_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_new_stop_notify_msg*)[[[tg_stock_new_stop_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_new_stop_notify_msgBuilder*) builder {
  return [[tg_stock_new_stop_notify_msgBuilder alloc] init];
}
+ (tg_stock_new_stop_notify_msgBuilder*) builderWithPrototype:(tg_stock_new_stop_notify_msg*) prototype {
  return [[tg_stock_new_stop_notify_msg builder] mergeFrom:prototype];
}
- (tg_stock_new_stop_notify_msgBuilder*) builder {
  return [tg_stock_new_stop_notify_msg builder];
}
- (tg_stock_new_stop_notify_msgBuilder*) toBuilder {
  return [tg_stock_new_stop_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasOldStop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oldStop", [NSNumber numberWithFloat:self.oldStop]];
  }
  if (self.hasNewStop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"newStop", [NSNumber numberWithFloat:self.newStop]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasOldStop) {
    [dictionary setObject: [NSNumber numberWithFloat:self.oldStop] forKey: @"oldStop"];
  }
  if (self.hasNewStop) {
    [dictionary setObject: [NSNumber numberWithFloat:self.newStop] forKey: @"newStop"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_stock_new_stop_notify_msg class]]) {
    return NO;
  }
  tg_stock_new_stop_notify_msg *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasOldStop == otherMessage.hasOldStop &&
      (!self.hasOldStop || self.oldStop == otherMessage.oldStop) &&
      self.hasNewStop == otherMessage.hasNewStop &&
      (!self.hasNewStop || self.newStop == otherMessage.newStop) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasOldStop) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.oldStop] hash];
  }
  if (self.hasNewStop) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.newStop] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_stock_new_stop_notify_msgBuilder()
@property (strong) tg_stock_new_stop_notify_msg* resultTgStockNewStopNotifyMsg;
@end

@implementation tg_stock_new_stop_notify_msgBuilder
@synthesize resultTgStockNewStopNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgStockNewStopNotifyMsg = [[tg_stock_new_stop_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgStockNewStopNotifyMsg;
}
- (tg_stock_new_stop_notify_msgBuilder*) clear {
  self.resultTgStockNewStopNotifyMsg = [[tg_stock_new_stop_notify_msg alloc] init];
  return self;
}
- (tg_stock_new_stop_notify_msgBuilder*) clone {
  return [tg_stock_new_stop_notify_msg builderWithPrototype:resultTgStockNewStopNotifyMsg];
}
- (tg_stock_new_stop_notify_msg*) defaultInstance {
  return [tg_stock_new_stop_notify_msg defaultInstance];
}
- (tg_stock_new_stop_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_stock_new_stop_notify_msg*) buildPartial {
  tg_stock_new_stop_notify_msg* returnMe = resultTgStockNewStopNotifyMsg;
  self.resultTgStockNewStopNotifyMsg = nil;
  return returnMe;
}
- (tg_stock_new_stop_notify_msgBuilder*) mergeFrom:(tg_stock_new_stop_notify_msg*) other {
  if (other == [tg_stock_new_stop_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasOldStop) {
    [self setOldStop:other.oldStop];
  }
  if (other.hasNewStop) {
    [self setNewStop:other.newStop];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_stock_new_stop_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_stock_new_stop_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 29: {
        [self setOldStop:[input readFloat]];
        break;
      }
      case 37: {
        [self setNewStop:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultTgStockNewStopNotifyMsg.hasDate;
}
- (SInt64) date {
  return resultTgStockNewStopNotifyMsg.date;
}
- (tg_stock_new_stop_notify_msgBuilder*) setDate:(SInt64) value {
  resultTgStockNewStopNotifyMsg.hasDate = YES;
  resultTgStockNewStopNotifyMsg.date = value;
  return self;
}
- (tg_stock_new_stop_notify_msgBuilder*) clearDate {
  resultTgStockNewStopNotifyMsg.hasDate = NO;
  resultTgStockNewStopNotifyMsg.date = 0L;
  return self;
}
- (BOOL) hasCode {
  return resultTgStockNewStopNotifyMsg.hasCode;
}
- (NSString*) code {
  return resultTgStockNewStopNotifyMsg.code;
}
- (tg_stock_new_stop_notify_msgBuilder*) setCode:(NSString*) value {
  resultTgStockNewStopNotifyMsg.hasCode = YES;
  resultTgStockNewStopNotifyMsg.code = value;
  return self;
}
- (tg_stock_new_stop_notify_msgBuilder*) clearCode {
  resultTgStockNewStopNotifyMsg.hasCode = NO;
  resultTgStockNewStopNotifyMsg.code = @"";
  return self;
}
- (BOOL) hasOldStop {
  return resultTgStockNewStopNotifyMsg.hasOldStop;
}
- (Float32) oldStop {
  return resultTgStockNewStopNotifyMsg.oldStop;
}
- (tg_stock_new_stop_notify_msgBuilder*) setOldStop:(Float32) value {
  resultTgStockNewStopNotifyMsg.hasOldStop = YES;
  resultTgStockNewStopNotifyMsg.oldStop = value;
  return self;
}
- (tg_stock_new_stop_notify_msgBuilder*) clearOldStop {
  resultTgStockNewStopNotifyMsg.hasOldStop = NO;
  resultTgStockNewStopNotifyMsg.oldStop = 0;
  return self;
}
- (BOOL) hasNewStop {
  return resultTgStockNewStopNotifyMsg.hasNewStop;
}
- (Float32) newStop {
  return resultTgStockNewStopNotifyMsg.newStop;
}
- (tg_stock_new_stop_notify_msgBuilder*) setNewStop:(Float32) value {
  resultTgStockNewStopNotifyMsg.hasNewStop = YES;
  resultTgStockNewStopNotifyMsg.newStop = value;
  return self;
}
- (tg_stock_new_stop_notify_msgBuilder*) clearNewStop {
  resultTgStockNewStopNotifyMsg.hasNewStop = NO;
  resultTgStockNewStopNotifyMsg.newStop = 0;
  return self;
}
@end

@interface tg_stock_profit_notify_msg ()
@property SInt64 date;
@property (strong) NSString* code;
@property Float32 targetPrice;
@property Float32 sellPrice;
@property BOOL systemAuto;
@property (strong) NSString* desc;
@end

@implementation tg_stock_profit_notify_msg

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasTargetPrice {
  return !!hasTargetPrice_;
}
- (void) setHasTargetPrice:(BOOL) _value_ {
  hasTargetPrice_ = !!_value_;
}
@synthesize targetPrice;
- (BOOL) hasSellPrice {
  return !!hasSellPrice_;
}
- (void) setHasSellPrice:(BOOL) _value_ {
  hasSellPrice_ = !!_value_;
}
@synthesize sellPrice;
- (BOOL) hasSystemAuto {
  return !!hasSystemAuto_;
}
- (void) setHasSystemAuto:(BOOL) _value_ {
  hasSystemAuto_ = !!_value_;
}
- (BOOL) systemAuto {
  return !!systemAuto_;
}
- (void) setSystemAuto:(BOOL) _value_ {
  systemAuto_ = !!_value_;
}
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) _value_ {
  hasDesc_ = !!_value_;
}
@synthesize desc;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
    self.code = @"";
    self.targetPrice = 0;
    self.sellPrice = 0;
    self.systemAuto = NO;
    self.desc = @"";
  }
  return self;
}
static tg_stock_profit_notify_msg* defaulttg_stock_profit_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_stock_profit_notify_msg class]) {
    defaulttg_stock_profit_notify_msgInstance = [[tg_stock_profit_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_stock_profit_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_stock_profit_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasTargetPrice) {
    return NO;
  }
  if (!self.hasSellPrice) {
    return NO;
  }
  if (!self.hasSystemAuto) {
    return NO;
  }
  if (!self.hasDesc) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasTargetPrice) {
    [output writeFloat:3 value:self.targetPrice];
  }
  if (self.hasSellPrice) {
    [output writeFloat:4 value:self.sellPrice];
  }
  if (self.hasSystemAuto) {
    [output writeBool:5 value:self.systemAuto];
  }
  if (self.hasDesc) {
    [output writeString:6 value:self.desc];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasTargetPrice) {
    size_ += computeFloatSize(3, self.targetPrice);
  }
  if (self.hasSellPrice) {
    size_ += computeFloatSize(4, self.sellPrice);
  }
  if (self.hasSystemAuto) {
    size_ += computeBoolSize(5, self.systemAuto);
  }
  if (self.hasDesc) {
    size_ += computeStringSize(6, self.desc);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_stock_profit_notify_msg*) parseFromData:(NSData*) data {
  return (tg_stock_profit_notify_msg*)[[[tg_stock_profit_notify_msg builder] mergeFromData:data] build];
}
+ (tg_stock_profit_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_profit_notify_msg*)[[[tg_stock_profit_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_profit_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_stock_profit_notify_msg*)[[[tg_stock_profit_notify_msg builder] mergeFromInputStream:input] build];
}
+ (tg_stock_profit_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_profit_notify_msg*)[[[tg_stock_profit_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_profit_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_stock_profit_notify_msg*)[[[tg_stock_profit_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_stock_profit_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_profit_notify_msg*)[[[tg_stock_profit_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_profit_notify_msgBuilder*) builder {
  return [[tg_stock_profit_notify_msgBuilder alloc] init];
}
+ (tg_stock_profit_notify_msgBuilder*) builderWithPrototype:(tg_stock_profit_notify_msg*) prototype {
  return [[tg_stock_profit_notify_msg builder] mergeFrom:prototype];
}
- (tg_stock_profit_notify_msgBuilder*) builder {
  return [tg_stock_profit_notify_msg builder];
}
- (tg_stock_profit_notify_msgBuilder*) toBuilder {
  return [tg_stock_profit_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasTargetPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetPrice", [NSNumber numberWithFloat:self.targetPrice]];
  }
  if (self.hasSellPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sellPrice", [NSNumber numberWithFloat:self.sellPrice]];
  }
  if (self.hasSystemAuto) {
    [output appendFormat:@"%@%@: %@\n", indent, @"systemAuto", [NSNumber numberWithBool:self.systemAuto]];
  }
  if (self.hasDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"desc", self.desc];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasTargetPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.targetPrice] forKey: @"targetPrice"];
  }
  if (self.hasSellPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.sellPrice] forKey: @"sellPrice"];
  }
  if (self.hasSystemAuto) {
    [dictionary setObject: [NSNumber numberWithBool:self.systemAuto] forKey: @"systemAuto"];
  }
  if (self.hasDesc) {
    [dictionary setObject: self.desc forKey: @"desc"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_stock_profit_notify_msg class]]) {
    return NO;
  }
  tg_stock_profit_notify_msg *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasTargetPrice == otherMessage.hasTargetPrice &&
      (!self.hasTargetPrice || self.targetPrice == otherMessage.targetPrice) &&
      self.hasSellPrice == otherMessage.hasSellPrice &&
      (!self.hasSellPrice || self.sellPrice == otherMessage.sellPrice) &&
      self.hasSystemAuto == otherMessage.hasSystemAuto &&
      (!self.hasSystemAuto || self.systemAuto == otherMessage.systemAuto) &&
      self.hasDesc == otherMessage.hasDesc &&
      (!self.hasDesc || [self.desc isEqual:otherMessage.desc]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasTargetPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.targetPrice] hash];
  }
  if (self.hasSellPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.sellPrice] hash];
  }
  if (self.hasSystemAuto) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.systemAuto] hash];
  }
  if (self.hasDesc) {
    hashCode = hashCode * 31 + [self.desc hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_stock_profit_notify_msgBuilder()
@property (strong) tg_stock_profit_notify_msg* resultTgStockProfitNotifyMsg;
@end

@implementation tg_stock_profit_notify_msgBuilder
@synthesize resultTgStockProfitNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgStockProfitNotifyMsg = [[tg_stock_profit_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgStockProfitNotifyMsg;
}
- (tg_stock_profit_notify_msgBuilder*) clear {
  self.resultTgStockProfitNotifyMsg = [[tg_stock_profit_notify_msg alloc] init];
  return self;
}
- (tg_stock_profit_notify_msgBuilder*) clone {
  return [tg_stock_profit_notify_msg builderWithPrototype:resultTgStockProfitNotifyMsg];
}
- (tg_stock_profit_notify_msg*) defaultInstance {
  return [tg_stock_profit_notify_msg defaultInstance];
}
- (tg_stock_profit_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_stock_profit_notify_msg*) buildPartial {
  tg_stock_profit_notify_msg* returnMe = resultTgStockProfitNotifyMsg;
  self.resultTgStockProfitNotifyMsg = nil;
  return returnMe;
}
- (tg_stock_profit_notify_msgBuilder*) mergeFrom:(tg_stock_profit_notify_msg*) other {
  if (other == [tg_stock_profit_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasTargetPrice) {
    [self setTargetPrice:other.targetPrice];
  }
  if (other.hasSellPrice) {
    [self setSellPrice:other.sellPrice];
  }
  if (other.hasSystemAuto) {
    [self setSystemAuto:other.systemAuto];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_stock_profit_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_stock_profit_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 29: {
        [self setTargetPrice:[input readFloat]];
        break;
      }
      case 37: {
        [self setSellPrice:[input readFloat]];
        break;
      }
      case 40: {
        [self setSystemAuto:[input readBool]];
        break;
      }
      case 50: {
        [self setDesc:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultTgStockProfitNotifyMsg.hasDate;
}
- (SInt64) date {
  return resultTgStockProfitNotifyMsg.date;
}
- (tg_stock_profit_notify_msgBuilder*) setDate:(SInt64) value {
  resultTgStockProfitNotifyMsg.hasDate = YES;
  resultTgStockProfitNotifyMsg.date = value;
  return self;
}
- (tg_stock_profit_notify_msgBuilder*) clearDate {
  resultTgStockProfitNotifyMsg.hasDate = NO;
  resultTgStockProfitNotifyMsg.date = 0L;
  return self;
}
- (BOOL) hasCode {
  return resultTgStockProfitNotifyMsg.hasCode;
}
- (NSString*) code {
  return resultTgStockProfitNotifyMsg.code;
}
- (tg_stock_profit_notify_msgBuilder*) setCode:(NSString*) value {
  resultTgStockProfitNotifyMsg.hasCode = YES;
  resultTgStockProfitNotifyMsg.code = value;
  return self;
}
- (tg_stock_profit_notify_msgBuilder*) clearCode {
  resultTgStockProfitNotifyMsg.hasCode = NO;
  resultTgStockProfitNotifyMsg.code = @"";
  return self;
}
- (BOOL) hasTargetPrice {
  return resultTgStockProfitNotifyMsg.hasTargetPrice;
}
- (Float32) targetPrice {
  return resultTgStockProfitNotifyMsg.targetPrice;
}
- (tg_stock_profit_notify_msgBuilder*) setTargetPrice:(Float32) value {
  resultTgStockProfitNotifyMsg.hasTargetPrice = YES;
  resultTgStockProfitNotifyMsg.targetPrice = value;
  return self;
}
- (tg_stock_profit_notify_msgBuilder*) clearTargetPrice {
  resultTgStockProfitNotifyMsg.hasTargetPrice = NO;
  resultTgStockProfitNotifyMsg.targetPrice = 0;
  return self;
}
- (BOOL) hasSellPrice {
  return resultTgStockProfitNotifyMsg.hasSellPrice;
}
- (Float32) sellPrice {
  return resultTgStockProfitNotifyMsg.sellPrice;
}
- (tg_stock_profit_notify_msgBuilder*) setSellPrice:(Float32) value {
  resultTgStockProfitNotifyMsg.hasSellPrice = YES;
  resultTgStockProfitNotifyMsg.sellPrice = value;
  return self;
}
- (tg_stock_profit_notify_msgBuilder*) clearSellPrice {
  resultTgStockProfitNotifyMsg.hasSellPrice = NO;
  resultTgStockProfitNotifyMsg.sellPrice = 0;
  return self;
}
- (BOOL) hasSystemAuto {
  return resultTgStockProfitNotifyMsg.hasSystemAuto;
}
- (BOOL) systemAuto {
  return resultTgStockProfitNotifyMsg.systemAuto;
}
- (tg_stock_profit_notify_msgBuilder*) setSystemAuto:(BOOL) value {
  resultTgStockProfitNotifyMsg.hasSystemAuto = YES;
  resultTgStockProfitNotifyMsg.systemAuto = value;
  return self;
}
- (tg_stock_profit_notify_msgBuilder*) clearSystemAuto {
  resultTgStockProfitNotifyMsg.hasSystemAuto = NO;
  resultTgStockProfitNotifyMsg.systemAuto = NO;
  return self;
}
- (BOOL) hasDesc {
  return resultTgStockProfitNotifyMsg.hasDesc;
}
- (NSString*) desc {
  return resultTgStockProfitNotifyMsg.desc;
}
- (tg_stock_profit_notify_msgBuilder*) setDesc:(NSString*) value {
  resultTgStockProfitNotifyMsg.hasDesc = YES;
  resultTgStockProfitNotifyMsg.desc = value;
  return self;
}
- (tg_stock_profit_notify_msgBuilder*) clearDesc {
  resultTgStockProfitNotifyMsg.hasDesc = NO;
  resultTgStockProfitNotifyMsg.desc = @"";
  return self;
}
@end

@interface tg_stock_stop_notify_msg ()
@property SInt64 date;
@property (strong) NSString* code;
@property Float32 stopPrice;
@property Float32 sellPrice;
@property BOOL systemAuto;
@property (strong) NSString* desc;
@end

@implementation tg_stock_stop_notify_msg

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasStopPrice {
  return !!hasStopPrice_;
}
- (void) setHasStopPrice:(BOOL) _value_ {
  hasStopPrice_ = !!_value_;
}
@synthesize stopPrice;
- (BOOL) hasSellPrice {
  return !!hasSellPrice_;
}
- (void) setHasSellPrice:(BOOL) _value_ {
  hasSellPrice_ = !!_value_;
}
@synthesize sellPrice;
- (BOOL) hasSystemAuto {
  return !!hasSystemAuto_;
}
- (void) setHasSystemAuto:(BOOL) _value_ {
  hasSystemAuto_ = !!_value_;
}
- (BOOL) systemAuto {
  return !!systemAuto_;
}
- (void) setSystemAuto:(BOOL) _value_ {
  systemAuto_ = !!_value_;
}
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) _value_ {
  hasDesc_ = !!_value_;
}
@synthesize desc;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
    self.code = @"";
    self.stopPrice = 0;
    self.sellPrice = 0;
    self.systemAuto = NO;
    self.desc = @"";
  }
  return self;
}
static tg_stock_stop_notify_msg* defaulttg_stock_stop_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_stock_stop_notify_msg class]) {
    defaulttg_stock_stop_notify_msgInstance = [[tg_stock_stop_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_stock_stop_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_stock_stop_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasStopPrice) {
    return NO;
  }
  if (!self.hasSellPrice) {
    return NO;
  }
  if (!self.hasSystemAuto) {
    return NO;
  }
  if (!self.hasDesc) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasStopPrice) {
    [output writeFloat:3 value:self.stopPrice];
  }
  if (self.hasSellPrice) {
    [output writeFloat:4 value:self.sellPrice];
  }
  if (self.hasSystemAuto) {
    [output writeBool:5 value:self.systemAuto];
  }
  if (self.hasDesc) {
    [output writeString:6 value:self.desc];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasStopPrice) {
    size_ += computeFloatSize(3, self.stopPrice);
  }
  if (self.hasSellPrice) {
    size_ += computeFloatSize(4, self.sellPrice);
  }
  if (self.hasSystemAuto) {
    size_ += computeBoolSize(5, self.systemAuto);
  }
  if (self.hasDesc) {
    size_ += computeStringSize(6, self.desc);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_stock_stop_notify_msg*) parseFromData:(NSData*) data {
  return (tg_stock_stop_notify_msg*)[[[tg_stock_stop_notify_msg builder] mergeFromData:data] build];
}
+ (tg_stock_stop_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_stop_notify_msg*)[[[tg_stock_stop_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_stop_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_stock_stop_notify_msg*)[[[tg_stock_stop_notify_msg builder] mergeFromInputStream:input] build];
}
+ (tg_stock_stop_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_stop_notify_msg*)[[[tg_stock_stop_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_stop_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_stock_stop_notify_msg*)[[[tg_stock_stop_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_stock_stop_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_stock_stop_notify_msg*)[[[tg_stock_stop_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_stock_stop_notify_msgBuilder*) builder {
  return [[tg_stock_stop_notify_msgBuilder alloc] init];
}
+ (tg_stock_stop_notify_msgBuilder*) builderWithPrototype:(tg_stock_stop_notify_msg*) prototype {
  return [[tg_stock_stop_notify_msg builder] mergeFrom:prototype];
}
- (tg_stock_stop_notify_msgBuilder*) builder {
  return [tg_stock_stop_notify_msg builder];
}
- (tg_stock_stop_notify_msgBuilder*) toBuilder {
  return [tg_stock_stop_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasStopPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"stopPrice", [NSNumber numberWithFloat:self.stopPrice]];
  }
  if (self.hasSellPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sellPrice", [NSNumber numberWithFloat:self.sellPrice]];
  }
  if (self.hasSystemAuto) {
    [output appendFormat:@"%@%@: %@\n", indent, @"systemAuto", [NSNumber numberWithBool:self.systemAuto]];
  }
  if (self.hasDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"desc", self.desc];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasStopPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.stopPrice] forKey: @"stopPrice"];
  }
  if (self.hasSellPrice) {
    [dictionary setObject: [NSNumber numberWithFloat:self.sellPrice] forKey: @"sellPrice"];
  }
  if (self.hasSystemAuto) {
    [dictionary setObject: [NSNumber numberWithBool:self.systemAuto] forKey: @"systemAuto"];
  }
  if (self.hasDesc) {
    [dictionary setObject: self.desc forKey: @"desc"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_stock_stop_notify_msg class]]) {
    return NO;
  }
  tg_stock_stop_notify_msg *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasStopPrice == otherMessage.hasStopPrice &&
      (!self.hasStopPrice || self.stopPrice == otherMessage.stopPrice) &&
      self.hasSellPrice == otherMessage.hasSellPrice &&
      (!self.hasSellPrice || self.sellPrice == otherMessage.sellPrice) &&
      self.hasSystemAuto == otherMessage.hasSystemAuto &&
      (!self.hasSystemAuto || self.systemAuto == otherMessage.systemAuto) &&
      self.hasDesc == otherMessage.hasDesc &&
      (!self.hasDesc || [self.desc isEqual:otherMessage.desc]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasStopPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.stopPrice] hash];
  }
  if (self.hasSellPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.sellPrice] hash];
  }
  if (self.hasSystemAuto) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.systemAuto] hash];
  }
  if (self.hasDesc) {
    hashCode = hashCode * 31 + [self.desc hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_stock_stop_notify_msgBuilder()
@property (strong) tg_stock_stop_notify_msg* resultTgStockStopNotifyMsg;
@end

@implementation tg_stock_stop_notify_msgBuilder
@synthesize resultTgStockStopNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgStockStopNotifyMsg = [[tg_stock_stop_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgStockStopNotifyMsg;
}
- (tg_stock_stop_notify_msgBuilder*) clear {
  self.resultTgStockStopNotifyMsg = [[tg_stock_stop_notify_msg alloc] init];
  return self;
}
- (tg_stock_stop_notify_msgBuilder*) clone {
  return [tg_stock_stop_notify_msg builderWithPrototype:resultTgStockStopNotifyMsg];
}
- (tg_stock_stop_notify_msg*) defaultInstance {
  return [tg_stock_stop_notify_msg defaultInstance];
}
- (tg_stock_stop_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_stock_stop_notify_msg*) buildPartial {
  tg_stock_stop_notify_msg* returnMe = resultTgStockStopNotifyMsg;
  self.resultTgStockStopNotifyMsg = nil;
  return returnMe;
}
- (tg_stock_stop_notify_msgBuilder*) mergeFrom:(tg_stock_stop_notify_msg*) other {
  if (other == [tg_stock_stop_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasStopPrice) {
    [self setStopPrice:other.stopPrice];
  }
  if (other.hasSellPrice) {
    [self setSellPrice:other.sellPrice];
  }
  if (other.hasSystemAuto) {
    [self setSystemAuto:other.systemAuto];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_stock_stop_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_stock_stop_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 29: {
        [self setStopPrice:[input readFloat]];
        break;
      }
      case 37: {
        [self setSellPrice:[input readFloat]];
        break;
      }
      case 40: {
        [self setSystemAuto:[input readBool]];
        break;
      }
      case 50: {
        [self setDesc:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultTgStockStopNotifyMsg.hasDate;
}
- (SInt64) date {
  return resultTgStockStopNotifyMsg.date;
}
- (tg_stock_stop_notify_msgBuilder*) setDate:(SInt64) value {
  resultTgStockStopNotifyMsg.hasDate = YES;
  resultTgStockStopNotifyMsg.date = value;
  return self;
}
- (tg_stock_stop_notify_msgBuilder*) clearDate {
  resultTgStockStopNotifyMsg.hasDate = NO;
  resultTgStockStopNotifyMsg.date = 0L;
  return self;
}
- (BOOL) hasCode {
  return resultTgStockStopNotifyMsg.hasCode;
}
- (NSString*) code {
  return resultTgStockStopNotifyMsg.code;
}
- (tg_stock_stop_notify_msgBuilder*) setCode:(NSString*) value {
  resultTgStockStopNotifyMsg.hasCode = YES;
  resultTgStockStopNotifyMsg.code = value;
  return self;
}
- (tg_stock_stop_notify_msgBuilder*) clearCode {
  resultTgStockStopNotifyMsg.hasCode = NO;
  resultTgStockStopNotifyMsg.code = @"";
  return self;
}
- (BOOL) hasStopPrice {
  return resultTgStockStopNotifyMsg.hasStopPrice;
}
- (Float32) stopPrice {
  return resultTgStockStopNotifyMsg.stopPrice;
}
- (tg_stock_stop_notify_msgBuilder*) setStopPrice:(Float32) value {
  resultTgStockStopNotifyMsg.hasStopPrice = YES;
  resultTgStockStopNotifyMsg.stopPrice = value;
  return self;
}
- (tg_stock_stop_notify_msgBuilder*) clearStopPrice {
  resultTgStockStopNotifyMsg.hasStopPrice = NO;
  resultTgStockStopNotifyMsg.stopPrice = 0;
  return self;
}
- (BOOL) hasSellPrice {
  return resultTgStockStopNotifyMsg.hasSellPrice;
}
- (Float32) sellPrice {
  return resultTgStockStopNotifyMsg.sellPrice;
}
- (tg_stock_stop_notify_msgBuilder*) setSellPrice:(Float32) value {
  resultTgStockStopNotifyMsg.hasSellPrice = YES;
  resultTgStockStopNotifyMsg.sellPrice = value;
  return self;
}
- (tg_stock_stop_notify_msgBuilder*) clearSellPrice {
  resultTgStockStopNotifyMsg.hasSellPrice = NO;
  resultTgStockStopNotifyMsg.sellPrice = 0;
  return self;
}
- (BOOL) hasSystemAuto {
  return resultTgStockStopNotifyMsg.hasSystemAuto;
}
- (BOOL) systemAuto {
  return resultTgStockStopNotifyMsg.systemAuto;
}
- (tg_stock_stop_notify_msgBuilder*) setSystemAuto:(BOOL) value {
  resultTgStockStopNotifyMsg.hasSystemAuto = YES;
  resultTgStockStopNotifyMsg.systemAuto = value;
  return self;
}
- (tg_stock_stop_notify_msgBuilder*) clearSystemAuto {
  resultTgStockStopNotifyMsg.hasSystemAuto = NO;
  resultTgStockStopNotifyMsg.systemAuto = NO;
  return self;
}
- (BOOL) hasDesc {
  return resultTgStockStopNotifyMsg.hasDesc;
}
- (NSString*) desc {
  return resultTgStockStopNotifyMsg.desc;
}
- (tg_stock_stop_notify_msgBuilder*) setDesc:(NSString*) value {
  resultTgStockStopNotifyMsg.hasDesc = YES;
  resultTgStockStopNotifyMsg.desc = value;
  return self;
}
- (tg_stock_stop_notify_msgBuilder*) clearDesc {
  resultTgStockStopNotifyMsg.hasDesc = NO;
  resultTgStockStopNotifyMsg.desc = @"";
  return self;
}
@end

@interface tg_focus_news_notify_msg ()
@property SInt64 date;
@property (strong) NSString* title;
@property (strong) NSString* content;
@property (strong) NSString* url;
@end

@implementation tg_focus_news_notify_msg

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value_ {
  hasUrl_ = !!_value_;
}
@synthesize url;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
    self.title = @"";
    self.content = @"";
    self.url = @"";
  }
  return self;
}
static tg_focus_news_notify_msg* defaulttg_focus_news_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_focus_news_notify_msg class]) {
    defaulttg_focus_news_notify_msgInstance = [[tg_focus_news_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_focus_news_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_focus_news_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasUrl) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  if (self.hasUrl) {
    [output writeString:4 value:self.url];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(2, self.title);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  if (self.hasUrl) {
    size_ += computeStringSize(4, self.url);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_focus_news_notify_msg*) parseFromData:(NSData*) data {
  return (tg_focus_news_notify_msg*)[[[tg_focus_news_notify_msg builder] mergeFromData:data] build];
}
+ (tg_focus_news_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_focus_news_notify_msg*)[[[tg_focus_news_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_focus_news_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_focus_news_notify_msg*)[[[tg_focus_news_notify_msg builder] mergeFromInputStream:input] build];
}
+ (tg_focus_news_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_focus_news_notify_msg*)[[[tg_focus_news_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_focus_news_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_focus_news_notify_msg*)[[[tg_focus_news_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_focus_news_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_focus_news_notify_msg*)[[[tg_focus_news_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_focus_news_notify_msgBuilder*) builder {
  return [[tg_focus_news_notify_msgBuilder alloc] init];
}
+ (tg_focus_news_notify_msgBuilder*) builderWithPrototype:(tg_focus_news_notify_msg*) prototype {
  return [[tg_focus_news_notify_msg builder] mergeFrom:prototype];
}
- (tg_focus_news_notify_msgBuilder*) builder {
  return [tg_focus_news_notify_msg builder];
}
- (tg_focus_news_notify_msgBuilder*) toBuilder {
  return [tg_focus_news_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasUrl) {
    [dictionary setObject: self.url forKey: @"url"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_focus_news_notify_msg class]]) {
    return NO;
  }
  tg_focus_news_notify_msg *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_focus_news_notify_msgBuilder()
@property (strong) tg_focus_news_notify_msg* resultTgFocusNewsNotifyMsg;
@end

@implementation tg_focus_news_notify_msgBuilder
@synthesize resultTgFocusNewsNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgFocusNewsNotifyMsg = [[tg_focus_news_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgFocusNewsNotifyMsg;
}
- (tg_focus_news_notify_msgBuilder*) clear {
  self.resultTgFocusNewsNotifyMsg = [[tg_focus_news_notify_msg alloc] init];
  return self;
}
- (tg_focus_news_notify_msgBuilder*) clone {
  return [tg_focus_news_notify_msg builderWithPrototype:resultTgFocusNewsNotifyMsg];
}
- (tg_focus_news_notify_msg*) defaultInstance {
  return [tg_focus_news_notify_msg defaultInstance];
}
- (tg_focus_news_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_focus_news_notify_msg*) buildPartial {
  tg_focus_news_notify_msg* returnMe = resultTgFocusNewsNotifyMsg;
  self.resultTgFocusNewsNotifyMsg = nil;
  return returnMe;
}
- (tg_focus_news_notify_msgBuilder*) mergeFrom:(tg_focus_news_notify_msg*) other {
  if (other == [tg_focus_news_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_focus_news_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_focus_news_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        [self setUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultTgFocusNewsNotifyMsg.hasDate;
}
- (SInt64) date {
  return resultTgFocusNewsNotifyMsg.date;
}
- (tg_focus_news_notify_msgBuilder*) setDate:(SInt64) value {
  resultTgFocusNewsNotifyMsg.hasDate = YES;
  resultTgFocusNewsNotifyMsg.date = value;
  return self;
}
- (tg_focus_news_notify_msgBuilder*) clearDate {
  resultTgFocusNewsNotifyMsg.hasDate = NO;
  resultTgFocusNewsNotifyMsg.date = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultTgFocusNewsNotifyMsg.hasTitle;
}
- (NSString*) title {
  return resultTgFocusNewsNotifyMsg.title;
}
- (tg_focus_news_notify_msgBuilder*) setTitle:(NSString*) value {
  resultTgFocusNewsNotifyMsg.hasTitle = YES;
  resultTgFocusNewsNotifyMsg.title = value;
  return self;
}
- (tg_focus_news_notify_msgBuilder*) clearTitle {
  resultTgFocusNewsNotifyMsg.hasTitle = NO;
  resultTgFocusNewsNotifyMsg.title = @"";
  return self;
}
- (BOOL) hasContent {
  return resultTgFocusNewsNotifyMsg.hasContent;
}
- (NSString*) content {
  return resultTgFocusNewsNotifyMsg.content;
}
- (tg_focus_news_notify_msgBuilder*) setContent:(NSString*) value {
  resultTgFocusNewsNotifyMsg.hasContent = YES;
  resultTgFocusNewsNotifyMsg.content = value;
  return self;
}
- (tg_focus_news_notify_msgBuilder*) clearContent {
  resultTgFocusNewsNotifyMsg.hasContent = NO;
  resultTgFocusNewsNotifyMsg.content = @"";
  return self;
}
- (BOOL) hasUrl {
  return resultTgFocusNewsNotifyMsg.hasUrl;
}
- (NSString*) url {
  return resultTgFocusNewsNotifyMsg.url;
}
- (tg_focus_news_notify_msgBuilder*) setUrl:(NSString*) value {
  resultTgFocusNewsNotifyMsg.hasUrl = YES;
  resultTgFocusNewsNotifyMsg.url = value;
  return self;
}
- (tg_focus_news_notify_msgBuilder*) clearUrl {
  resultTgFocusNewsNotifyMsg.hasUrl = NO;
  resultTgFocusNewsNotifyMsg.url = @"";
  return self;
}
@end

@interface tg_trailer_notify_msg ()
@property SInt64 date;
@property (strong) NSString* title;
@property (strong) NSString* content;
@property (strong) NSString* url;
@end

@implementation tg_trailer_notify_msg

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value_ {
  hasUrl_ = !!_value_;
}
@synthesize url;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
    self.title = @"";
    self.content = @"";
    self.url = @"";
  }
  return self;
}
static tg_trailer_notify_msg* defaulttg_trailer_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_trailer_notify_msg class]) {
    defaulttg_trailer_notify_msgInstance = [[tg_trailer_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_trailer_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_trailer_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasUrl) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  if (self.hasUrl) {
    [output writeString:4 value:self.url];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(2, self.title);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  if (self.hasUrl) {
    size_ += computeStringSize(4, self.url);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_trailer_notify_msg*) parseFromData:(NSData*) data {
  return (tg_trailer_notify_msg*)[[[tg_trailer_notify_msg builder] mergeFromData:data] build];
}
+ (tg_trailer_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_trailer_notify_msg*)[[[tg_trailer_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_trailer_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_trailer_notify_msg*)[[[tg_trailer_notify_msg builder] mergeFromInputStream:input] build];
}
+ (tg_trailer_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_trailer_notify_msg*)[[[tg_trailer_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_trailer_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_trailer_notify_msg*)[[[tg_trailer_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_trailer_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_trailer_notify_msg*)[[[tg_trailer_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_trailer_notify_msgBuilder*) builder {
  return [[tg_trailer_notify_msgBuilder alloc] init];
}
+ (tg_trailer_notify_msgBuilder*) builderWithPrototype:(tg_trailer_notify_msg*) prototype {
  return [[tg_trailer_notify_msg builder] mergeFrom:prototype];
}
- (tg_trailer_notify_msgBuilder*) builder {
  return [tg_trailer_notify_msg builder];
}
- (tg_trailer_notify_msgBuilder*) toBuilder {
  return [tg_trailer_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasUrl) {
    [dictionary setObject: self.url forKey: @"url"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_trailer_notify_msg class]]) {
    return NO;
  }
  tg_trailer_notify_msg *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_trailer_notify_msgBuilder()
@property (strong) tg_trailer_notify_msg* resultTgTrailerNotifyMsg;
@end

@implementation tg_trailer_notify_msgBuilder
@synthesize resultTgTrailerNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgTrailerNotifyMsg = [[tg_trailer_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgTrailerNotifyMsg;
}
- (tg_trailer_notify_msgBuilder*) clear {
  self.resultTgTrailerNotifyMsg = [[tg_trailer_notify_msg alloc] init];
  return self;
}
- (tg_trailer_notify_msgBuilder*) clone {
  return [tg_trailer_notify_msg builderWithPrototype:resultTgTrailerNotifyMsg];
}
- (tg_trailer_notify_msg*) defaultInstance {
  return [tg_trailer_notify_msg defaultInstance];
}
- (tg_trailer_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_trailer_notify_msg*) buildPartial {
  tg_trailer_notify_msg* returnMe = resultTgTrailerNotifyMsg;
  self.resultTgTrailerNotifyMsg = nil;
  return returnMe;
}
- (tg_trailer_notify_msgBuilder*) mergeFrom:(tg_trailer_notify_msg*) other {
  if (other == [tg_trailer_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_trailer_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_trailer_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        [self setUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultTgTrailerNotifyMsg.hasDate;
}
- (SInt64) date {
  return resultTgTrailerNotifyMsg.date;
}
- (tg_trailer_notify_msgBuilder*) setDate:(SInt64) value {
  resultTgTrailerNotifyMsg.hasDate = YES;
  resultTgTrailerNotifyMsg.date = value;
  return self;
}
- (tg_trailer_notify_msgBuilder*) clearDate {
  resultTgTrailerNotifyMsg.hasDate = NO;
  resultTgTrailerNotifyMsg.date = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultTgTrailerNotifyMsg.hasTitle;
}
- (NSString*) title {
  return resultTgTrailerNotifyMsg.title;
}
- (tg_trailer_notify_msgBuilder*) setTitle:(NSString*) value {
  resultTgTrailerNotifyMsg.hasTitle = YES;
  resultTgTrailerNotifyMsg.title = value;
  return self;
}
- (tg_trailer_notify_msgBuilder*) clearTitle {
  resultTgTrailerNotifyMsg.hasTitle = NO;
  resultTgTrailerNotifyMsg.title = @"";
  return self;
}
- (BOOL) hasContent {
  return resultTgTrailerNotifyMsg.hasContent;
}
- (NSString*) content {
  return resultTgTrailerNotifyMsg.content;
}
- (tg_trailer_notify_msgBuilder*) setContent:(NSString*) value {
  resultTgTrailerNotifyMsg.hasContent = YES;
  resultTgTrailerNotifyMsg.content = value;
  return self;
}
- (tg_trailer_notify_msgBuilder*) clearContent {
  resultTgTrailerNotifyMsg.hasContent = NO;
  resultTgTrailerNotifyMsg.content = @"";
  return self;
}
- (BOOL) hasUrl {
  return resultTgTrailerNotifyMsg.hasUrl;
}
- (NSString*) url {
  return resultTgTrailerNotifyMsg.url;
}
- (tg_trailer_notify_msgBuilder*) setUrl:(NSString*) value {
  resultTgTrailerNotifyMsg.hasUrl = YES;
  resultTgTrailerNotifyMsg.url = value;
  return self;
}
- (tg_trailer_notify_msgBuilder*) clearUrl {
  resultTgTrailerNotifyMsg.hasUrl = NO;
  resultTgTrailerNotifyMsg.url = @"";
  return self;
}
@end

@interface tg_req_msg_box_msg ()
@property SInt32 pid;
@property SInt64 lastSeq;
@end

@implementation tg_req_msg_box_msg

- (BOOL) hasPid {
  return !!hasPid_;
}
- (void) setHasPid:(BOOL) _value_ {
  hasPid_ = !!_value_;
}
@synthesize pid;
- (BOOL) hasLastSeq {
  return !!hasLastSeq_;
}
- (void) setHasLastSeq:(BOOL) _value_ {
  hasLastSeq_ = !!_value_;
}
@synthesize lastSeq;
- (instancetype) init {
  if ((self = [super init])) {
    self.pid = 0;
    self.lastSeq = 0L;
  }
  return self;
}
static tg_req_msg_box_msg* defaulttg_req_msg_box_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_req_msg_box_msg class]) {
    defaulttg_req_msg_box_msgInstance = [[tg_req_msg_box_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_req_msg_box_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_req_msg_box_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPid) {
    [output writeInt32:1 value:self.pid];
  }
  if (self.hasLastSeq) {
    [output writeInt64:2 value:self.lastSeq];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPid) {
    size_ += computeInt32Size(1, self.pid);
  }
  if (self.hasLastSeq) {
    size_ += computeInt64Size(2, self.lastSeq);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_req_msg_box_msg*) parseFromData:(NSData*) data {
  return (tg_req_msg_box_msg*)[[[tg_req_msg_box_msg builder] mergeFromData:data] build];
}
+ (tg_req_msg_box_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_req_msg_box_msg*)[[[tg_req_msg_box_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_req_msg_box_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_req_msg_box_msg*)[[[tg_req_msg_box_msg builder] mergeFromInputStream:input] build];
}
+ (tg_req_msg_box_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_req_msg_box_msg*)[[[tg_req_msg_box_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_req_msg_box_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_req_msg_box_msg*)[[[tg_req_msg_box_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_req_msg_box_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_req_msg_box_msg*)[[[tg_req_msg_box_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_req_msg_box_msgBuilder*) builder {
  return [[tg_req_msg_box_msgBuilder alloc] init];
}
+ (tg_req_msg_box_msgBuilder*) builderWithPrototype:(tg_req_msg_box_msg*) prototype {
  return [[tg_req_msg_box_msg builder] mergeFrom:prototype];
}
- (tg_req_msg_box_msgBuilder*) builder {
  return [tg_req_msg_box_msg builder];
}
- (tg_req_msg_box_msgBuilder*) toBuilder {
  return [tg_req_msg_box_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pid", [NSNumber numberWithInteger:self.pid]];
  }
  if (self.hasLastSeq) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastSeq", [NSNumber numberWithLongLong:self.lastSeq]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pid] forKey: @"pid"];
  }
  if (self.hasLastSeq) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastSeq] forKey: @"lastSeq"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_req_msg_box_msg class]]) {
    return NO;
  }
  tg_req_msg_box_msg *otherMessage = other;
  return
      self.hasPid == otherMessage.hasPid &&
      (!self.hasPid || self.pid == otherMessage.pid) &&
      self.hasLastSeq == otherMessage.hasLastSeq &&
      (!self.hasLastSeq || self.lastSeq == otherMessage.lastSeq) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pid] hash];
  }
  if (self.hasLastSeq) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastSeq] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_req_msg_box_msgBuilder()
@property (strong) tg_req_msg_box_msg* resultTgReqMsgBoxMsg;
@end

@implementation tg_req_msg_box_msgBuilder
@synthesize resultTgReqMsgBoxMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgReqMsgBoxMsg = [[tg_req_msg_box_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgReqMsgBoxMsg;
}
- (tg_req_msg_box_msgBuilder*) clear {
  self.resultTgReqMsgBoxMsg = [[tg_req_msg_box_msg alloc] init];
  return self;
}
- (tg_req_msg_box_msgBuilder*) clone {
  return [tg_req_msg_box_msg builderWithPrototype:resultTgReqMsgBoxMsg];
}
- (tg_req_msg_box_msg*) defaultInstance {
  return [tg_req_msg_box_msg defaultInstance];
}
- (tg_req_msg_box_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_req_msg_box_msg*) buildPartial {
  tg_req_msg_box_msg* returnMe = resultTgReqMsgBoxMsg;
  self.resultTgReqMsgBoxMsg = nil;
  return returnMe;
}
- (tg_req_msg_box_msgBuilder*) mergeFrom:(tg_req_msg_box_msg*) other {
  if (other == [tg_req_msg_box_msg defaultInstance]) {
    return self;
  }
  if (other.hasPid) {
    [self setPid:other.pid];
  }
  if (other.hasLastSeq) {
    [self setLastSeq:other.lastSeq];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_req_msg_box_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_req_msg_box_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPid:[input readInt32]];
        break;
      }
      case 16: {
        [self setLastSeq:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasPid {
  return resultTgReqMsgBoxMsg.hasPid;
}
- (SInt32) pid {
  return resultTgReqMsgBoxMsg.pid;
}
- (tg_req_msg_box_msgBuilder*) setPid:(SInt32) value {
  resultTgReqMsgBoxMsg.hasPid = YES;
  resultTgReqMsgBoxMsg.pid = value;
  return self;
}
- (tg_req_msg_box_msgBuilder*) clearPid {
  resultTgReqMsgBoxMsg.hasPid = NO;
  resultTgReqMsgBoxMsg.pid = 0;
  return self;
}
- (BOOL) hasLastSeq {
  return resultTgReqMsgBoxMsg.hasLastSeq;
}
- (SInt64) lastSeq {
  return resultTgReqMsgBoxMsg.lastSeq;
}
- (tg_req_msg_box_msgBuilder*) setLastSeq:(SInt64) value {
  resultTgReqMsgBoxMsg.hasLastSeq = YES;
  resultTgReqMsgBoxMsg.lastSeq = value;
  return self;
}
- (tg_req_msg_box_msgBuilder*) clearLastSeq {
  resultTgReqMsgBoxMsg.hasLastSeq = NO;
  resultTgReqMsgBoxMsg.lastSeq = 0L;
  return self;
}
@end

@interface tg_msg_box_combo_msg ()
@property (strong) NSMutableArray * msgsArray;
@end

@implementation tg_msg_box_combo_msg

@synthesize msgsArray;
@dynamic msgs;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static tg_msg_box_combo_msg* defaulttg_msg_box_combo_msgInstance = nil;
+ (void) initialize {
  if (self == [tg_msg_box_combo_msg class]) {
    defaulttg_msg_box_combo_msgInstance = [[tg_msg_box_combo_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_msg_box_combo_msgInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_msg_box_combo_msgInstance;
}
- (NSArray *)msgs {
  return msgsArray;
}
- (tg_msg_box_combo_msgtg_msg_node*)msgsAtIndex:(NSUInteger)index {
  return [msgsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitmsgs = YES;
   [self.msgs enumerateObjectsUsingBlock:^(tg_msg_box_combo_msgtg_msg_node *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitmsgs = NO;
      *stop = YES;
    }
  }];
  if (!isInitmsgs) return isInitmsgs;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.msgsArray enumerateObjectsUsingBlock:^(tg_msg_box_combo_msgtg_msg_node *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.msgsArray enumerateObjectsUsingBlock:^(tg_msg_box_combo_msgtg_msg_node *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_msg_box_combo_msg*) parseFromData:(NSData*) data {
  return (tg_msg_box_combo_msg*)[[[tg_msg_box_combo_msg builder] mergeFromData:data] build];
}
+ (tg_msg_box_combo_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_msg_box_combo_msg*)[[[tg_msg_box_combo_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_msg_box_combo_msg*) parseFromInputStream:(NSInputStream*) input {
  return (tg_msg_box_combo_msg*)[[[tg_msg_box_combo_msg builder] mergeFromInputStream:input] build];
}
+ (tg_msg_box_combo_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_msg_box_combo_msg*)[[[tg_msg_box_combo_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_msg_box_combo_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_msg_box_combo_msg*)[[[tg_msg_box_combo_msg builder] mergeFromCodedInputStream:input] build];
}
+ (tg_msg_box_combo_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_msg_box_combo_msg*)[[[tg_msg_box_combo_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_msg_box_combo_msgBuilder*) builder {
  return [[tg_msg_box_combo_msgBuilder alloc] init];
}
+ (tg_msg_box_combo_msgBuilder*) builderWithPrototype:(tg_msg_box_combo_msg*) prototype {
  return [[tg_msg_box_combo_msg builder] mergeFrom:prototype];
}
- (tg_msg_box_combo_msgBuilder*) builder {
  return [tg_msg_box_combo_msg builder];
}
- (tg_msg_box_combo_msgBuilder*) toBuilder {
  return [tg_msg_box_combo_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.msgsArray enumerateObjectsUsingBlock:^(tg_msg_box_combo_msgtg_msg_node *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (tg_msg_box_combo_msgtg_msg_node* element in self.msgsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"msgs"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_msg_box_combo_msg class]]) {
    return NO;
  }
  tg_msg_box_combo_msg *otherMessage = other;
  return
      [self.msgsArray isEqualToArray:otherMessage.msgsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.msgsArray enumerateObjectsUsingBlock:^(tg_msg_box_combo_msgtg_msg_node *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_msg_box_combo_msgtg_msg_node ()
@property eum_nofity_type type;
@property (strong) NSData* subMsg;
@property SInt64 msgSeq;
@end

@implementation tg_msg_box_combo_msgtg_msg_node

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasSubMsg {
  return !!hasSubMsg_;
}
- (void) setHasSubMsg:(BOOL) _value_ {
  hasSubMsg_ = !!_value_;
}
@synthesize subMsg;
- (BOOL) hasMsgSeq {
  return !!hasMsgSeq_;
}
- (void) setHasMsgSeq:(BOOL) _value_ {
  hasMsgSeq_ = !!_value_;
}
@synthesize msgSeq;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = eum_nofity_typeTgStockInPoolNotify;
    self.subMsg = [NSData data];
    self.msgSeq = 0L;
  }
  return self;
}
static tg_msg_box_combo_msgtg_msg_node* defaulttg_msg_box_combo_msgtg_msg_nodeInstance = nil;
+ (void) initialize {
  if (self == [tg_msg_box_combo_msgtg_msg_node class]) {
    defaulttg_msg_box_combo_msgtg_msg_nodeInstance = [[tg_msg_box_combo_msgtg_msg_node alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttg_msg_box_combo_msgtg_msg_nodeInstance;
}
- (instancetype) defaultInstance {
  return defaulttg_msg_box_combo_msgtg_msg_nodeInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasSubMsg) {
    return NO;
  }
  if (!self.hasMsgSeq) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasSubMsg) {
    [output writeData:2 value:self.subMsg];
  }
  if (self.hasMsgSeq) {
    [output writeInt64:3 value:self.msgSeq];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeEnumSize(1, self.type);
  }
  if (self.hasSubMsg) {
    size_ += computeDataSize(2, self.subMsg);
  }
  if (self.hasMsgSeq) {
    size_ += computeInt64Size(3, self.msgSeq);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (tg_msg_box_combo_msgtg_msg_node*) parseFromData:(NSData*) data {
  return (tg_msg_box_combo_msgtg_msg_node*)[[[tg_msg_box_combo_msgtg_msg_node builder] mergeFromData:data] build];
}
+ (tg_msg_box_combo_msgtg_msg_node*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_msg_box_combo_msgtg_msg_node*)[[[tg_msg_box_combo_msgtg_msg_node builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (tg_msg_box_combo_msgtg_msg_node*) parseFromInputStream:(NSInputStream*) input {
  return (tg_msg_box_combo_msgtg_msg_node*)[[[tg_msg_box_combo_msgtg_msg_node builder] mergeFromInputStream:input] build];
}
+ (tg_msg_box_combo_msgtg_msg_node*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_msg_box_combo_msgtg_msg_node*)[[[tg_msg_box_combo_msgtg_msg_node builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_msg_box_combo_msgtg_msg_node*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (tg_msg_box_combo_msgtg_msg_node*)[[[tg_msg_box_combo_msgtg_msg_node builder] mergeFromCodedInputStream:input] build];
}
+ (tg_msg_box_combo_msgtg_msg_node*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (tg_msg_box_combo_msgtg_msg_node*)[[[tg_msg_box_combo_msgtg_msg_node builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (tg_msg_box_combo_msgtg_msg_nodeBuilder*) builder {
  return [[tg_msg_box_combo_msgtg_msg_nodeBuilder alloc] init];
}
+ (tg_msg_box_combo_msgtg_msg_nodeBuilder*) builderWithPrototype:(tg_msg_box_combo_msgtg_msg_node*) prototype {
  return [[tg_msg_box_combo_msgtg_msg_node builder] mergeFrom:prototype];
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) builder {
  return [tg_msg_box_combo_msgtg_msg_node builder];
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) toBuilder {
  return [tg_msg_box_combo_msgtg_msg_node builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromeum_nofity_type(self.type)];
  }
  if (self.hasSubMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subMsg", self.subMsg];
  }
  if (self.hasMsgSeq) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgSeq", [NSNumber numberWithLongLong:self.msgSeq]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  if (self.hasSubMsg) {
    [dictionary setObject: self.subMsg forKey: @"subMsg"];
  }
  if (self.hasMsgSeq) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgSeq] forKey: @"msgSeq"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[tg_msg_box_combo_msgtg_msg_node class]]) {
    return NO;
  }
  tg_msg_box_combo_msgtg_msg_node *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasSubMsg == otherMessage.hasSubMsg &&
      (!self.hasSubMsg || [self.subMsg isEqual:otherMessage.subMsg]) &&
      self.hasMsgSeq == otherMessage.hasMsgSeq &&
      (!self.hasMsgSeq || self.msgSeq == otherMessage.msgSeq) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasSubMsg) {
    hashCode = hashCode * 31 + [self.subMsg hash];
  }
  if (self.hasMsgSeq) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgSeq] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface tg_msg_box_combo_msgtg_msg_nodeBuilder()
@property (strong) tg_msg_box_combo_msgtg_msg_node* resultTgMsgNode;
@end

@implementation tg_msg_box_combo_msgtg_msg_nodeBuilder
@synthesize resultTgMsgNode;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgMsgNode = [[tg_msg_box_combo_msgtg_msg_node alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgMsgNode;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) clear {
  self.resultTgMsgNode = [[tg_msg_box_combo_msgtg_msg_node alloc] init];
  return self;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) clone {
  return [tg_msg_box_combo_msgtg_msg_node builderWithPrototype:resultTgMsgNode];
}
- (tg_msg_box_combo_msgtg_msg_node*) defaultInstance {
  return [tg_msg_box_combo_msgtg_msg_node defaultInstance];
}
- (tg_msg_box_combo_msgtg_msg_node*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_msg_box_combo_msgtg_msg_node*) buildPartial {
  tg_msg_box_combo_msgtg_msg_node* returnMe = resultTgMsgNode;
  self.resultTgMsgNode = nil;
  return returnMe;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) mergeFrom:(tg_msg_box_combo_msgtg_msg_node*) other {
  if (other == [tg_msg_box_combo_msgtg_msg_node defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasSubMsg) {
    [self setSubMsg:other.subMsg];
  }
  if (other.hasMsgSeq) {
    [self setMsgSeq:other.msgSeq];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        eum_nofity_type value = (eum_nofity_type)[input readEnum];
        if (eum_nofity_typeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setSubMsg:[input readData]];
        break;
      }
      case 24: {
        [self setMsgSeq:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultTgMsgNode.hasType;
}
- (eum_nofity_type) type {
  return resultTgMsgNode.type;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) setType:(eum_nofity_type) value {
  resultTgMsgNode.hasType = YES;
  resultTgMsgNode.type = value;
  return self;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) clearType {
  resultTgMsgNode.hasType = NO;
  resultTgMsgNode.type = eum_nofity_typeTgStockInPoolNotify;
  return self;
}
- (BOOL) hasSubMsg {
  return resultTgMsgNode.hasSubMsg;
}
- (NSData*) subMsg {
  return resultTgMsgNode.subMsg;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) setSubMsg:(NSData*) value {
  resultTgMsgNode.hasSubMsg = YES;
  resultTgMsgNode.subMsg = value;
  return self;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) clearSubMsg {
  resultTgMsgNode.hasSubMsg = NO;
  resultTgMsgNode.subMsg = [NSData data];
  return self;
}
- (BOOL) hasMsgSeq {
  return resultTgMsgNode.hasMsgSeq;
}
- (SInt64) msgSeq {
  return resultTgMsgNode.msgSeq;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) setMsgSeq:(SInt64) value {
  resultTgMsgNode.hasMsgSeq = YES;
  resultTgMsgNode.msgSeq = value;
  return self;
}
- (tg_msg_box_combo_msgtg_msg_nodeBuilder*) clearMsgSeq {
  resultTgMsgNode.hasMsgSeq = NO;
  resultTgMsgNode.msgSeq = 0L;
  return self;
}
@end

@interface tg_msg_box_combo_msgBuilder()
@property (strong) tg_msg_box_combo_msg* resultTgMsgBoxComboMsg;
@end

@implementation tg_msg_box_combo_msgBuilder
@synthesize resultTgMsgBoxComboMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTgMsgBoxComboMsg = [[tg_msg_box_combo_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTgMsgBoxComboMsg;
}
- (tg_msg_box_combo_msgBuilder*) clear {
  self.resultTgMsgBoxComboMsg = [[tg_msg_box_combo_msg alloc] init];
  return self;
}
- (tg_msg_box_combo_msgBuilder*) clone {
  return [tg_msg_box_combo_msg builderWithPrototype:resultTgMsgBoxComboMsg];
}
- (tg_msg_box_combo_msg*) defaultInstance {
  return [tg_msg_box_combo_msg defaultInstance];
}
- (tg_msg_box_combo_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (tg_msg_box_combo_msg*) buildPartial {
  tg_msg_box_combo_msg* returnMe = resultTgMsgBoxComboMsg;
  self.resultTgMsgBoxComboMsg = nil;
  return returnMe;
}
- (tg_msg_box_combo_msgBuilder*) mergeFrom:(tg_msg_box_combo_msg*) other {
  if (other == [tg_msg_box_combo_msg defaultInstance]) {
    return self;
  }
  if (other.msgsArray.count > 0) {
    if (resultTgMsgBoxComboMsg.msgsArray == nil) {
      resultTgMsgBoxComboMsg.msgsArray = [[NSMutableArray alloc] initWithArray:other.msgsArray];
    } else {
      [resultTgMsgBoxComboMsg.msgsArray addObjectsFromArray:other.msgsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (tg_msg_box_combo_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (tg_msg_box_combo_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        tg_msg_box_combo_msgtg_msg_nodeBuilder* subBuilder = [tg_msg_box_combo_msgtg_msg_node builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsgs:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)msgs {
  return resultTgMsgBoxComboMsg.msgsArray;
}
- (tg_msg_box_combo_msgtg_msg_node*)msgsAtIndex:(NSUInteger)index {
  return [resultTgMsgBoxComboMsg msgsAtIndex:index];
}
- (tg_msg_box_combo_msgBuilder *)addMsgs:(tg_msg_box_combo_msgtg_msg_node*)value {
  if (resultTgMsgBoxComboMsg.msgsArray == nil) {
    resultTgMsgBoxComboMsg.msgsArray = [[NSMutableArray alloc]init];
  }
  [resultTgMsgBoxComboMsg.msgsArray addObject:value];
  return self;
}
- (tg_msg_box_combo_msgBuilder *)setMsgsArray:(NSArray *)array {
  resultTgMsgBoxComboMsg.msgsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (tg_msg_box_combo_msgBuilder *)clearMsgs {
  resultTgMsgBoxComboMsg.msgsArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
