// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Auth.pb.h"
// @@protoc_insertion_point(imports)

@implementation AuthRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [AuthRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CommonRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface auth_kick_user_msg ()
@property UInt32 sid;
@property UInt32 cid;
@property (strong) NSString* name;
@end

@implementation auth_kick_user_msg

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) _value_ {
  hasSid_ = !!_value_;
}
@synthesize sid;
- (BOOL) hasCid {
  return !!hasCid_;
}
- (void) setHasCid:(BOOL) _value_ {
  hasCid_ = !!_value_;
}
@synthesize cid;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.sid = 0;
    self.cid = 0;
    self.name = @"";
  }
  return self;
}
static auth_kick_user_msg* defaultauth_kick_user_msgInstance = nil;
+ (void) initialize {
  if (self == [auth_kick_user_msg class]) {
    defaultauth_kick_user_msgInstance = [[auth_kick_user_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultauth_kick_user_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultauth_kick_user_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasCid) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeUInt32:1 value:self.sid];
  }
  if (self.hasCid) {
    [output writeUInt32:2 value:self.cid];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSid) {
    size_ += computeUInt32Size(1, self.sid);
  }
  if (self.hasCid) {
    size_ += computeUInt32Size(2, self.cid);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (auth_kick_user_msg*) parseFromData:(NSData*) data {
  return (auth_kick_user_msg*)[[[auth_kick_user_msg builder] mergeFromData:data] build];
}
+ (auth_kick_user_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_kick_user_msg*)[[[auth_kick_user_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (auth_kick_user_msg*) parseFromInputStream:(NSInputStream*) input {
  return (auth_kick_user_msg*)[[[auth_kick_user_msg builder] mergeFromInputStream:input] build];
}
+ (auth_kick_user_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_kick_user_msg*)[[[auth_kick_user_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_kick_user_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (auth_kick_user_msg*)[[[auth_kick_user_msg builder] mergeFromCodedInputStream:input] build];
}
+ (auth_kick_user_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_kick_user_msg*)[[[auth_kick_user_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_kick_user_msgBuilder*) builder {
  return [[auth_kick_user_msgBuilder alloc] init];
}
+ (auth_kick_user_msgBuilder*) builderWithPrototype:(auth_kick_user_msg*) prototype {
  return [[auth_kick_user_msg builder] mergeFrom:prototype];
}
- (auth_kick_user_msgBuilder*) builder {
  return [auth_kick_user_msg builder];
}
- (auth_kick_user_msgBuilder*) toBuilder {
  return [auth_kick_user_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sid", [NSNumber numberWithInteger:self.sid]];
  }
  if (self.hasCid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cid", [NSNumber numberWithInteger:self.cid]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.sid] forKey: @"sid"];
  }
  if (self.hasCid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cid] forKey: @"cid"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[auth_kick_user_msg class]]) {
    return NO;
  }
  auth_kick_user_msg *otherMessage = other;
  return
      self.hasSid == otherMessage.hasSid &&
      (!self.hasSid || self.sid == otherMessage.sid) &&
      self.hasCid == otherMessage.hasCid &&
      (!self.hasCid || self.cid == otherMessage.cid) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sid] hash];
  }
  if (self.hasCid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cid] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface auth_kick_user_msgBuilder()
@property (strong) auth_kick_user_msg* resultAuthKickUserMsg;
@end

@implementation auth_kick_user_msgBuilder
@synthesize resultAuthKickUserMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAuthKickUserMsg = [[auth_kick_user_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAuthKickUserMsg;
}
- (auth_kick_user_msgBuilder*) clear {
  self.resultAuthKickUserMsg = [[auth_kick_user_msg alloc] init];
  return self;
}
- (auth_kick_user_msgBuilder*) clone {
  return [auth_kick_user_msg builderWithPrototype:resultAuthKickUserMsg];
}
- (auth_kick_user_msg*) defaultInstance {
  return [auth_kick_user_msg defaultInstance];
}
- (auth_kick_user_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (auth_kick_user_msg*) buildPartial {
  auth_kick_user_msg* returnMe = resultAuthKickUserMsg;
  self.resultAuthKickUserMsg = nil;
  return returnMe;
}
- (auth_kick_user_msgBuilder*) mergeFrom:(auth_kick_user_msg*) other {
  if (other == [auth_kick_user_msg defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasCid) {
    [self setCid:other.cid];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (auth_kick_user_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (auth_kick_user_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSid:[input readUInt32]];
        break;
      }
      case 16: {
        [self setCid:[input readUInt32]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return resultAuthKickUserMsg.hasSid;
}
- (UInt32) sid {
  return resultAuthKickUserMsg.sid;
}
- (auth_kick_user_msgBuilder*) setSid:(UInt32) value {
  resultAuthKickUserMsg.hasSid = YES;
  resultAuthKickUserMsg.sid = value;
  return self;
}
- (auth_kick_user_msgBuilder*) clearSid {
  resultAuthKickUserMsg.hasSid = NO;
  resultAuthKickUserMsg.sid = 0;
  return self;
}
- (BOOL) hasCid {
  return resultAuthKickUserMsg.hasCid;
}
- (UInt32) cid {
  return resultAuthKickUserMsg.cid;
}
- (auth_kick_user_msgBuilder*) setCid:(UInt32) value {
  resultAuthKickUserMsg.hasCid = YES;
  resultAuthKickUserMsg.cid = value;
  return self;
}
- (auth_kick_user_msgBuilder*) clearCid {
  resultAuthKickUserMsg.hasCid = NO;
  resultAuthKickUserMsg.cid = 0;
  return self;
}
- (BOOL) hasName {
  return resultAuthKickUserMsg.hasName;
}
- (NSString*) name {
  return resultAuthKickUserMsg.name;
}
- (auth_kick_user_msgBuilder*) setName:(NSString*) value {
  resultAuthKickUserMsg.hasName = YES;
  resultAuthKickUserMsg.name = value;
  return self;
}
- (auth_kick_user_msgBuilder*) clearName {
  resultAuthKickUserMsg.hasName = NO;
  resultAuthKickUserMsg.name = @"";
  return self;
}
@end

@interface auth_user_offline_msg ()
@property UInt32 sid;
@property UInt32 cid;
@property (strong) NSString* name;
@property client_login_msglogin_type ltype;
@end

@implementation auth_user_offline_msg

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) _value_ {
  hasSid_ = !!_value_;
}
@synthesize sid;
- (BOOL) hasCid {
  return !!hasCid_;
}
- (void) setHasCid:(BOOL) _value_ {
  hasCid_ = !!_value_;
}
@synthesize cid;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasLtype {
  return !!hasLtype_;
}
- (void) setHasLtype:(BOOL) _value_ {
  hasLtype_ = !!_value_;
}
@synthesize ltype;
- (instancetype) init {
  if ((self = [super init])) {
    self.sid = 0;
    self.cid = 0;
    self.name = @"";
    self.ltype = client_login_msglogin_typeIndexPc;
  }
  return self;
}
static auth_user_offline_msg* defaultauth_user_offline_msgInstance = nil;
+ (void) initialize {
  if (self == [auth_user_offline_msg class]) {
    defaultauth_user_offline_msgInstance = [[auth_user_offline_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultauth_user_offline_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultauth_user_offline_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSid) {
    return NO;
  }
  if (!self.hasCid) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasLtype) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeUInt32:1 value:self.sid];
  }
  if (self.hasCid) {
    [output writeUInt32:2 value:self.cid];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasLtype) {
    [output writeEnum:4 value:self.ltype];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSid) {
    size_ += computeUInt32Size(1, self.sid);
  }
  if (self.hasCid) {
    size_ += computeUInt32Size(2, self.cid);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  if (self.hasLtype) {
    size_ += computeEnumSize(4, self.ltype);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (auth_user_offline_msg*) parseFromData:(NSData*) data {
  return (auth_user_offline_msg*)[[[auth_user_offline_msg builder] mergeFromData:data] build];
}
+ (auth_user_offline_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_user_offline_msg*)[[[auth_user_offline_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (auth_user_offline_msg*) parseFromInputStream:(NSInputStream*) input {
  return (auth_user_offline_msg*)[[[auth_user_offline_msg builder] mergeFromInputStream:input] build];
}
+ (auth_user_offline_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_user_offline_msg*)[[[auth_user_offline_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_user_offline_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (auth_user_offline_msg*)[[[auth_user_offline_msg builder] mergeFromCodedInputStream:input] build];
}
+ (auth_user_offline_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_user_offline_msg*)[[[auth_user_offline_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_user_offline_msgBuilder*) builder {
  return [[auth_user_offline_msgBuilder alloc] init];
}
+ (auth_user_offline_msgBuilder*) builderWithPrototype:(auth_user_offline_msg*) prototype {
  return [[auth_user_offline_msg builder] mergeFrom:prototype];
}
- (auth_user_offline_msgBuilder*) builder {
  return [auth_user_offline_msg builder];
}
- (auth_user_offline_msgBuilder*) toBuilder {
  return [auth_user_offline_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sid", [NSNumber numberWithInteger:self.sid]];
  }
  if (self.hasCid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cid", [NSNumber numberWithInteger:self.cid]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasLtype) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ltype", NSStringFromclient_login_msglogin_type(self.ltype)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.sid] forKey: @"sid"];
  }
  if (self.hasCid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cid] forKey: @"cid"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasLtype) {
    [dictionary setObject: @(self.ltype) forKey: @"ltype"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[auth_user_offline_msg class]]) {
    return NO;
  }
  auth_user_offline_msg *otherMessage = other;
  return
      self.hasSid == otherMessage.hasSid &&
      (!self.hasSid || self.sid == otherMessage.sid) &&
      self.hasCid == otherMessage.hasCid &&
      (!self.hasCid || self.cid == otherMessage.cid) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasLtype == otherMessage.hasLtype &&
      (!self.hasLtype || self.ltype == otherMessage.ltype) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sid] hash];
  }
  if (self.hasCid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cid] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasLtype) {
    hashCode = hashCode * 31 + self.ltype;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface auth_user_offline_msgBuilder()
@property (strong) auth_user_offline_msg* resultAuthUserOfflineMsg;
@end

@implementation auth_user_offline_msgBuilder
@synthesize resultAuthUserOfflineMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAuthUserOfflineMsg = [[auth_user_offline_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAuthUserOfflineMsg;
}
- (auth_user_offline_msgBuilder*) clear {
  self.resultAuthUserOfflineMsg = [[auth_user_offline_msg alloc] init];
  return self;
}
- (auth_user_offline_msgBuilder*) clone {
  return [auth_user_offline_msg builderWithPrototype:resultAuthUserOfflineMsg];
}
- (auth_user_offline_msg*) defaultInstance {
  return [auth_user_offline_msg defaultInstance];
}
- (auth_user_offline_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (auth_user_offline_msg*) buildPartial {
  auth_user_offline_msg* returnMe = resultAuthUserOfflineMsg;
  self.resultAuthUserOfflineMsg = nil;
  return returnMe;
}
- (auth_user_offline_msgBuilder*) mergeFrom:(auth_user_offline_msg*) other {
  if (other == [auth_user_offline_msg defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasCid) {
    [self setCid:other.cid];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasLtype) {
    [self setLtype:other.ltype];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (auth_user_offline_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (auth_user_offline_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSid:[input readUInt32]];
        break;
      }
      case 16: {
        [self setCid:[input readUInt32]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 32: {
        client_login_msglogin_type value = (client_login_msglogin_type)[input readEnum];
        if (client_login_msglogin_typeIsValidValue(value)) {
          [self setLtype:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return resultAuthUserOfflineMsg.hasSid;
}
- (UInt32) sid {
  return resultAuthUserOfflineMsg.sid;
}
- (auth_user_offline_msgBuilder*) setSid:(UInt32) value {
  resultAuthUserOfflineMsg.hasSid = YES;
  resultAuthUserOfflineMsg.sid = value;
  return self;
}
- (auth_user_offline_msgBuilder*) clearSid {
  resultAuthUserOfflineMsg.hasSid = NO;
  resultAuthUserOfflineMsg.sid = 0;
  return self;
}
- (BOOL) hasCid {
  return resultAuthUserOfflineMsg.hasCid;
}
- (UInt32) cid {
  return resultAuthUserOfflineMsg.cid;
}
- (auth_user_offline_msgBuilder*) setCid:(UInt32) value {
  resultAuthUserOfflineMsg.hasCid = YES;
  resultAuthUserOfflineMsg.cid = value;
  return self;
}
- (auth_user_offline_msgBuilder*) clearCid {
  resultAuthUserOfflineMsg.hasCid = NO;
  resultAuthUserOfflineMsg.cid = 0;
  return self;
}
- (BOOL) hasName {
  return resultAuthUserOfflineMsg.hasName;
}
- (NSString*) name {
  return resultAuthUserOfflineMsg.name;
}
- (auth_user_offline_msgBuilder*) setName:(NSString*) value {
  resultAuthUserOfflineMsg.hasName = YES;
  resultAuthUserOfflineMsg.name = value;
  return self;
}
- (auth_user_offline_msgBuilder*) clearName {
  resultAuthUserOfflineMsg.hasName = NO;
  resultAuthUserOfflineMsg.name = @"";
  return self;
}
- (BOOL) hasLtype {
  return resultAuthUserOfflineMsg.hasLtype;
}
- (client_login_msglogin_type) ltype {
  return resultAuthUserOfflineMsg.ltype;
}
- (auth_user_offline_msgBuilder*) setLtype:(client_login_msglogin_type) value {
  resultAuthUserOfflineMsg.hasLtype = YES;
  resultAuthUserOfflineMsg.ltype = value;
  return self;
}
- (auth_user_offline_msgBuilder*) clearLtype {
  resultAuthUserOfflineMsg.hasLtype = NO;
  resultAuthUserOfflineMsg.ltype = client_login_msglogin_typeIndexPc;
  return self;
}
@end

@interface auth_user_info_req_msg ()
@property client_login_msglogin_type ltype;
@property (strong) NSString* userName;
@end

@implementation auth_user_info_req_msg

- (BOOL) hasLtype {
  return !!hasLtype_;
}
- (void) setHasLtype:(BOOL) _value_ {
  hasLtype_ = !!_value_;
}
@synthesize ltype;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) _value_ {
  hasUserName_ = !!_value_;
}
@synthesize userName;
- (instancetype) init {
  if ((self = [super init])) {
    self.ltype = client_login_msglogin_typeIndexPc;
    self.userName = @"";
  }
  return self;
}
static auth_user_info_req_msg* defaultauth_user_info_req_msgInstance = nil;
+ (void) initialize {
  if (self == [auth_user_info_req_msg class]) {
    defaultauth_user_info_req_msgInstance = [[auth_user_info_req_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultauth_user_info_req_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultauth_user_info_req_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLtype) {
    return NO;
  }
  if (!self.hasUserName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLtype) {
    [output writeEnum:1 value:self.ltype];
  }
  if (self.hasUserName) {
    [output writeString:2 value:self.userName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLtype) {
    size_ += computeEnumSize(1, self.ltype);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(2, self.userName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (auth_user_info_req_msg*) parseFromData:(NSData*) data {
  return (auth_user_info_req_msg*)[[[auth_user_info_req_msg builder] mergeFromData:data] build];
}
+ (auth_user_info_req_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_user_info_req_msg*)[[[auth_user_info_req_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (auth_user_info_req_msg*) parseFromInputStream:(NSInputStream*) input {
  return (auth_user_info_req_msg*)[[[auth_user_info_req_msg builder] mergeFromInputStream:input] build];
}
+ (auth_user_info_req_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_user_info_req_msg*)[[[auth_user_info_req_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_user_info_req_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (auth_user_info_req_msg*)[[[auth_user_info_req_msg builder] mergeFromCodedInputStream:input] build];
}
+ (auth_user_info_req_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_user_info_req_msg*)[[[auth_user_info_req_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_user_info_req_msgBuilder*) builder {
  return [[auth_user_info_req_msgBuilder alloc] init];
}
+ (auth_user_info_req_msgBuilder*) builderWithPrototype:(auth_user_info_req_msg*) prototype {
  return [[auth_user_info_req_msg builder] mergeFrom:prototype];
}
- (auth_user_info_req_msgBuilder*) builder {
  return [auth_user_info_req_msg builder];
}
- (auth_user_info_req_msgBuilder*) toBuilder {
  return [auth_user_info_req_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLtype) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ltype", NSStringFromclient_login_msglogin_type(self.ltype)];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasLtype) {
    [dictionary setObject: @(self.ltype) forKey: @"ltype"];
  }
  if (self.hasUserName) {
    [dictionary setObject: self.userName forKey: @"userName"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[auth_user_info_req_msg class]]) {
    return NO;
  }
  auth_user_info_req_msg *otherMessage = other;
  return
      self.hasLtype == otherMessage.hasLtype &&
      (!self.hasLtype || self.ltype == otherMessage.ltype) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLtype) {
    hashCode = hashCode * 31 + self.ltype;
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface auth_user_info_req_msgBuilder()
@property (strong) auth_user_info_req_msg* resultAuthUserInfoReqMsg;
@end

@implementation auth_user_info_req_msgBuilder
@synthesize resultAuthUserInfoReqMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAuthUserInfoReqMsg = [[auth_user_info_req_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAuthUserInfoReqMsg;
}
- (auth_user_info_req_msgBuilder*) clear {
  self.resultAuthUserInfoReqMsg = [[auth_user_info_req_msg alloc] init];
  return self;
}
- (auth_user_info_req_msgBuilder*) clone {
  return [auth_user_info_req_msg builderWithPrototype:resultAuthUserInfoReqMsg];
}
- (auth_user_info_req_msg*) defaultInstance {
  return [auth_user_info_req_msg defaultInstance];
}
- (auth_user_info_req_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (auth_user_info_req_msg*) buildPartial {
  auth_user_info_req_msg* returnMe = resultAuthUserInfoReqMsg;
  self.resultAuthUserInfoReqMsg = nil;
  return returnMe;
}
- (auth_user_info_req_msgBuilder*) mergeFrom:(auth_user_info_req_msg*) other {
  if (other == [auth_user_info_req_msg defaultInstance]) {
    return self;
  }
  if (other.hasLtype) {
    [self setLtype:other.ltype];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (auth_user_info_req_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (auth_user_info_req_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        client_login_msglogin_type value = (client_login_msglogin_type)[input readEnum];
        if (client_login_msglogin_typeIsValidValue(value)) {
          [self setLtype:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setUserName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLtype {
  return resultAuthUserInfoReqMsg.hasLtype;
}
- (client_login_msglogin_type) ltype {
  return resultAuthUserInfoReqMsg.ltype;
}
- (auth_user_info_req_msgBuilder*) setLtype:(client_login_msglogin_type) value {
  resultAuthUserInfoReqMsg.hasLtype = YES;
  resultAuthUserInfoReqMsg.ltype = value;
  return self;
}
- (auth_user_info_req_msgBuilder*) clearLtype {
  resultAuthUserInfoReqMsg.hasLtype = NO;
  resultAuthUserInfoReqMsg.ltype = client_login_msglogin_typeIndexPc;
  return self;
}
- (BOOL) hasUserName {
  return resultAuthUserInfoReqMsg.hasUserName;
}
- (NSString*) userName {
  return resultAuthUserInfoReqMsg.userName;
}
- (auth_user_info_req_msgBuilder*) setUserName:(NSString*) value {
  resultAuthUserInfoReqMsg.hasUserName = YES;
  resultAuthUserInfoReqMsg.userName = value;
  return self;
}
- (auth_user_info_req_msgBuilder*) clearUserName {
  resultAuthUserInfoReqMsg.hasUserName = NO;
  resultAuthUserInfoReqMsg.userName = @"";
  return self;
}
@end

@interface auth_user_info_rep_msg ()
@property (strong) NSString* userName;
@property (strong) NSString* productName;
@property (strong) NSString* vaildDate;
@property (strong) NSMutableArray * extArray;
@end

@implementation auth_user_info_rep_msg

- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) _value_ {
  hasUserName_ = !!_value_;
}
@synthesize userName;
- (BOOL) hasProductName {
  return !!hasProductName_;
}
- (void) setHasProductName:(BOOL) _value_ {
  hasProductName_ = !!_value_;
}
@synthesize productName;
- (BOOL) hasVaildDate {
  return !!hasVaildDate_;
}
- (void) setHasVaildDate:(BOOL) _value_ {
  hasVaildDate_ = !!_value_;
}
@synthesize vaildDate;
@synthesize extArray;
@dynamic ext;
- (instancetype) init {
  if ((self = [super init])) {
    self.userName = @"";
    self.productName = @"";
    self.vaildDate = @"";
  }
  return self;
}
static auth_user_info_rep_msg* defaultauth_user_info_rep_msgInstance = nil;
+ (void) initialize {
  if (self == [auth_user_info_rep_msg class]) {
    defaultauth_user_info_rep_msgInstance = [[auth_user_info_rep_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultauth_user_info_rep_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultauth_user_info_rep_msgInstance;
}
- (NSArray *)ext {
  return extArray;
}
- (ext_key_info*)extAtIndex:(NSUInteger)index {
  return [extArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasUserName) {
    return NO;
  }
  if (!self.hasProductName) {
    return NO;
  }
  if (!self.hasVaildDate) {
    return NO;
  }
  __block BOOL isInitext = YES;
   [self.ext enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitext = NO;
      *stop = YES;
    }
  }];
  if (!isInitext) return isInitext;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserName) {
    [output writeString:1 value:self.userName];
  }
  if (self.hasProductName) {
    [output writeString:2 value:self.productName];
  }
  if (self.hasVaildDate) {
    [output writeString:3 value:self.vaildDate];
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserName) {
    size_ += computeStringSize(1, self.userName);
  }
  if (self.hasProductName) {
    size_ += computeStringSize(2, self.productName);
  }
  if (self.hasVaildDate) {
    size_ += computeStringSize(3, self.vaildDate);
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (auth_user_info_rep_msg*) parseFromData:(NSData*) data {
  return (auth_user_info_rep_msg*)[[[auth_user_info_rep_msg builder] mergeFromData:data] build];
}
+ (auth_user_info_rep_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_user_info_rep_msg*)[[[auth_user_info_rep_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (auth_user_info_rep_msg*) parseFromInputStream:(NSInputStream*) input {
  return (auth_user_info_rep_msg*)[[[auth_user_info_rep_msg builder] mergeFromInputStream:input] build];
}
+ (auth_user_info_rep_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_user_info_rep_msg*)[[[auth_user_info_rep_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_user_info_rep_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (auth_user_info_rep_msg*)[[[auth_user_info_rep_msg builder] mergeFromCodedInputStream:input] build];
}
+ (auth_user_info_rep_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_user_info_rep_msg*)[[[auth_user_info_rep_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_user_info_rep_msgBuilder*) builder {
  return [[auth_user_info_rep_msgBuilder alloc] init];
}
+ (auth_user_info_rep_msgBuilder*) builderWithPrototype:(auth_user_info_rep_msg*) prototype {
  return [[auth_user_info_rep_msg builder] mergeFrom:prototype];
}
- (auth_user_info_rep_msgBuilder*) builder {
  return [auth_user_info_rep_msg builder];
}
- (auth_user_info_rep_msgBuilder*) toBuilder {
  return [auth_user_info_rep_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasProductName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"productName", self.productName];
  }
  if (self.hasVaildDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vaildDate", self.vaildDate];
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"ext"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserName) {
    [dictionary setObject: self.userName forKey: @"userName"];
  }
  if (self.hasProductName) {
    [dictionary setObject: self.productName forKey: @"productName"];
  }
  if (self.hasVaildDate) {
    [dictionary setObject: self.vaildDate forKey: @"vaildDate"];
  }
  for (ext_key_info* element in self.extArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"ext"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[auth_user_info_rep_msg class]]) {
    return NO;
  }
  auth_user_info_rep_msg *otherMessage = other;
  return
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasProductName == otherMessage.hasProductName &&
      (!self.hasProductName || [self.productName isEqual:otherMessage.productName]) &&
      self.hasVaildDate == otherMessage.hasVaildDate &&
      (!self.hasVaildDate || [self.vaildDate isEqual:otherMessage.vaildDate]) &&
      [self.extArray isEqualToArray:otherMessage.extArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasProductName) {
    hashCode = hashCode * 31 + [self.productName hash];
  }
  if (self.hasVaildDate) {
    hashCode = hashCode * 31 + [self.vaildDate hash];
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface auth_user_info_rep_msgBuilder()
@property (strong) auth_user_info_rep_msg* resultAuthUserInfoRepMsg;
@end

@implementation auth_user_info_rep_msgBuilder
@synthesize resultAuthUserInfoRepMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAuthUserInfoRepMsg = [[auth_user_info_rep_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAuthUserInfoRepMsg;
}
- (auth_user_info_rep_msgBuilder*) clear {
  self.resultAuthUserInfoRepMsg = [[auth_user_info_rep_msg alloc] init];
  return self;
}
- (auth_user_info_rep_msgBuilder*) clone {
  return [auth_user_info_rep_msg builderWithPrototype:resultAuthUserInfoRepMsg];
}
- (auth_user_info_rep_msg*) defaultInstance {
  return [auth_user_info_rep_msg defaultInstance];
}
- (auth_user_info_rep_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (auth_user_info_rep_msg*) buildPartial {
  auth_user_info_rep_msg* returnMe = resultAuthUserInfoRepMsg;
  self.resultAuthUserInfoRepMsg = nil;
  return returnMe;
}
- (auth_user_info_rep_msgBuilder*) mergeFrom:(auth_user_info_rep_msg*) other {
  if (other == [auth_user_info_rep_msg defaultInstance]) {
    return self;
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasProductName) {
    [self setProductName:other.productName];
  }
  if (other.hasVaildDate) {
    [self setVaildDate:other.vaildDate];
  }
  if (other.extArray.count > 0) {
    if (resultAuthUserInfoRepMsg.extArray == nil) {
      resultAuthUserInfoRepMsg.extArray = [[NSMutableArray alloc] initWithArray:other.extArray];
    } else {
      [resultAuthUserInfoRepMsg.extArray addObjectsFromArray:other.extArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (auth_user_info_rep_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (auth_user_info_rep_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserName:[input readString]];
        break;
      }
      case 18: {
        [self setProductName:[input readString]];
        break;
      }
      case 26: {
        [self setVaildDate:[input readString]];
        break;
      }
      case 34: {
        ext_key_infoBuilder* subBuilder = [ext_key_info builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExt:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUserName {
  return resultAuthUserInfoRepMsg.hasUserName;
}
- (NSString*) userName {
  return resultAuthUserInfoRepMsg.userName;
}
- (auth_user_info_rep_msgBuilder*) setUserName:(NSString*) value {
  resultAuthUserInfoRepMsg.hasUserName = YES;
  resultAuthUserInfoRepMsg.userName = value;
  return self;
}
- (auth_user_info_rep_msgBuilder*) clearUserName {
  resultAuthUserInfoRepMsg.hasUserName = NO;
  resultAuthUserInfoRepMsg.userName = @"";
  return self;
}
- (BOOL) hasProductName {
  return resultAuthUserInfoRepMsg.hasProductName;
}
- (NSString*) productName {
  return resultAuthUserInfoRepMsg.productName;
}
- (auth_user_info_rep_msgBuilder*) setProductName:(NSString*) value {
  resultAuthUserInfoRepMsg.hasProductName = YES;
  resultAuthUserInfoRepMsg.productName = value;
  return self;
}
- (auth_user_info_rep_msgBuilder*) clearProductName {
  resultAuthUserInfoRepMsg.hasProductName = NO;
  resultAuthUserInfoRepMsg.productName = @"";
  return self;
}
- (BOOL) hasVaildDate {
  return resultAuthUserInfoRepMsg.hasVaildDate;
}
- (NSString*) vaildDate {
  return resultAuthUserInfoRepMsg.vaildDate;
}
- (auth_user_info_rep_msgBuilder*) setVaildDate:(NSString*) value {
  resultAuthUserInfoRepMsg.hasVaildDate = YES;
  resultAuthUserInfoRepMsg.vaildDate = value;
  return self;
}
- (auth_user_info_rep_msgBuilder*) clearVaildDate {
  resultAuthUserInfoRepMsg.hasVaildDate = NO;
  resultAuthUserInfoRepMsg.vaildDate = @"";
  return self;
}
- (NSMutableArray *)ext {
  return resultAuthUserInfoRepMsg.extArray;
}
- (ext_key_info*)extAtIndex:(NSUInteger)index {
  return [resultAuthUserInfoRepMsg extAtIndex:index];
}
- (auth_user_info_rep_msgBuilder *)addExt:(ext_key_info*)value {
  if (resultAuthUserInfoRepMsg.extArray == nil) {
    resultAuthUserInfoRepMsg.extArray = [[NSMutableArray alloc]init];
  }
  [resultAuthUserInfoRepMsg.extArray addObject:value];
  return self;
}
- (auth_user_info_rep_msgBuilder *)setExtArray:(NSArray *)array {
  resultAuthUserInfoRepMsg.extArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (auth_user_info_rep_msgBuilder *)clearExt {
  resultAuthUserInfoRepMsg.extArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
