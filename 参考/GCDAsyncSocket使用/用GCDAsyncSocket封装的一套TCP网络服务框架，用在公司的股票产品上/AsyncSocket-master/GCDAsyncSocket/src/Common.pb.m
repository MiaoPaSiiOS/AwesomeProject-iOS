// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Common.pb.h"
// @@protoc_insertion_point(imports)

@implementation CommonRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CommonRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL eum_method_typeIsValidValue(eum_method_type value) {
  switch (value) {
    case eum_method_typeCommonErrorRep:
    case eum_method_typeLoadDetector:
    case eum_method_typeServerLogin:
    case eum_method_typeServerLoginRet:
    case eum_method_typeClientLogin:
    case eum_method_typeClientLoginRet:
    case eum_method_typeLoginConflict:
    case eum_method_typeIndexRequest:
    case eum_method_typeIndexResult:
    case eum_method_typeIndexComboResult:
    case eum_method_typeErrorFeedback:
    case eum_method_typeSubcribeTopic:
    case eum_method_typeUnsubcribeTopic:
    case eum_method_typePublicTopic:
    case eum_method_typeIndexDataRequest:
    case eum_method_typeIndexDataResult:
    case eum_method_typeRiseDropRequest:
    case eum_method_typeRiseDropResult:
    case eum_method_typeTgRStockPool:
    case eum_method_typeTgRMsgBox:
    case eum_method_typeReportReportRequest:
    case eum_method_typeReportReportResult:
    case eum_method_typeReportLargedealRequest:
    case eum_method_typeReportLargedealResult:
    case eum_method_typeReportMinuteRequest:
    case eum_method_typeReportMinuteResult:
    case eum_method_typeReportKlineRequest:
    case eum_method_typeReportKlineResult:
    case eum_method_typeReportSearchStockRequest:
    case eum_method_typeReportSearchStockResult:
    case eum_method_typeReportBoardreportRequest:
    case eum_method_typeReportBoardreportResult:
    case eum_method_typeReportBidDealRequest:
    case eum_method_typeReportBidDealResult:
    case eum_method_typeReportLastOpenDayRequest:
    case eum_method_typeReportLastOpenDayResult:
    case eum_method_typeReportBoardreportOptionalRequest:
    case eum_method_typeReportBoardreportOptionalResult:
    case eum_method_typeReportBoardreportTopRequest:
    case eum_method_typeReportBoardreportTopResult:
    case eum_method_typeWarningWarningConfigRequest:
    case eum_method_typeWarningWarningConfigResult:
    case eum_method_typeWarningWarningUserAllStockStatusRequest:
    case eum_method_typeWarningWarningUserAllStockStatusResult:
    case eum_method_typeWarningSetWarningConfigRequest:
    case eum_method_typeWarningSetWarningConfigResult:
    case eum_method_typeWarningDeleteUserStockWarningConfigRequest:
    case eum_method_typeWarningDeleteUserStockWarningConfigResult:
    case eum_method_typeReportIndexKeepRequest:
    case eum_method_typeReportIndexKeepResult:
    case eum_method_typeReportBlockRelationRequest:
    case eum_method_typeReportBlockRelationResult:
    case eum_method_typeWarningGetUserStockWarningRecordRequest:
    case eum_method_typeWarningGetUserStockWarningRecordResult:
    case eum_method_typeReportCodeNameRequest:
    case eum_method_typeReportCodeNameResult:
    case eum_method_typeEumSyncNotify:
    case eum_method_typeEumPushNotify:
    case eum_method_typeEumPushAck:
    case eum_method_typeEumComboPrivateNotify:
    case eum_method_typeEumAuthKickUser:
    case eum_method_typeEumAuthUserOffline:
    case eum_method_typeEumAuthUserInfoReq:
    case eum_method_typeEumAuthUserInfoRep:
    case eum_method_typeEumMethodEnd:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromeum_method_type(eum_method_type value) {
  switch (value) {
    case eum_method_typeCommonErrorRep:
      return @"eum_method_typeCommonErrorRep";
    case eum_method_typeLoadDetector:
      return @"eum_method_typeLoadDetector";
    case eum_method_typeServerLogin:
      return @"eum_method_typeServerLogin";
    case eum_method_typeServerLoginRet:
      return @"eum_method_typeServerLoginRet";
    case eum_method_typeClientLogin:
      return @"eum_method_typeClientLogin";
    case eum_method_typeClientLoginRet:
      return @"eum_method_typeClientLoginRet";
    case eum_method_typeLoginConflict:
      return @"eum_method_typeLoginConflict";
    case eum_method_typeIndexRequest:
      return @"eum_method_typeIndexRequest";
    case eum_method_typeIndexResult:
      return @"eum_method_typeIndexResult";
    case eum_method_typeIndexComboResult:
      return @"eum_method_typeIndexComboResult";
    case eum_method_typeErrorFeedback:
      return @"eum_method_typeErrorFeedback";
    case eum_method_typeSubcribeTopic:
      return @"eum_method_typeSubcribeTopic";
    case eum_method_typeUnsubcribeTopic:
      return @"eum_method_typeUnsubcribeTopic";
    case eum_method_typePublicTopic:
      return @"eum_method_typePublicTopic";
    case eum_method_typeIndexDataRequest:
      return @"eum_method_typeIndexDataRequest";
    case eum_method_typeIndexDataResult:
      return @"eum_method_typeIndexDataResult";
    case eum_method_typeRiseDropRequest:
      return @"eum_method_typeRiseDropRequest";
    case eum_method_typeRiseDropResult:
      return @"eum_method_typeRiseDropResult";
    case eum_method_typeTgRStockPool:
      return @"eum_method_typeTgRStockPool";
    case eum_method_typeTgRMsgBox:
      return @"eum_method_typeTgRMsgBox";
    case eum_method_typeReportReportRequest:
      return @"eum_method_typeReportReportRequest";
    case eum_method_typeReportReportResult:
      return @"eum_method_typeReportReportResult";
    case eum_method_typeReportLargedealRequest:
      return @"eum_method_typeReportLargedealRequest";
    case eum_method_typeReportLargedealResult:
      return @"eum_method_typeReportLargedealResult";
    case eum_method_typeReportMinuteRequest:
      return @"eum_method_typeReportMinuteRequest";
    case eum_method_typeReportMinuteResult:
      return @"eum_method_typeReportMinuteResult";
    case eum_method_typeReportKlineRequest:
      return @"eum_method_typeReportKlineRequest";
    case eum_method_typeReportKlineResult:
      return @"eum_method_typeReportKlineResult";
    case eum_method_typeReportSearchStockRequest:
      return @"eum_method_typeReportSearchStockRequest";
    case eum_method_typeReportSearchStockResult:
      return @"eum_method_typeReportSearchStockResult";
    case eum_method_typeReportBoardreportRequest:
      return @"eum_method_typeReportBoardreportRequest";
    case eum_method_typeReportBoardreportResult:
      return @"eum_method_typeReportBoardreportResult";
    case eum_method_typeReportBidDealRequest:
      return @"eum_method_typeReportBidDealRequest";
    case eum_method_typeReportBidDealResult:
      return @"eum_method_typeReportBidDealResult";
    case eum_method_typeReportLastOpenDayRequest:
      return @"eum_method_typeReportLastOpenDayRequest";
    case eum_method_typeReportLastOpenDayResult:
      return @"eum_method_typeReportLastOpenDayResult";
    case eum_method_typeReportBoardreportOptionalRequest:
      return @"eum_method_typeReportBoardreportOptionalRequest";
    case eum_method_typeReportBoardreportOptionalResult:
      return @"eum_method_typeReportBoardreportOptionalResult";
    case eum_method_typeReportBoardreportTopRequest:
      return @"eum_method_typeReportBoardreportTopRequest";
    case eum_method_typeReportBoardreportTopResult:
      return @"eum_method_typeReportBoardreportTopResult";
    case eum_method_typeWarningWarningConfigRequest:
      return @"eum_method_typeWarningWarningConfigRequest";
    case eum_method_typeWarningWarningConfigResult:
      return @"eum_method_typeWarningWarningConfigResult";
    case eum_method_typeWarningWarningUserAllStockStatusRequest:
      return @"eum_method_typeWarningWarningUserAllStockStatusRequest";
    case eum_method_typeWarningWarningUserAllStockStatusResult:
      return @"eum_method_typeWarningWarningUserAllStockStatusResult";
    case eum_method_typeWarningSetWarningConfigRequest:
      return @"eum_method_typeWarningSetWarningConfigRequest";
    case eum_method_typeWarningSetWarningConfigResult:
      return @"eum_method_typeWarningSetWarningConfigResult";
    case eum_method_typeWarningDeleteUserStockWarningConfigRequest:
      return @"eum_method_typeWarningDeleteUserStockWarningConfigRequest";
    case eum_method_typeWarningDeleteUserStockWarningConfigResult:
      return @"eum_method_typeWarningDeleteUserStockWarningConfigResult";
    case eum_method_typeReportIndexKeepRequest:
      return @"eum_method_typeReportIndexKeepRequest";
    case eum_method_typeReportIndexKeepResult:
      return @"eum_method_typeReportIndexKeepResult";
    case eum_method_typeReportBlockRelationRequest:
      return @"eum_method_typeReportBlockRelationRequest";
    case eum_method_typeReportBlockRelationResult:
      return @"eum_method_typeReportBlockRelationResult";
    case eum_method_typeWarningGetUserStockWarningRecordRequest:
      return @"eum_method_typeWarningGetUserStockWarningRecordRequest";
    case eum_method_typeWarningGetUserStockWarningRecordResult:
      return @"eum_method_typeWarningGetUserStockWarningRecordResult";
    case eum_method_typeReportCodeNameRequest:
      return @"eum_method_typeReportCodeNameRequest";
    case eum_method_typeReportCodeNameResult:
      return @"eum_method_typeReportCodeNameResult";
    case eum_method_typeEumSyncNotify:
      return @"eum_method_typeEumSyncNotify";
    case eum_method_typeEumPushNotify:
      return @"eum_method_typeEumPushNotify";
    case eum_method_typeEumPushAck:
      return @"eum_method_typeEumPushAck";
    case eum_method_typeEumComboPrivateNotify:
      return @"eum_method_typeEumComboPrivateNotify";
    case eum_method_typeEumAuthKickUser:
      return @"eum_method_typeEumAuthKickUser";
    case eum_method_typeEumAuthUserOffline:
      return @"eum_method_typeEumAuthUserOffline";
    case eum_method_typeEumAuthUserInfoReq:
      return @"eum_method_typeEumAuthUserInfoReq";
    case eum_method_typeEumAuthUserInfoRep:
      return @"eum_method_typeEumAuthUserInfoRep";
    case eum_method_typeEumMethodEnd:
      return @"eum_method_typeEumMethodEnd";
    default:
      return nil;
  }
}

BOOL eum_rpc_serviceIsValidValue(eum_rpc_service value) {
  switch (value) {
    case eum_rpc_serviceCommonService:
    case eum_rpc_serviceReportService:
    case eum_rpc_serviceIndexService:
    case eum_rpc_serviceInvestmentService:
    case eum_rpc_serviceWarningService:
    case eum_rpc_serviceEumServiceEnd:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromeum_rpc_service(eum_rpc_service value) {
  switch (value) {
    case eum_rpc_serviceCommonService:
      return @"eum_rpc_serviceCommonService";
    case eum_rpc_serviceReportService:
      return @"eum_rpc_serviceReportService";
    case eum_rpc_serviceIndexService:
      return @"eum_rpc_serviceIndexService";
    case eum_rpc_serviceInvestmentService:
      return @"eum_rpc_serviceInvestmentService";
    case eum_rpc_serviceWarningService:
      return @"eum_rpc_serviceWarningService";
    case eum_rpc_serviceEumServiceEnd:
      return @"eum_rpc_serviceEumServiceEnd";
    default:
      return nil;
  }
}

BOOL eum_nofity_typeIsValidValue(eum_nofity_type value) {
  switch (value) {
    case eum_nofity_typeTgStockInPoolNotify:
    case eum_nofity_typeTgStockOutPoolNotify:
    case eum_nofity_typeTgStockModifyTargetNofity:
    case eum_nofity_typeTgStockModifyStopNodify:
    case eum_nofity_typeTgStockBuyNodify:
    case eum_nofity_typeTgStockProfitSellNofity:
    case eum_nofity_typeTgStockStopLossNofity:
    case eum_nofity_typeTgFocusNews:
    case eum_nofity_typeTgTrailerAndNotice:
    case eum_nofity_typeCommonUpdateNotice:
    case eum_nofity_typeIndexStockWarningNotice:
    case eum_nofity_typeReportMarketStatusNotify:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromeum_nofity_type(eum_nofity_type value) {
  switch (value) {
    case eum_nofity_typeTgStockInPoolNotify:
      return @"eum_nofity_typeTgStockInPoolNotify";
    case eum_nofity_typeTgStockOutPoolNotify:
      return @"eum_nofity_typeTgStockOutPoolNotify";
    case eum_nofity_typeTgStockModifyTargetNofity:
      return @"eum_nofity_typeTgStockModifyTargetNofity";
    case eum_nofity_typeTgStockModifyStopNodify:
      return @"eum_nofity_typeTgStockModifyStopNodify";
    case eum_nofity_typeTgStockBuyNodify:
      return @"eum_nofity_typeTgStockBuyNodify";
    case eum_nofity_typeTgStockProfitSellNofity:
      return @"eum_nofity_typeTgStockProfitSellNofity";
    case eum_nofity_typeTgStockStopLossNofity:
      return @"eum_nofity_typeTgStockStopLossNofity";
    case eum_nofity_typeTgFocusNews:
      return @"eum_nofity_typeTgFocusNews";
    case eum_nofity_typeTgTrailerAndNotice:
      return @"eum_nofity_typeTgTrailerAndNotice";
    case eum_nofity_typeCommonUpdateNotice:
      return @"eum_nofity_typeCommonUpdateNotice";
    case eum_nofity_typeIndexStockWarningNotice:
      return @"eum_nofity_typeIndexStockWarningNotice";
    case eum_nofity_typeReportMarketStatusNotify:
      return @"eum_nofity_typeReportMarketStatusNotify";
    default:
      return nil;
  }
}

@interface ext_key_info ()
@property (strong) NSString* key;
@property (strong) NSString* value;
@end

@implementation ext_key_info

- (BOOL) hasKey {
  return !!hasKey_;
}
- (void) setHasKey:(BOOL) _value_ {
  hasKey_ = !!_value_;
}
@synthesize key;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) _value_ {
  hasValue_ = !!_value_;
}
@synthesize value;
- (instancetype) init {
  if ((self = [super init])) {
    self.key = @"";
    self.value = @"";
  }
  return self;
}
static ext_key_info* defaultext_key_infoInstance = nil;
+ (void) initialize {
  if (self == [ext_key_info class]) {
    defaultext_key_infoInstance = [[ext_key_info alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultext_key_infoInstance;
}
- (instancetype) defaultInstance {
  return defaultext_key_infoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasKey) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKey) {
    [output writeString:1 value:self.key];
  }
  if (self.hasValue) {
    [output writeString:2 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasKey) {
    size_ += computeStringSize(1, self.key);
  }
  if (self.hasValue) {
    size_ += computeStringSize(2, self.value);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ext_key_info*) parseFromData:(NSData*) data {
  return (ext_key_info*)[[[ext_key_info builder] mergeFromData:data] build];
}
+ (ext_key_info*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ext_key_info*)[[[ext_key_info builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ext_key_info*) parseFromInputStream:(NSInputStream*) input {
  return (ext_key_info*)[[[ext_key_info builder] mergeFromInputStream:input] build];
}
+ (ext_key_info*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ext_key_info*)[[[ext_key_info builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ext_key_info*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ext_key_info*)[[[ext_key_info builder] mergeFromCodedInputStream:input] build];
}
+ (ext_key_info*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ext_key_info*)[[[ext_key_info builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ext_key_infoBuilder*) builder {
  return [[ext_key_infoBuilder alloc] init];
}
+ (ext_key_infoBuilder*) builderWithPrototype:(ext_key_info*) prototype {
  return [[ext_key_info builder] mergeFrom:prototype];
}
- (ext_key_infoBuilder*) builder {
  return [ext_key_info builder];
}
- (ext_key_infoBuilder*) toBuilder {
  return [ext_key_info builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"key", self.key];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasKey) {
    [dictionary setObject: self.key forKey: @"key"];
  }
  if (self.hasValue) {
    [dictionary setObject: self.value forKey: @"value"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ext_key_info class]]) {
    return NO;
  }
  ext_key_info *otherMessage = other;
  return
      self.hasKey == otherMessage.hasKey &&
      (!self.hasKey || [self.key isEqual:otherMessage.key]) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || [self.value isEqual:otherMessage.value]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasKey) {
    hashCode = hashCode * 31 + [self.key hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [self.value hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ext_key_infoBuilder()
@property (strong) ext_key_info* resultExtKeyInfo;
@end

@implementation ext_key_infoBuilder
@synthesize resultExtKeyInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultExtKeyInfo = [[ext_key_info alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultExtKeyInfo;
}
- (ext_key_infoBuilder*) clear {
  self.resultExtKeyInfo = [[ext_key_info alloc] init];
  return self;
}
- (ext_key_infoBuilder*) clone {
  return [ext_key_info builderWithPrototype:resultExtKeyInfo];
}
- (ext_key_info*) defaultInstance {
  return [ext_key_info defaultInstance];
}
- (ext_key_info*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ext_key_info*) buildPartial {
  ext_key_info* returnMe = resultExtKeyInfo;
  self.resultExtKeyInfo = nil;
  return returnMe;
}
- (ext_key_infoBuilder*) mergeFrom:(ext_key_info*) other {
  if (other == [ext_key_info defaultInstance]) {
    return self;
  }
  if (other.hasKey) {
    [self setKey:other.key];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ext_key_infoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ext_key_infoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setKey:[input readString]];
        break;
      }
      case 18: {
        [self setValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasKey {
  return resultExtKeyInfo.hasKey;
}
- (NSString*) key {
  return resultExtKeyInfo.key;
}
- (ext_key_infoBuilder*) setKey:(NSString*) value {
  resultExtKeyInfo.hasKey = YES;
  resultExtKeyInfo.key = value;
  return self;
}
- (ext_key_infoBuilder*) clearKey {
  resultExtKeyInfo.hasKey = NO;
  resultExtKeyInfo.key = @"";
  return self;
}
- (BOOL) hasValue {
  return resultExtKeyInfo.hasValue;
}
- (NSString*) value {
  return resultExtKeyInfo.value;
}
- (ext_key_infoBuilder*) setValue:(NSString*) value {
  resultExtKeyInfo.hasValue = YES;
  resultExtKeyInfo.value = value;
  return self;
}
- (ext_key_infoBuilder*) clearValue {
  resultExtKeyInfo.hasValue = NO;
  resultExtKeyInfo.value = @"";
  return self;
}
@end

@interface subcribe_msg ()
@property eum_rpc_service serviceType;
@property (strong) NSString* topic;
@end

@implementation subcribe_msg

- (BOOL) hasServiceType {
  return !!hasServiceType_;
}
- (void) setHasServiceType:(BOOL) _value_ {
  hasServiceType_ = !!_value_;
}
@synthesize serviceType;
- (BOOL) hasTopic {
  return !!hasTopic_;
}
- (void) setHasTopic:(BOOL) _value_ {
  hasTopic_ = !!_value_;
}
@synthesize topic;
- (instancetype) init {
  if ((self = [super init])) {
    self.serviceType = eum_rpc_serviceCommonService;
    self.topic = @"";
  }
  return self;
}
static subcribe_msg* defaultsubcribe_msgInstance = nil;
+ (void) initialize {
  if (self == [subcribe_msg class]) {
    defaultsubcribe_msgInstance = [[subcribe_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultsubcribe_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultsubcribe_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasServiceType) {
    return NO;
  }
  if (!self.hasTopic) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasServiceType) {
    [output writeEnum:1 value:self.serviceType];
  }
  if (self.hasTopic) {
    [output writeString:2 value:self.topic];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasServiceType) {
    size_ += computeEnumSize(1, self.serviceType);
  }
  if (self.hasTopic) {
    size_ += computeStringSize(2, self.topic);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (subcribe_msg*) parseFromData:(NSData*) data {
  return (subcribe_msg*)[[[subcribe_msg builder] mergeFromData:data] build];
}
+ (subcribe_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (subcribe_msg*)[[[subcribe_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (subcribe_msg*) parseFromInputStream:(NSInputStream*) input {
  return (subcribe_msg*)[[[subcribe_msg builder] mergeFromInputStream:input] build];
}
+ (subcribe_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (subcribe_msg*)[[[subcribe_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (subcribe_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (subcribe_msg*)[[[subcribe_msg builder] mergeFromCodedInputStream:input] build];
}
+ (subcribe_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (subcribe_msg*)[[[subcribe_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (subcribe_msgBuilder*) builder {
  return [[subcribe_msgBuilder alloc] init];
}
+ (subcribe_msgBuilder*) builderWithPrototype:(subcribe_msg*) prototype {
  return [[subcribe_msg builder] mergeFrom:prototype];
}
- (subcribe_msgBuilder*) builder {
  return [subcribe_msg builder];
}
- (subcribe_msgBuilder*) toBuilder {
  return [subcribe_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasServiceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serviceType", NSStringFromeum_rpc_service(self.serviceType)];
  }
  if (self.hasTopic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topic", self.topic];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasServiceType) {
    [dictionary setObject: @(self.serviceType) forKey: @"serviceType"];
  }
  if (self.hasTopic) {
    [dictionary setObject: self.topic forKey: @"topic"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[subcribe_msg class]]) {
    return NO;
  }
  subcribe_msg *otherMessage = other;
  return
      self.hasServiceType == otherMessage.hasServiceType &&
      (!self.hasServiceType || self.serviceType == otherMessage.serviceType) &&
      self.hasTopic == otherMessage.hasTopic &&
      (!self.hasTopic || [self.topic isEqual:otherMessage.topic]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasServiceType) {
    hashCode = hashCode * 31 + self.serviceType;
  }
  if (self.hasTopic) {
    hashCode = hashCode * 31 + [self.topic hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface subcribe_msgBuilder()
@property (strong) subcribe_msg* resultSubcribeMsg;
@end

@implementation subcribe_msgBuilder
@synthesize resultSubcribeMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSubcribeMsg = [[subcribe_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSubcribeMsg;
}
- (subcribe_msgBuilder*) clear {
  self.resultSubcribeMsg = [[subcribe_msg alloc] init];
  return self;
}
- (subcribe_msgBuilder*) clone {
  return [subcribe_msg builderWithPrototype:resultSubcribeMsg];
}
- (subcribe_msg*) defaultInstance {
  return [subcribe_msg defaultInstance];
}
- (subcribe_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (subcribe_msg*) buildPartial {
  subcribe_msg* returnMe = resultSubcribeMsg;
  self.resultSubcribeMsg = nil;
  return returnMe;
}
- (subcribe_msgBuilder*) mergeFrom:(subcribe_msg*) other {
  if (other == [subcribe_msg defaultInstance]) {
    return self;
  }
  if (other.hasServiceType) {
    [self setServiceType:other.serviceType];
  }
  if (other.hasTopic) {
    [self setTopic:other.topic];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (subcribe_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (subcribe_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        eum_rpc_service value = (eum_rpc_service)[input readEnum];
        if (eum_rpc_serviceIsValidValue(value)) {
          [self setServiceType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setTopic:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasServiceType {
  return resultSubcribeMsg.hasServiceType;
}
- (eum_rpc_service) serviceType {
  return resultSubcribeMsg.serviceType;
}
- (subcribe_msgBuilder*) setServiceType:(eum_rpc_service) value {
  resultSubcribeMsg.hasServiceType = YES;
  resultSubcribeMsg.serviceType = value;
  return self;
}
- (subcribe_msgBuilder*) clearServiceType {
  resultSubcribeMsg.hasServiceType = NO;
  resultSubcribeMsg.serviceType = eum_rpc_serviceCommonService;
  return self;
}
- (BOOL) hasTopic {
  return resultSubcribeMsg.hasTopic;
}
- (NSString*) topic {
  return resultSubcribeMsg.topic;
}
- (subcribe_msgBuilder*) setTopic:(NSString*) value {
  resultSubcribeMsg.hasTopic = YES;
  resultSubcribeMsg.topic = value;
  return self;
}
- (subcribe_msgBuilder*) clearTopic {
  resultSubcribeMsg.hasTopic = NO;
  resultSubcribeMsg.topic = @"";
  return self;
}
@end

@interface sync_notify_msg ()
@property SInt64 uid;
@property (strong) NSString* topic;
@property SInt64 lastSeq;
@property (strong) NSMutableArray * extParamArray;
@end

@implementation sync_notify_msg

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasTopic {
  return !!hasTopic_;
}
- (void) setHasTopic:(BOOL) _value_ {
  hasTopic_ = !!_value_;
}
@synthesize topic;
- (BOOL) hasLastSeq {
  return !!hasLastSeq_;
}
- (void) setHasLastSeq:(BOOL) _value_ {
  hasLastSeq_ = !!_value_;
}
@synthesize lastSeq;
@synthesize extParamArray;
@dynamic extParam;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.topic = @"";
    self.lastSeq = 0L;
  }
  return self;
}
static sync_notify_msg* defaultsync_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [sync_notify_msg class]) {
    defaultsync_notify_msgInstance = [[sync_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultsync_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultsync_notify_msgInstance;
}
- (NSArray *)extParam {
  return extParamArray;
}
- (ext_key_info*)extParamAtIndex:(NSUInteger)index {
  return [extParamArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasTopic) {
    return NO;
  }
  __block BOOL isInitextParam = YES;
   [self.extParam enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitextParam = NO;
      *stop = YES;
    }
  }];
  if (!isInitextParam) return isInitextParam;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeInt64:1 value:self.uid];
  }
  if (self.hasTopic) {
    [output writeString:2 value:self.topic];
  }
  if (self.hasLastSeq) {
    [output writeInt64:3 value:self.lastSeq];
  }
  [self.extParamArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeInt64Size(1, self.uid);
  }
  if (self.hasTopic) {
    size_ += computeStringSize(2, self.topic);
  }
  if (self.hasLastSeq) {
    size_ += computeInt64Size(3, self.lastSeq);
  }
  [self.extParamArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (sync_notify_msg*) parseFromData:(NSData*) data {
  return (sync_notify_msg*)[[[sync_notify_msg builder] mergeFromData:data] build];
}
+ (sync_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (sync_notify_msg*)[[[sync_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (sync_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (sync_notify_msg*)[[[sync_notify_msg builder] mergeFromInputStream:input] build];
}
+ (sync_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (sync_notify_msg*)[[[sync_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (sync_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (sync_notify_msg*)[[[sync_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (sync_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (sync_notify_msg*)[[[sync_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (sync_notify_msgBuilder*) builder {
  return [[sync_notify_msgBuilder alloc] init];
}
+ (sync_notify_msgBuilder*) builderWithPrototype:(sync_notify_msg*) prototype {
  return [[sync_notify_msg builder] mergeFrom:prototype];
}
- (sync_notify_msgBuilder*) builder {
  return [sync_notify_msg builder];
}
- (sync_notify_msgBuilder*) toBuilder {
  return [sync_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasTopic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topic", self.topic];
  }
  if (self.hasLastSeq) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastSeq", [NSNumber numberWithLongLong:self.lastSeq]];
  }
  [self.extParamArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"extParam"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  if (self.hasTopic) {
    [dictionary setObject: self.topic forKey: @"topic"];
  }
  if (self.hasLastSeq) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastSeq] forKey: @"lastSeq"];
  }
  for (ext_key_info* element in self.extParamArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"extParam"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[sync_notify_msg class]]) {
    return NO;
  }
  sync_notify_msg *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasTopic == otherMessage.hasTopic &&
      (!self.hasTopic || [self.topic isEqual:otherMessage.topic]) &&
      self.hasLastSeq == otherMessage.hasLastSeq &&
      (!self.hasLastSeq || self.lastSeq == otherMessage.lastSeq) &&
      [self.extParamArray isEqualToArray:otherMessage.extParamArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasTopic) {
    hashCode = hashCode * 31 + [self.topic hash];
  }
  if (self.hasLastSeq) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastSeq] hash];
  }
  [self.extParamArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface sync_notify_msgBuilder()
@property (strong) sync_notify_msg* resultSyncNotifyMsg;
@end

@implementation sync_notify_msgBuilder
@synthesize resultSyncNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSyncNotifyMsg = [[sync_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSyncNotifyMsg;
}
- (sync_notify_msgBuilder*) clear {
  self.resultSyncNotifyMsg = [[sync_notify_msg alloc] init];
  return self;
}
- (sync_notify_msgBuilder*) clone {
  return [sync_notify_msg builderWithPrototype:resultSyncNotifyMsg];
}
- (sync_notify_msg*) defaultInstance {
  return [sync_notify_msg defaultInstance];
}
- (sync_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (sync_notify_msg*) buildPartial {
  sync_notify_msg* returnMe = resultSyncNotifyMsg;
  self.resultSyncNotifyMsg = nil;
  return returnMe;
}
- (sync_notify_msgBuilder*) mergeFrom:(sync_notify_msg*) other {
  if (other == [sync_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasTopic) {
    [self setTopic:other.topic];
  }
  if (other.hasLastSeq) {
    [self setLastSeq:other.lastSeq];
  }
  if (other.extParamArray.count > 0) {
    if (resultSyncNotifyMsg.extParamArray == nil) {
      resultSyncNotifyMsg.extParamArray = [[NSMutableArray alloc] initWithArray:other.extParamArray];
    } else {
      [resultSyncNotifyMsg.extParamArray addObjectsFromArray:other.extParamArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (sync_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (sync_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readInt64]];
        break;
      }
      case 18: {
        [self setTopic:[input readString]];
        break;
      }
      case 24: {
        [self setLastSeq:[input readInt64]];
        break;
      }
      case 34: {
        ext_key_infoBuilder* subBuilder = [ext_key_info builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExtParam:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultSyncNotifyMsg.hasUid;
}
- (SInt64) uid {
  return resultSyncNotifyMsg.uid;
}
- (sync_notify_msgBuilder*) setUid:(SInt64) value {
  resultSyncNotifyMsg.hasUid = YES;
  resultSyncNotifyMsg.uid = value;
  return self;
}
- (sync_notify_msgBuilder*) clearUid {
  resultSyncNotifyMsg.hasUid = NO;
  resultSyncNotifyMsg.uid = 0L;
  return self;
}
- (BOOL) hasTopic {
  return resultSyncNotifyMsg.hasTopic;
}
- (NSString*) topic {
  return resultSyncNotifyMsg.topic;
}
- (sync_notify_msgBuilder*) setTopic:(NSString*) value {
  resultSyncNotifyMsg.hasTopic = YES;
  resultSyncNotifyMsg.topic = value;
  return self;
}
- (sync_notify_msgBuilder*) clearTopic {
  resultSyncNotifyMsg.hasTopic = NO;
  resultSyncNotifyMsg.topic = @"";
  return self;
}
- (BOOL) hasLastSeq {
  return resultSyncNotifyMsg.hasLastSeq;
}
- (SInt64) lastSeq {
  return resultSyncNotifyMsg.lastSeq;
}
- (sync_notify_msgBuilder*) setLastSeq:(SInt64) value {
  resultSyncNotifyMsg.hasLastSeq = YES;
  resultSyncNotifyMsg.lastSeq = value;
  return self;
}
- (sync_notify_msgBuilder*) clearLastSeq {
  resultSyncNotifyMsg.hasLastSeq = NO;
  resultSyncNotifyMsg.lastSeq = 0L;
  return self;
}
- (NSMutableArray *)extParam {
  return resultSyncNotifyMsg.extParamArray;
}
- (ext_key_info*)extParamAtIndex:(NSUInteger)index {
  return [resultSyncNotifyMsg extParamAtIndex:index];
}
- (sync_notify_msgBuilder *)addExtParam:(ext_key_info*)value {
  if (resultSyncNotifyMsg.extParamArray == nil) {
    resultSyncNotifyMsg.extParamArray = [[NSMutableArray alloc]init];
  }
  [resultSyncNotifyMsg.extParamArray addObject:value];
  return self;
}
- (sync_notify_msgBuilder *)setExtParamArray:(NSArray *)array {
  resultSyncNotifyMsg.extParamArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (sync_notify_msgBuilder *)clearExtParam {
  resultSyncNotifyMsg.extParamArray = nil;
  return self;
}
@end

@interface push_notify_msg ()
@property eum_nofity_type notifyType;
@property SInt64 msgSeq;
@property (strong) NSData* subMsg;
@end

@implementation push_notify_msg

- (BOOL) hasNotifyType {
  return !!hasNotifyType_;
}
- (void) setHasNotifyType:(BOOL) _value_ {
  hasNotifyType_ = !!_value_;
}
@synthesize notifyType;
- (BOOL) hasMsgSeq {
  return !!hasMsgSeq_;
}
- (void) setHasMsgSeq:(BOOL) _value_ {
  hasMsgSeq_ = !!_value_;
}
@synthesize msgSeq;
- (BOOL) hasSubMsg {
  return !!hasSubMsg_;
}
- (void) setHasSubMsg:(BOOL) _value_ {
  hasSubMsg_ = !!_value_;
}
@synthesize subMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.notifyType = eum_nofity_typeTgStockInPoolNotify;
    self.msgSeq = 0L;
    self.subMsg = [NSData data];
  }
  return self;
}
static push_notify_msg* defaultpush_notify_msgInstance = nil;
+ (void) initialize {
  if (self == [push_notify_msg class]) {
    defaultpush_notify_msgInstance = [[push_notify_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultpush_notify_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultpush_notify_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNotifyType) {
    return NO;
  }
  if (!self.hasMsgSeq) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNotifyType) {
    [output writeEnum:1 value:self.notifyType];
  }
  if (self.hasMsgSeq) {
    [output writeInt64:2 value:self.msgSeq];
  }
  if (self.hasSubMsg) {
    [output writeData:3 value:self.subMsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNotifyType) {
    size_ += computeEnumSize(1, self.notifyType);
  }
  if (self.hasMsgSeq) {
    size_ += computeInt64Size(2, self.msgSeq);
  }
  if (self.hasSubMsg) {
    size_ += computeDataSize(3, self.subMsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (push_notify_msg*) parseFromData:(NSData*) data {
  return (push_notify_msg*)[[[push_notify_msg builder] mergeFromData:data] build];
}
+ (push_notify_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (push_notify_msg*)[[[push_notify_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (push_notify_msg*) parseFromInputStream:(NSInputStream*) input {
  return (push_notify_msg*)[[[push_notify_msg builder] mergeFromInputStream:input] build];
}
+ (push_notify_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (push_notify_msg*)[[[push_notify_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (push_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (push_notify_msg*)[[[push_notify_msg builder] mergeFromCodedInputStream:input] build];
}
+ (push_notify_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (push_notify_msg*)[[[push_notify_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (push_notify_msgBuilder*) builder {
  return [[push_notify_msgBuilder alloc] init];
}
+ (push_notify_msgBuilder*) builderWithPrototype:(push_notify_msg*) prototype {
  return [[push_notify_msg builder] mergeFrom:prototype];
}
- (push_notify_msgBuilder*) builder {
  return [push_notify_msg builder];
}
- (push_notify_msgBuilder*) toBuilder {
  return [push_notify_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNotifyType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"notifyType", NSStringFromeum_nofity_type(self.notifyType)];
  }
  if (self.hasMsgSeq) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgSeq", [NSNumber numberWithLongLong:self.msgSeq]];
  }
  if (self.hasSubMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subMsg", self.subMsg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasNotifyType) {
    [dictionary setObject: @(self.notifyType) forKey: @"notifyType"];
  }
  if (self.hasMsgSeq) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgSeq] forKey: @"msgSeq"];
  }
  if (self.hasSubMsg) {
    [dictionary setObject: self.subMsg forKey: @"subMsg"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[push_notify_msg class]]) {
    return NO;
  }
  push_notify_msg *otherMessage = other;
  return
      self.hasNotifyType == otherMessage.hasNotifyType &&
      (!self.hasNotifyType || self.notifyType == otherMessage.notifyType) &&
      self.hasMsgSeq == otherMessage.hasMsgSeq &&
      (!self.hasMsgSeq || self.msgSeq == otherMessage.msgSeq) &&
      self.hasSubMsg == otherMessage.hasSubMsg &&
      (!self.hasSubMsg || [self.subMsg isEqual:otherMessage.subMsg]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNotifyType) {
    hashCode = hashCode * 31 + self.notifyType;
  }
  if (self.hasMsgSeq) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgSeq] hash];
  }
  if (self.hasSubMsg) {
    hashCode = hashCode * 31 + [self.subMsg hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface push_notify_msgBuilder()
@property (strong) push_notify_msg* resultPushNotifyMsg;
@end

@implementation push_notify_msgBuilder
@synthesize resultPushNotifyMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPushNotifyMsg = [[push_notify_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPushNotifyMsg;
}
- (push_notify_msgBuilder*) clear {
  self.resultPushNotifyMsg = [[push_notify_msg alloc] init];
  return self;
}
- (push_notify_msgBuilder*) clone {
  return [push_notify_msg builderWithPrototype:resultPushNotifyMsg];
}
- (push_notify_msg*) defaultInstance {
  return [push_notify_msg defaultInstance];
}
- (push_notify_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (push_notify_msg*) buildPartial {
  push_notify_msg* returnMe = resultPushNotifyMsg;
  self.resultPushNotifyMsg = nil;
  return returnMe;
}
- (push_notify_msgBuilder*) mergeFrom:(push_notify_msg*) other {
  if (other == [push_notify_msg defaultInstance]) {
    return self;
  }
  if (other.hasNotifyType) {
    [self setNotifyType:other.notifyType];
  }
  if (other.hasMsgSeq) {
    [self setMsgSeq:other.msgSeq];
  }
  if (other.hasSubMsg) {
    [self setSubMsg:other.subMsg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (push_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (push_notify_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        eum_nofity_type value = (eum_nofity_type)[input readEnum];
        if (eum_nofity_typeIsValidValue(value)) {
          [self setNotifyType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setMsgSeq:[input readInt64]];
        break;
      }
      case 26: {
        [self setSubMsg:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasNotifyType {
  return resultPushNotifyMsg.hasNotifyType;
}
- (eum_nofity_type) notifyType {
  return resultPushNotifyMsg.notifyType;
}
- (push_notify_msgBuilder*) setNotifyType:(eum_nofity_type) value {
  resultPushNotifyMsg.hasNotifyType = YES;
  resultPushNotifyMsg.notifyType = value;
  return self;
}
- (push_notify_msgBuilder*) clearNotifyType {
  resultPushNotifyMsg.hasNotifyType = NO;
  resultPushNotifyMsg.notifyType = eum_nofity_typeTgStockInPoolNotify;
  return self;
}
- (BOOL) hasMsgSeq {
  return resultPushNotifyMsg.hasMsgSeq;
}
- (SInt64) msgSeq {
  return resultPushNotifyMsg.msgSeq;
}
- (push_notify_msgBuilder*) setMsgSeq:(SInt64) value {
  resultPushNotifyMsg.hasMsgSeq = YES;
  resultPushNotifyMsg.msgSeq = value;
  return self;
}
- (push_notify_msgBuilder*) clearMsgSeq {
  resultPushNotifyMsg.hasMsgSeq = NO;
  resultPushNotifyMsg.msgSeq = 0L;
  return self;
}
- (BOOL) hasSubMsg {
  return resultPushNotifyMsg.hasSubMsg;
}
- (NSData*) subMsg {
  return resultPushNotifyMsg.subMsg;
}
- (push_notify_msgBuilder*) setSubMsg:(NSData*) value {
  resultPushNotifyMsg.hasSubMsg = YES;
  resultPushNotifyMsg.subMsg = value;
  return self;
}
- (push_notify_msgBuilder*) clearSubMsg {
  resultPushNotifyMsg.hasSubMsg = NO;
  resultPushNotifyMsg.subMsg = [NSData data];
  return self;
}
@end

@interface notify_ack_msg ()
@property (strong) NSString* topic;
@property SInt64 msgSeq;
@property SInt64 uid;
@end

@implementation notify_ack_msg

- (BOOL) hasTopic {
  return !!hasTopic_;
}
- (void) setHasTopic:(BOOL) _value_ {
  hasTopic_ = !!_value_;
}
@synthesize topic;
- (BOOL) hasMsgSeq {
  return !!hasMsgSeq_;
}
- (void) setHasMsgSeq:(BOOL) _value_ {
  hasMsgSeq_ = !!_value_;
}
@synthesize msgSeq;
- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (instancetype) init {
  if ((self = [super init])) {
    self.topic = @"";
    self.msgSeq = 0L;
    self.uid = 0L;
  }
  return self;
}
static notify_ack_msg* defaultnotify_ack_msgInstance = nil;
+ (void) initialize {
  if (self == [notify_ack_msg class]) {
    defaultnotify_ack_msgInstance = [[notify_ack_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultnotify_ack_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultnotify_ack_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTopic) {
    return NO;
  }
  if (!self.hasMsgSeq) {
    return NO;
  }
  if (!self.hasUid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopic) {
    [output writeString:1 value:self.topic];
  }
  if (self.hasMsgSeq) {
    [output writeInt64:2 value:self.msgSeq];
  }
  if (self.hasUid) {
    [output writeInt64:3 value:self.uid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTopic) {
    size_ += computeStringSize(1, self.topic);
  }
  if (self.hasMsgSeq) {
    size_ += computeInt64Size(2, self.msgSeq);
  }
  if (self.hasUid) {
    size_ += computeInt64Size(3, self.uid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (notify_ack_msg*) parseFromData:(NSData*) data {
  return (notify_ack_msg*)[[[notify_ack_msg builder] mergeFromData:data] build];
}
+ (notify_ack_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (notify_ack_msg*)[[[notify_ack_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (notify_ack_msg*) parseFromInputStream:(NSInputStream*) input {
  return (notify_ack_msg*)[[[notify_ack_msg builder] mergeFromInputStream:input] build];
}
+ (notify_ack_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (notify_ack_msg*)[[[notify_ack_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (notify_ack_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (notify_ack_msg*)[[[notify_ack_msg builder] mergeFromCodedInputStream:input] build];
}
+ (notify_ack_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (notify_ack_msg*)[[[notify_ack_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (notify_ack_msgBuilder*) builder {
  return [[notify_ack_msgBuilder alloc] init];
}
+ (notify_ack_msgBuilder*) builderWithPrototype:(notify_ack_msg*) prototype {
  return [[notify_ack_msg builder] mergeFrom:prototype];
}
- (notify_ack_msgBuilder*) builder {
  return [notify_ack_msg builder];
}
- (notify_ack_msgBuilder*) toBuilder {
  return [notify_ack_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topic", self.topic];
  }
  if (self.hasMsgSeq) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgSeq", [NSNumber numberWithLongLong:self.msgSeq]];
  }
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTopic) {
    [dictionary setObject: self.topic forKey: @"topic"];
  }
  if (self.hasMsgSeq) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgSeq] forKey: @"msgSeq"];
  }
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[notify_ack_msg class]]) {
    return NO;
  }
  notify_ack_msg *otherMessage = other;
  return
      self.hasTopic == otherMessage.hasTopic &&
      (!self.hasTopic || [self.topic isEqual:otherMessage.topic]) &&
      self.hasMsgSeq == otherMessage.hasMsgSeq &&
      (!self.hasMsgSeq || self.msgSeq == otherMessage.msgSeq) &&
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTopic) {
    hashCode = hashCode * 31 + [self.topic hash];
  }
  if (self.hasMsgSeq) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgSeq] hash];
  }
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface notify_ack_msgBuilder()
@property (strong) notify_ack_msg* resultNotifyAckMsg;
@end

@implementation notify_ack_msgBuilder
@synthesize resultNotifyAckMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultNotifyAckMsg = [[notify_ack_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultNotifyAckMsg;
}
- (notify_ack_msgBuilder*) clear {
  self.resultNotifyAckMsg = [[notify_ack_msg alloc] init];
  return self;
}
- (notify_ack_msgBuilder*) clone {
  return [notify_ack_msg builderWithPrototype:resultNotifyAckMsg];
}
- (notify_ack_msg*) defaultInstance {
  return [notify_ack_msg defaultInstance];
}
- (notify_ack_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (notify_ack_msg*) buildPartial {
  notify_ack_msg* returnMe = resultNotifyAckMsg;
  self.resultNotifyAckMsg = nil;
  return returnMe;
}
- (notify_ack_msgBuilder*) mergeFrom:(notify_ack_msg*) other {
  if (other == [notify_ack_msg defaultInstance]) {
    return self;
  }
  if (other.hasTopic) {
    [self setTopic:other.topic];
  }
  if (other.hasMsgSeq) {
    [self setMsgSeq:other.msgSeq];
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (notify_ack_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (notify_ack_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTopic:[input readString]];
        break;
      }
      case 16: {
        [self setMsgSeq:[input readInt64]];
        break;
      }
      case 24: {
        [self setUid:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasTopic {
  return resultNotifyAckMsg.hasTopic;
}
- (NSString*) topic {
  return resultNotifyAckMsg.topic;
}
- (notify_ack_msgBuilder*) setTopic:(NSString*) value {
  resultNotifyAckMsg.hasTopic = YES;
  resultNotifyAckMsg.topic = value;
  return self;
}
- (notify_ack_msgBuilder*) clearTopic {
  resultNotifyAckMsg.hasTopic = NO;
  resultNotifyAckMsg.topic = @"";
  return self;
}
- (BOOL) hasMsgSeq {
  return resultNotifyAckMsg.hasMsgSeq;
}
- (SInt64) msgSeq {
  return resultNotifyAckMsg.msgSeq;
}
- (notify_ack_msgBuilder*) setMsgSeq:(SInt64) value {
  resultNotifyAckMsg.hasMsgSeq = YES;
  resultNotifyAckMsg.msgSeq = value;
  return self;
}
- (notify_ack_msgBuilder*) clearMsgSeq {
  resultNotifyAckMsg.hasMsgSeq = NO;
  resultNotifyAckMsg.msgSeq = 0L;
  return self;
}
- (BOOL) hasUid {
  return resultNotifyAckMsg.hasUid;
}
- (SInt64) uid {
  return resultNotifyAckMsg.uid;
}
- (notify_ack_msgBuilder*) setUid:(SInt64) value {
  resultNotifyAckMsg.hasUid = YES;
  resultNotifyAckMsg.uid = value;
  return self;
}
- (notify_ack_msgBuilder*) clearUid {
  resultNotifyAckMsg.hasUid = NO;
  resultNotifyAckMsg.uid = 0L;
  return self;
}
@end

@interface common_update_notice_msg ()
@property (strong) NSMutableArray * extParamArray;
@end

@implementation common_update_notice_msg

@synthesize extParamArray;
@dynamic extParam;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static common_update_notice_msg* defaultcommon_update_notice_msgInstance = nil;
+ (void) initialize {
  if (self == [common_update_notice_msg class]) {
    defaultcommon_update_notice_msgInstance = [[common_update_notice_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultcommon_update_notice_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultcommon_update_notice_msgInstance;
}
- (NSArray *)extParam {
  return extParamArray;
}
- (ext_key_info*)extParamAtIndex:(NSUInteger)index {
  return [extParamArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitextParam = YES;
   [self.extParam enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitextParam = NO;
      *stop = YES;
    }
  }];
  if (!isInitextParam) return isInitextParam;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.extParamArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.extParamArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (common_update_notice_msg*) parseFromData:(NSData*) data {
  return (common_update_notice_msg*)[[[common_update_notice_msg builder] mergeFromData:data] build];
}
+ (common_update_notice_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (common_update_notice_msg*)[[[common_update_notice_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (common_update_notice_msg*) parseFromInputStream:(NSInputStream*) input {
  return (common_update_notice_msg*)[[[common_update_notice_msg builder] mergeFromInputStream:input] build];
}
+ (common_update_notice_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (common_update_notice_msg*)[[[common_update_notice_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (common_update_notice_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (common_update_notice_msg*)[[[common_update_notice_msg builder] mergeFromCodedInputStream:input] build];
}
+ (common_update_notice_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (common_update_notice_msg*)[[[common_update_notice_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (common_update_notice_msgBuilder*) builder {
  return [[common_update_notice_msgBuilder alloc] init];
}
+ (common_update_notice_msgBuilder*) builderWithPrototype:(common_update_notice_msg*) prototype {
  return [[common_update_notice_msg builder] mergeFrom:prototype];
}
- (common_update_notice_msgBuilder*) builder {
  return [common_update_notice_msg builder];
}
- (common_update_notice_msgBuilder*) toBuilder {
  return [common_update_notice_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.extParamArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"extParam"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (ext_key_info* element in self.extParamArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"extParam"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[common_update_notice_msg class]]) {
    return NO;
  }
  common_update_notice_msg *otherMessage = other;
  return
      [self.extParamArray isEqualToArray:otherMessage.extParamArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.extParamArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface common_update_notice_msgBuilder()
@property (strong) common_update_notice_msg* resultCommonUpdateNoticeMsg;
@end

@implementation common_update_notice_msgBuilder
@synthesize resultCommonUpdateNoticeMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCommonUpdateNoticeMsg = [[common_update_notice_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCommonUpdateNoticeMsg;
}
- (common_update_notice_msgBuilder*) clear {
  self.resultCommonUpdateNoticeMsg = [[common_update_notice_msg alloc] init];
  return self;
}
- (common_update_notice_msgBuilder*) clone {
  return [common_update_notice_msg builderWithPrototype:resultCommonUpdateNoticeMsg];
}
- (common_update_notice_msg*) defaultInstance {
  return [common_update_notice_msg defaultInstance];
}
- (common_update_notice_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (common_update_notice_msg*) buildPartial {
  common_update_notice_msg* returnMe = resultCommonUpdateNoticeMsg;
  self.resultCommonUpdateNoticeMsg = nil;
  return returnMe;
}
- (common_update_notice_msgBuilder*) mergeFrom:(common_update_notice_msg*) other {
  if (other == [common_update_notice_msg defaultInstance]) {
    return self;
  }
  if (other.extParamArray.count > 0) {
    if (resultCommonUpdateNoticeMsg.extParamArray == nil) {
      resultCommonUpdateNoticeMsg.extParamArray = [[NSMutableArray alloc] initWithArray:other.extParamArray];
    } else {
      [resultCommonUpdateNoticeMsg.extParamArray addObjectsFromArray:other.extParamArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (common_update_notice_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (common_update_notice_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ext_key_infoBuilder* subBuilder = [ext_key_info builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExtParam:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)extParam {
  return resultCommonUpdateNoticeMsg.extParamArray;
}
- (ext_key_info*)extParamAtIndex:(NSUInteger)index {
  return [resultCommonUpdateNoticeMsg extParamAtIndex:index];
}
- (common_update_notice_msgBuilder *)addExtParam:(ext_key_info*)value {
  if (resultCommonUpdateNoticeMsg.extParamArray == nil) {
    resultCommonUpdateNoticeMsg.extParamArray = [[NSMutableArray alloc]init];
  }
  [resultCommonUpdateNoticeMsg.extParamArray addObject:value];
  return self;
}
- (common_update_notice_msgBuilder *)setExtParamArray:(NSArray *)array {
  resultCommonUpdateNoticeMsg.extParamArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (common_update_notice_msgBuilder *)clearExtParam {
  resultCommonUpdateNoticeMsg.extParamArray = nil;
  return self;
}
@end

@interface combo_private_msg ()
@property SInt64 ackSeq;
@property (strong) NSMutableArray * msgsArray;
@end

@implementation combo_private_msg

- (BOOL) hasAckSeq {
  return !!hasAckSeq_;
}
- (void) setHasAckSeq:(BOOL) _value_ {
  hasAckSeq_ = !!_value_;
}
@synthesize ackSeq;
@synthesize msgsArray;
@dynamic msgs;
- (instancetype) init {
  if ((self = [super init])) {
    self.ackSeq = 0L;
  }
  return self;
}
static combo_private_msg* defaultcombo_private_msgInstance = nil;
+ (void) initialize {
  if (self == [combo_private_msg class]) {
    defaultcombo_private_msgInstance = [[combo_private_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultcombo_private_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultcombo_private_msgInstance;
}
- (NSArray *)msgs {
  return msgsArray;
}
- (common_update_notice_msg*)msgsAtIndex:(NSUInteger)index {
  return [msgsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasAckSeq) {
    return NO;
  }
  __block BOOL isInitmsgs = YES;
   [self.msgs enumerateObjectsUsingBlock:^(common_update_notice_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitmsgs = NO;
      *stop = YES;
    }
  }];
  if (!isInitmsgs) return isInitmsgs;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAckSeq) {
    [output writeInt64:1 value:self.ackSeq];
  }
  [self.msgsArray enumerateObjectsUsingBlock:^(common_update_notice_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAckSeq) {
    size_ += computeInt64Size(1, self.ackSeq);
  }
  [self.msgsArray enumerateObjectsUsingBlock:^(common_update_notice_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (combo_private_msg*) parseFromData:(NSData*) data {
  return (combo_private_msg*)[[[combo_private_msg builder] mergeFromData:data] build];
}
+ (combo_private_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (combo_private_msg*)[[[combo_private_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (combo_private_msg*) parseFromInputStream:(NSInputStream*) input {
  return (combo_private_msg*)[[[combo_private_msg builder] mergeFromInputStream:input] build];
}
+ (combo_private_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (combo_private_msg*)[[[combo_private_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (combo_private_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (combo_private_msg*)[[[combo_private_msg builder] mergeFromCodedInputStream:input] build];
}
+ (combo_private_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (combo_private_msg*)[[[combo_private_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (combo_private_msgBuilder*) builder {
  return [[combo_private_msgBuilder alloc] init];
}
+ (combo_private_msgBuilder*) builderWithPrototype:(combo_private_msg*) prototype {
  return [[combo_private_msg builder] mergeFrom:prototype];
}
- (combo_private_msgBuilder*) builder {
  return [combo_private_msg builder];
}
- (combo_private_msgBuilder*) toBuilder {
  return [combo_private_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAckSeq) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ackSeq", [NSNumber numberWithLongLong:self.ackSeq]];
  }
  [self.msgsArray enumerateObjectsUsingBlock:^(common_update_notice_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAckSeq) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.ackSeq] forKey: @"ackSeq"];
  }
  for (common_update_notice_msg* element in self.msgsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"msgs"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[combo_private_msg class]]) {
    return NO;
  }
  combo_private_msg *otherMessage = other;
  return
      self.hasAckSeq == otherMessage.hasAckSeq &&
      (!self.hasAckSeq || self.ackSeq == otherMessage.ackSeq) &&
      [self.msgsArray isEqualToArray:otherMessage.msgsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAckSeq) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.ackSeq] hash];
  }
  [self.msgsArray enumerateObjectsUsingBlock:^(common_update_notice_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface combo_private_msgBuilder()
@property (strong) combo_private_msg* resultComboPrivateMsg;
@end

@implementation combo_private_msgBuilder
@synthesize resultComboPrivateMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultComboPrivateMsg = [[combo_private_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultComboPrivateMsg;
}
- (combo_private_msgBuilder*) clear {
  self.resultComboPrivateMsg = [[combo_private_msg alloc] init];
  return self;
}
- (combo_private_msgBuilder*) clone {
  return [combo_private_msg builderWithPrototype:resultComboPrivateMsg];
}
- (combo_private_msg*) defaultInstance {
  return [combo_private_msg defaultInstance];
}
- (combo_private_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (combo_private_msg*) buildPartial {
  combo_private_msg* returnMe = resultComboPrivateMsg;
  self.resultComboPrivateMsg = nil;
  return returnMe;
}
- (combo_private_msgBuilder*) mergeFrom:(combo_private_msg*) other {
  if (other == [combo_private_msg defaultInstance]) {
    return self;
  }
  if (other.hasAckSeq) {
    [self setAckSeq:other.ackSeq];
  }
  if (other.msgsArray.count > 0) {
    if (resultComboPrivateMsg.msgsArray == nil) {
      resultComboPrivateMsg.msgsArray = [[NSMutableArray alloc] initWithArray:other.msgsArray];
    } else {
      [resultComboPrivateMsg.msgsArray addObjectsFromArray:other.msgsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (combo_private_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (combo_private_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAckSeq:[input readInt64]];
        break;
      }
      case 18: {
        common_update_notice_msgBuilder* subBuilder = [common_update_notice_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsgs:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasAckSeq {
  return resultComboPrivateMsg.hasAckSeq;
}
- (SInt64) ackSeq {
  return resultComboPrivateMsg.ackSeq;
}
- (combo_private_msgBuilder*) setAckSeq:(SInt64) value {
  resultComboPrivateMsg.hasAckSeq = YES;
  resultComboPrivateMsg.ackSeq = value;
  return self;
}
- (combo_private_msgBuilder*) clearAckSeq {
  resultComboPrivateMsg.hasAckSeq = NO;
  resultComboPrivateMsg.ackSeq = 0L;
  return self;
}
- (NSMutableArray *)msgs {
  return resultComboPrivateMsg.msgsArray;
}
- (common_update_notice_msg*)msgsAtIndex:(NSUInteger)index {
  return [resultComboPrivateMsg msgsAtIndex:index];
}
- (combo_private_msgBuilder *)addMsgs:(common_update_notice_msg*)value {
  if (resultComboPrivateMsg.msgsArray == nil) {
    resultComboPrivateMsg.msgsArray = [[NSMutableArray alloc]init];
  }
  [resultComboPrivateMsg.msgsArray addObject:value];
  return self;
}
- (combo_private_msgBuilder *)setMsgsArray:(NSArray *)array {
  resultComboPrivateMsg.msgsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (combo_private_msgBuilder *)clearMsgs {
  resultComboPrivateMsg.msgsArray = nil;
  return self;
}
@end

@interface rpc_msg_root ()
@property eum_rpc_service service;
@property eum_method_type method;
@property (strong) NSData* body;
@property UInt32 seq;
@property UInt32 sid;
@property UInt32 cid;
@property (strong) NSString* pubSub;
@property BOOL needAuthCtx;
@property (strong) NSMutableArray * extArray;
@end

@implementation rpc_msg_root

- (BOOL) hasService {
  return !!hasService_;
}
- (void) setHasService:(BOOL) _value_ {
  hasService_ = !!_value_;
}
@synthesize service;
- (BOOL) hasMethod {
  return !!hasMethod_;
}
- (void) setHasMethod:(BOOL) _value_ {
  hasMethod_ = !!_value_;
}
@synthesize method;
- (BOOL) hasBody {
  return !!hasBody_;
}
- (void) setHasBody:(BOOL) _value_ {
  hasBody_ = !!_value_;
}
@synthesize body;
- (BOOL) hasSeq {
  return !!hasSeq_;
}
- (void) setHasSeq:(BOOL) _value_ {
  hasSeq_ = !!_value_;
}
@synthesize seq;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) _value_ {
  hasSid_ = !!_value_;
}
@synthesize sid;
- (BOOL) hasCid {
  return !!hasCid_;
}
- (void) setHasCid:(BOOL) _value_ {
  hasCid_ = !!_value_;
}
@synthesize cid;
- (BOOL) hasPubSub {
  return !!hasPubSub_;
}
- (void) setHasPubSub:(BOOL) _value_ {
  hasPubSub_ = !!_value_;
}
@synthesize pubSub;
- (BOOL) hasNeedAuthCtx {
  return !!hasNeedAuthCtx_;
}
- (void) setHasNeedAuthCtx:(BOOL) _value_ {
  hasNeedAuthCtx_ = !!_value_;
}
- (BOOL) needAuthCtx {
  return !!needAuthCtx_;
}
- (void) setNeedAuthCtx:(BOOL) _value_ {
  needAuthCtx_ = !!_value_;
}
@synthesize extArray;
@dynamic ext;
- (instancetype) init {
  if ((self = [super init])) {
    self.service = eum_rpc_serviceCommonService;
    self.method = eum_method_typeCommonErrorRep;
    self.body = [NSData data];
    self.seq = 0;
    self.sid = 0;
    self.cid = 0;
    self.pubSub = @"";
    self.needAuthCtx = NO;
  }
  return self;
}
static rpc_msg_root* defaultrpc_msg_rootInstance = nil;
+ (void) initialize {
  if (self == [rpc_msg_root class]) {
    defaultrpc_msg_rootInstance = [[rpc_msg_root alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultrpc_msg_rootInstance;
}
- (instancetype) defaultInstance {
  return defaultrpc_msg_rootInstance;
}
- (NSArray *)ext {
  return extArray;
}
- (ext_key_info*)extAtIndex:(NSUInteger)index {
  return [extArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasService) {
    return NO;
  }
  if (!self.hasMethod) {
    return NO;
  }
  __block BOOL isInitext = YES;
   [self.ext enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitext = NO;
      *stop = YES;
    }
  }];
  if (!isInitext) return isInitext;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasService) {
    [output writeEnum:1 value:self.service];
  }
  if (self.hasMethod) {
    [output writeEnum:2 value:self.method];
  }
  if (self.hasBody) {
    [output writeData:3 value:self.body];
  }
  if (self.hasSeq) {
    [output writeUInt32:4 value:self.seq];
  }
  if (self.hasSid) {
    [output writeUInt32:5 value:self.sid];
  }
  if (self.hasCid) {
    [output writeUInt32:6 value:self.cid];
  }
  if (self.hasPubSub) {
    [output writeString:7 value:self.pubSub];
  }
  if (self.hasNeedAuthCtx) {
    [output writeBool:8 value:self.needAuthCtx];
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:9 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasService) {
    size_ += computeEnumSize(1, self.service);
  }
  if (self.hasMethod) {
    size_ += computeEnumSize(2, self.method);
  }
  if (self.hasBody) {
    size_ += computeDataSize(3, self.body);
  }
  if (self.hasSeq) {
    size_ += computeUInt32Size(4, self.seq);
  }
  if (self.hasSid) {
    size_ += computeUInt32Size(5, self.sid);
  }
  if (self.hasCid) {
    size_ += computeUInt32Size(6, self.cid);
  }
  if (self.hasPubSub) {
    size_ += computeStringSize(7, self.pubSub);
  }
  if (self.hasNeedAuthCtx) {
    size_ += computeBoolSize(8, self.needAuthCtx);
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(9, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (rpc_msg_root*) parseFromData:(NSData*) data {
  return (rpc_msg_root*)[[[rpc_msg_root builder] mergeFromData:data] build];
}
+ (rpc_msg_root*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (rpc_msg_root*)[[[rpc_msg_root builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (rpc_msg_root*) parseFromInputStream:(NSInputStream*) input {
  return (rpc_msg_root*)[[[rpc_msg_root builder] mergeFromInputStream:input] build];
}
+ (rpc_msg_root*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (rpc_msg_root*)[[[rpc_msg_root builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (rpc_msg_root*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (rpc_msg_root*)[[[rpc_msg_root builder] mergeFromCodedInputStream:input] build];
}
+ (rpc_msg_root*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (rpc_msg_root*)[[[rpc_msg_root builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (rpc_msg_rootBuilder*) builder {
  return [[rpc_msg_rootBuilder alloc] init];
}
+ (rpc_msg_rootBuilder*) builderWithPrototype:(rpc_msg_root*) prototype {
  return [[rpc_msg_root builder] mergeFrom:prototype];
}
- (rpc_msg_rootBuilder*) builder {
  return [rpc_msg_root builder];
}
- (rpc_msg_rootBuilder*) toBuilder {
  return [rpc_msg_root builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasService) {
    [output appendFormat:@"%@%@: %@\n", indent, @"service", NSStringFromeum_rpc_service(self.service)];
  }
  if (self.hasMethod) {
    [output appendFormat:@"%@%@: %@\n", indent, @"method", NSStringFromeum_method_type(self.method)];
  }
  if (self.hasBody) {
    [output appendFormat:@"%@%@: %@\n", indent, @"body", self.body];
  }
  if (self.hasSeq) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seq", [NSNumber numberWithInteger:self.seq]];
  }
  if (self.hasSid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sid", [NSNumber numberWithInteger:self.sid]];
  }
  if (self.hasCid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cid", [NSNumber numberWithInteger:self.cid]];
  }
  if (self.hasPubSub) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pubSub", self.pubSub];
  }
  if (self.hasNeedAuthCtx) {
    [output appendFormat:@"%@%@: %@\n", indent, @"needAuthCtx", [NSNumber numberWithBool:self.needAuthCtx]];
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"ext"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasService) {
    [dictionary setObject: @(self.service) forKey: @"service"];
  }
  if (self.hasMethod) {
    [dictionary setObject: @(self.method) forKey: @"method"];
  }
  if (self.hasBody) {
    [dictionary setObject: self.body forKey: @"body"];
  }
  if (self.hasSeq) {
    [dictionary setObject: [NSNumber numberWithInteger:self.seq] forKey: @"seq"];
  }
  if (self.hasSid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.sid] forKey: @"sid"];
  }
  if (self.hasCid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cid] forKey: @"cid"];
  }
  if (self.hasPubSub) {
    [dictionary setObject: self.pubSub forKey: @"pubSub"];
  }
  if (self.hasNeedAuthCtx) {
    [dictionary setObject: [NSNumber numberWithBool:self.needAuthCtx] forKey: @"needAuthCtx"];
  }
  for (ext_key_info* element in self.extArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"ext"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[rpc_msg_root class]]) {
    return NO;
  }
  rpc_msg_root *otherMessage = other;
  return
      self.hasService == otherMessage.hasService &&
      (!self.hasService || self.service == otherMessage.service) &&
      self.hasMethod == otherMessage.hasMethod &&
      (!self.hasMethod || self.method == otherMessage.method) &&
      self.hasBody == otherMessage.hasBody &&
      (!self.hasBody || [self.body isEqual:otherMessage.body]) &&
      self.hasSeq == otherMessage.hasSeq &&
      (!self.hasSeq || self.seq == otherMessage.seq) &&
      self.hasSid == otherMessage.hasSid &&
      (!self.hasSid || self.sid == otherMessage.sid) &&
      self.hasCid == otherMessage.hasCid &&
      (!self.hasCid || self.cid == otherMessage.cid) &&
      self.hasPubSub == otherMessage.hasPubSub &&
      (!self.hasPubSub || [self.pubSub isEqual:otherMessage.pubSub]) &&
      self.hasNeedAuthCtx == otherMessage.hasNeedAuthCtx &&
      (!self.hasNeedAuthCtx || self.needAuthCtx == otherMessage.needAuthCtx) &&
      [self.extArray isEqualToArray:otherMessage.extArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasService) {
    hashCode = hashCode * 31 + self.service;
  }
  if (self.hasMethod) {
    hashCode = hashCode * 31 + self.method;
  }
  if (self.hasBody) {
    hashCode = hashCode * 31 + [self.body hash];
  }
  if (self.hasSeq) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.seq] hash];
  }
  if (self.hasSid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sid] hash];
  }
  if (self.hasCid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cid] hash];
  }
  if (self.hasPubSub) {
    hashCode = hashCode * 31 + [self.pubSub hash];
  }
  if (self.hasNeedAuthCtx) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.needAuthCtx] hash];
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface rpc_msg_rootBuilder()
@property (strong) rpc_msg_root* resultRpcMsgRoot;
@end

@implementation rpc_msg_rootBuilder
@synthesize resultRpcMsgRoot;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRpcMsgRoot = [[rpc_msg_root alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRpcMsgRoot;
}
- (rpc_msg_rootBuilder*) clear {
  self.resultRpcMsgRoot = [[rpc_msg_root alloc] init];
  return self;
}
- (rpc_msg_rootBuilder*) clone {
  return [rpc_msg_root builderWithPrototype:resultRpcMsgRoot];
}
- (rpc_msg_root*) defaultInstance {
  return [rpc_msg_root defaultInstance];
}
- (rpc_msg_root*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (rpc_msg_root*) buildPartial {
  rpc_msg_root* returnMe = resultRpcMsgRoot;
  self.resultRpcMsgRoot = nil;
  return returnMe;
}
- (rpc_msg_rootBuilder*) mergeFrom:(rpc_msg_root*) other {
  if (other == [rpc_msg_root defaultInstance]) {
    return self;
  }
  if (other.hasService) {
    [self setService:other.service];
  }
  if (other.hasMethod) {
    [self setMethod:other.method];
  }
  if (other.hasBody) {
    [self setBody:other.body];
  }
  if (other.hasSeq) {
    [self setSeq:other.seq];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasCid) {
    [self setCid:other.cid];
  }
  if (other.hasPubSub) {
    [self setPubSub:other.pubSub];
  }
  if (other.hasNeedAuthCtx) {
    [self setNeedAuthCtx:other.needAuthCtx];
  }
  if (other.extArray.count > 0) {
    if (resultRpcMsgRoot.extArray == nil) {
      resultRpcMsgRoot.extArray = [[NSMutableArray alloc] initWithArray:other.extArray];
    } else {
      [resultRpcMsgRoot.extArray addObjectsFromArray:other.extArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (rpc_msg_rootBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (rpc_msg_rootBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        eum_rpc_service value = (eum_rpc_service)[input readEnum];
        if (eum_rpc_serviceIsValidValue(value)) {
          [self setService:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        eum_method_type value = (eum_method_type)[input readEnum];
        if (eum_method_typeIsValidValue(value)) {
          [self setMethod:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setBody:[input readData]];
        break;
      }
      case 32: {
        [self setSeq:[input readUInt32]];
        break;
      }
      case 40: {
        [self setSid:[input readUInt32]];
        break;
      }
      case 48: {
        [self setCid:[input readUInt32]];
        break;
      }
      case 58: {
        [self setPubSub:[input readString]];
        break;
      }
      case 64: {
        [self setNeedAuthCtx:[input readBool]];
        break;
      }
      case 74: {
        ext_key_infoBuilder* subBuilder = [ext_key_info builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExt:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasService {
  return resultRpcMsgRoot.hasService;
}
- (eum_rpc_service) service {
  return resultRpcMsgRoot.service;
}
- (rpc_msg_rootBuilder*) setService:(eum_rpc_service) value {
  resultRpcMsgRoot.hasService = YES;
  resultRpcMsgRoot.service = value;
  return self;
}
- (rpc_msg_rootBuilder*) clearService {
  resultRpcMsgRoot.hasService = NO;
  resultRpcMsgRoot.service = eum_rpc_serviceCommonService;
  return self;
}
- (BOOL) hasMethod {
  return resultRpcMsgRoot.hasMethod;
}
- (eum_method_type) method {
  return resultRpcMsgRoot.method;
}
- (rpc_msg_rootBuilder*) setMethod:(eum_method_type) value {
  resultRpcMsgRoot.hasMethod = YES;
  resultRpcMsgRoot.method = value;
  return self;
}
- (rpc_msg_rootBuilder*) clearMethod {
  resultRpcMsgRoot.hasMethod = NO;
  resultRpcMsgRoot.method = eum_method_typeCommonErrorRep;
  return self;
}
- (BOOL) hasBody {
  return resultRpcMsgRoot.hasBody;
}
- (NSData*) body {
  return resultRpcMsgRoot.body;
}
- (rpc_msg_rootBuilder*) setBody:(NSData*) value {
  resultRpcMsgRoot.hasBody = YES;
  resultRpcMsgRoot.body = value;
  return self;
}
- (rpc_msg_rootBuilder*) clearBody {
  resultRpcMsgRoot.hasBody = NO;
  resultRpcMsgRoot.body = [NSData data];
  return self;
}
- (BOOL) hasSeq {
  return resultRpcMsgRoot.hasSeq;
}
- (UInt32) seq {
  return resultRpcMsgRoot.seq;
}
- (rpc_msg_rootBuilder*) setSeq:(UInt32) value {
  resultRpcMsgRoot.hasSeq = YES;
  resultRpcMsgRoot.seq = value;
  return self;
}
- (rpc_msg_rootBuilder*) clearSeq {
  resultRpcMsgRoot.hasSeq = NO;
  resultRpcMsgRoot.seq = 0;
  return self;
}
- (BOOL) hasSid {
  return resultRpcMsgRoot.hasSid;
}
- (UInt32) sid {
  return resultRpcMsgRoot.sid;
}
- (rpc_msg_rootBuilder*) setSid:(UInt32) value {
  resultRpcMsgRoot.hasSid = YES;
  resultRpcMsgRoot.sid = value;
  return self;
}
- (rpc_msg_rootBuilder*) clearSid {
  resultRpcMsgRoot.hasSid = NO;
  resultRpcMsgRoot.sid = 0;
  return self;
}
- (BOOL) hasCid {
  return resultRpcMsgRoot.hasCid;
}
- (UInt32) cid {
  return resultRpcMsgRoot.cid;
}
- (rpc_msg_rootBuilder*) setCid:(UInt32) value {
  resultRpcMsgRoot.hasCid = YES;
  resultRpcMsgRoot.cid = value;
  return self;
}
- (rpc_msg_rootBuilder*) clearCid {
  resultRpcMsgRoot.hasCid = NO;
  resultRpcMsgRoot.cid = 0;
  return self;
}
- (BOOL) hasPubSub {
  return resultRpcMsgRoot.hasPubSub;
}
- (NSString*) pubSub {
  return resultRpcMsgRoot.pubSub;
}
- (rpc_msg_rootBuilder*) setPubSub:(NSString*) value {
  resultRpcMsgRoot.hasPubSub = YES;
  resultRpcMsgRoot.pubSub = value;
  return self;
}
- (rpc_msg_rootBuilder*) clearPubSub {
  resultRpcMsgRoot.hasPubSub = NO;
  resultRpcMsgRoot.pubSub = @"";
  return self;
}
- (BOOL) hasNeedAuthCtx {
  return resultRpcMsgRoot.hasNeedAuthCtx;
}
- (BOOL) needAuthCtx {
  return resultRpcMsgRoot.needAuthCtx;
}
- (rpc_msg_rootBuilder*) setNeedAuthCtx:(BOOL) value {
  resultRpcMsgRoot.hasNeedAuthCtx = YES;
  resultRpcMsgRoot.needAuthCtx = value;
  return self;
}
- (rpc_msg_rootBuilder*) clearNeedAuthCtx {
  resultRpcMsgRoot.hasNeedAuthCtx = NO;
  resultRpcMsgRoot.needAuthCtx = NO;
  return self;
}
- (NSMutableArray *)ext {
  return resultRpcMsgRoot.extArray;
}
- (ext_key_info*)extAtIndex:(NSUInteger)index {
  return [resultRpcMsgRoot extAtIndex:index];
}
- (rpc_msg_rootBuilder *)addExt:(ext_key_info*)value {
  if (resultRpcMsgRoot.extArray == nil) {
    resultRpcMsgRoot.extArray = [[NSMutableArray alloc]init];
  }
  [resultRpcMsgRoot.extArray addObject:value];
  return self;
}
- (rpc_msg_rootBuilder *)setExtArray:(NSArray *)array {
  resultRpcMsgRoot.extArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (rpc_msg_rootBuilder *)clearExt {
  resultRpcMsgRoot.extArray = nil;
  return self;
}
@end

@interface common_reply_error_msg ()
@property eum_method_type orgType;
@property (strong) NSString* error;
@end

@implementation common_reply_error_msg

- (BOOL) hasOrgType {
  return !!hasOrgType_;
}
- (void) setHasOrgType:(BOOL) _value_ {
  hasOrgType_ = !!_value_;
}
@synthesize orgType;
- (BOOL) hasError {
  return !!hasError_;
}
- (void) setHasError:(BOOL) _value_ {
  hasError_ = !!_value_;
}
@synthesize error;
- (instancetype) init {
  if ((self = [super init])) {
    self.orgType = eum_method_typeCommonErrorRep;
    self.error = @"";
  }
  return self;
}
static common_reply_error_msg* defaultcommon_reply_error_msgInstance = nil;
+ (void) initialize {
  if (self == [common_reply_error_msg class]) {
    defaultcommon_reply_error_msgInstance = [[common_reply_error_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultcommon_reply_error_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultcommon_reply_error_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasOrgType) {
    return NO;
  }
  if (!self.hasError) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOrgType) {
    [output writeEnum:1 value:self.orgType];
  }
  if (self.hasError) {
    [output writeString:2 value:self.error];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOrgType) {
    size_ += computeEnumSize(1, self.orgType);
  }
  if (self.hasError) {
    size_ += computeStringSize(2, self.error);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (common_reply_error_msg*) parseFromData:(NSData*) data {
  return (common_reply_error_msg*)[[[common_reply_error_msg builder] mergeFromData:data] build];
}
+ (common_reply_error_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (common_reply_error_msg*)[[[common_reply_error_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (common_reply_error_msg*) parseFromInputStream:(NSInputStream*) input {
  return (common_reply_error_msg*)[[[common_reply_error_msg builder] mergeFromInputStream:input] build];
}
+ (common_reply_error_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (common_reply_error_msg*)[[[common_reply_error_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (common_reply_error_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (common_reply_error_msg*)[[[common_reply_error_msg builder] mergeFromCodedInputStream:input] build];
}
+ (common_reply_error_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (common_reply_error_msg*)[[[common_reply_error_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (common_reply_error_msgBuilder*) builder {
  return [[common_reply_error_msgBuilder alloc] init];
}
+ (common_reply_error_msgBuilder*) builderWithPrototype:(common_reply_error_msg*) prototype {
  return [[common_reply_error_msg builder] mergeFrom:prototype];
}
- (common_reply_error_msgBuilder*) builder {
  return [common_reply_error_msg builder];
}
- (common_reply_error_msgBuilder*) toBuilder {
  return [common_reply_error_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasOrgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orgType", NSStringFromeum_method_type(self.orgType)];
  }
  if (self.hasError) {
    [output appendFormat:@"%@%@: %@\n", indent, @"error", self.error];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasOrgType) {
    [dictionary setObject: @(self.orgType) forKey: @"orgType"];
  }
  if (self.hasError) {
    [dictionary setObject: self.error forKey: @"error"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[common_reply_error_msg class]]) {
    return NO;
  }
  common_reply_error_msg *otherMessage = other;
  return
      self.hasOrgType == otherMessage.hasOrgType &&
      (!self.hasOrgType || self.orgType == otherMessage.orgType) &&
      self.hasError == otherMessage.hasError &&
      (!self.hasError || [self.error isEqual:otherMessage.error]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasOrgType) {
    hashCode = hashCode * 31 + self.orgType;
  }
  if (self.hasError) {
    hashCode = hashCode * 31 + [self.error hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface common_reply_error_msgBuilder()
@property (strong) common_reply_error_msg* resultCommonReplyErrorMsg;
@end

@implementation common_reply_error_msgBuilder
@synthesize resultCommonReplyErrorMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCommonReplyErrorMsg = [[common_reply_error_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCommonReplyErrorMsg;
}
- (common_reply_error_msgBuilder*) clear {
  self.resultCommonReplyErrorMsg = [[common_reply_error_msg alloc] init];
  return self;
}
- (common_reply_error_msgBuilder*) clone {
  return [common_reply_error_msg builderWithPrototype:resultCommonReplyErrorMsg];
}
- (common_reply_error_msg*) defaultInstance {
  return [common_reply_error_msg defaultInstance];
}
- (common_reply_error_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (common_reply_error_msg*) buildPartial {
  common_reply_error_msg* returnMe = resultCommonReplyErrorMsg;
  self.resultCommonReplyErrorMsg = nil;
  return returnMe;
}
- (common_reply_error_msgBuilder*) mergeFrom:(common_reply_error_msg*) other {
  if (other == [common_reply_error_msg defaultInstance]) {
    return self;
  }
  if (other.hasOrgType) {
    [self setOrgType:other.orgType];
  }
  if (other.hasError) {
    [self setError:other.error];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (common_reply_error_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (common_reply_error_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        eum_method_type value = (eum_method_type)[input readEnum];
        if (eum_method_typeIsValidValue(value)) {
          [self setOrgType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setError:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasOrgType {
  return resultCommonReplyErrorMsg.hasOrgType;
}
- (eum_method_type) orgType {
  return resultCommonReplyErrorMsg.orgType;
}
- (common_reply_error_msgBuilder*) setOrgType:(eum_method_type) value {
  resultCommonReplyErrorMsg.hasOrgType = YES;
  resultCommonReplyErrorMsg.orgType = value;
  return self;
}
- (common_reply_error_msgBuilder*) clearOrgType {
  resultCommonReplyErrorMsg.hasOrgType = NO;
  resultCommonReplyErrorMsg.orgType = eum_method_typeCommonErrorRep;
  return self;
}
- (BOOL) hasError {
  return resultCommonReplyErrorMsg.hasError;
}
- (NSString*) error {
  return resultCommonReplyErrorMsg.error;
}
- (common_reply_error_msgBuilder*) setError:(NSString*) value {
  resultCommonReplyErrorMsg.hasError = YES;
  resultCommonReplyErrorMsg.error = value;
  return self;
}
- (common_reply_error_msgBuilder*) clearError {
  resultCommonReplyErrorMsg.hasError = NO;
  resultCommonReplyErrorMsg.error = @"";
  return self;
}
@end

@interface load_dector_msg ()
@property BOOL req;
@property UInt32 loadFactor;
@property UInt32 connectCount;
@property UInt32 sendTime;
@end

@implementation load_dector_msg

- (BOOL) hasReq {
  return !!hasReq_;
}
- (void) setHasReq:(BOOL) _value_ {
  hasReq_ = !!_value_;
}
- (BOOL) req {
  return !!req_;
}
- (void) setReq:(BOOL) _value_ {
  req_ = !!_value_;
}
- (BOOL) hasLoadFactor {
  return !!hasLoadFactor_;
}
- (void) setHasLoadFactor:(BOOL) _value_ {
  hasLoadFactor_ = !!_value_;
}
@synthesize loadFactor;
- (BOOL) hasConnectCount {
  return !!hasConnectCount_;
}
- (void) setHasConnectCount:(BOOL) _value_ {
  hasConnectCount_ = !!_value_;
}
@synthesize connectCount;
- (BOOL) hasSendTime {
  return !!hasSendTime_;
}
- (void) setHasSendTime:(BOOL) _value_ {
  hasSendTime_ = !!_value_;
}
@synthesize sendTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.req = NO;
    self.loadFactor = 0;
    self.connectCount = 0;
    self.sendTime = 0;
  }
  return self;
}
static load_dector_msg* defaultload_dector_msgInstance = nil;
+ (void) initialize {
  if (self == [load_dector_msg class]) {
    defaultload_dector_msgInstance = [[load_dector_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultload_dector_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultload_dector_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasReq) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReq) {
    [output writeBool:1 value:self.req];
  }
  if (self.hasLoadFactor) {
    [output writeUInt32:2 value:self.loadFactor];
  }
  if (self.hasConnectCount) {
    [output writeUInt32:3 value:self.connectCount];
  }
  if (self.hasSendTime) {
    [output writeUInt32:4 value:self.sendTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasReq) {
    size_ += computeBoolSize(1, self.req);
  }
  if (self.hasLoadFactor) {
    size_ += computeUInt32Size(2, self.loadFactor);
  }
  if (self.hasConnectCount) {
    size_ += computeUInt32Size(3, self.connectCount);
  }
  if (self.hasSendTime) {
    size_ += computeUInt32Size(4, self.sendTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (load_dector_msg*) parseFromData:(NSData*) data {
  return (load_dector_msg*)[[[load_dector_msg builder] mergeFromData:data] build];
}
+ (load_dector_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (load_dector_msg*)[[[load_dector_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (load_dector_msg*) parseFromInputStream:(NSInputStream*) input {
  return (load_dector_msg*)[[[load_dector_msg builder] mergeFromInputStream:input] build];
}
+ (load_dector_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (load_dector_msg*)[[[load_dector_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (load_dector_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (load_dector_msg*)[[[load_dector_msg builder] mergeFromCodedInputStream:input] build];
}
+ (load_dector_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (load_dector_msg*)[[[load_dector_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (load_dector_msgBuilder*) builder {
  return [[load_dector_msgBuilder alloc] init];
}
+ (load_dector_msgBuilder*) builderWithPrototype:(load_dector_msg*) prototype {
  return [[load_dector_msg builder] mergeFrom:prototype];
}
- (load_dector_msgBuilder*) builder {
  return [load_dector_msg builder];
}
- (load_dector_msgBuilder*) toBuilder {
  return [load_dector_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReq) {
    [output appendFormat:@"%@%@: %@\n", indent, @"req", [NSNumber numberWithBool:self.req]];
  }
  if (self.hasLoadFactor) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loadFactor", [NSNumber numberWithInteger:self.loadFactor]];
  }
  if (self.hasConnectCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"connectCount", [NSNumber numberWithInteger:self.connectCount]];
  }
  if (self.hasSendTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sendTime", [NSNumber numberWithInteger:self.sendTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasReq) {
    [dictionary setObject: [NSNumber numberWithBool:self.req] forKey: @"req"];
  }
  if (self.hasLoadFactor) {
    [dictionary setObject: [NSNumber numberWithInteger:self.loadFactor] forKey: @"loadFactor"];
  }
  if (self.hasConnectCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.connectCount] forKey: @"connectCount"];
  }
  if (self.hasSendTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.sendTime] forKey: @"sendTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[load_dector_msg class]]) {
    return NO;
  }
  load_dector_msg *otherMessage = other;
  return
      self.hasReq == otherMessage.hasReq &&
      (!self.hasReq || self.req == otherMessage.req) &&
      self.hasLoadFactor == otherMessage.hasLoadFactor &&
      (!self.hasLoadFactor || self.loadFactor == otherMessage.loadFactor) &&
      self.hasConnectCount == otherMessage.hasConnectCount &&
      (!self.hasConnectCount || self.connectCount == otherMessage.connectCount) &&
      self.hasSendTime == otherMessage.hasSendTime &&
      (!self.hasSendTime || self.sendTime == otherMessage.sendTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasReq) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.req] hash];
  }
  if (self.hasLoadFactor) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.loadFactor] hash];
  }
  if (self.hasConnectCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.connectCount] hash];
  }
  if (self.hasSendTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sendTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface load_dector_msgBuilder()
@property (strong) load_dector_msg* resultLoadDectorMsg;
@end

@implementation load_dector_msgBuilder
@synthesize resultLoadDectorMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoadDectorMsg = [[load_dector_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoadDectorMsg;
}
- (load_dector_msgBuilder*) clear {
  self.resultLoadDectorMsg = [[load_dector_msg alloc] init];
  return self;
}
- (load_dector_msgBuilder*) clone {
  return [load_dector_msg builderWithPrototype:resultLoadDectorMsg];
}
- (load_dector_msg*) defaultInstance {
  return [load_dector_msg defaultInstance];
}
- (load_dector_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (load_dector_msg*) buildPartial {
  load_dector_msg* returnMe = resultLoadDectorMsg;
  self.resultLoadDectorMsg = nil;
  return returnMe;
}
- (load_dector_msgBuilder*) mergeFrom:(load_dector_msg*) other {
  if (other == [load_dector_msg defaultInstance]) {
    return self;
  }
  if (other.hasReq) {
    [self setReq:other.req];
  }
  if (other.hasLoadFactor) {
    [self setLoadFactor:other.loadFactor];
  }
  if (other.hasConnectCount) {
    [self setConnectCount:other.connectCount];
  }
  if (other.hasSendTime) {
    [self setSendTime:other.sendTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (load_dector_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (load_dector_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setReq:[input readBool]];
        break;
      }
      case 16: {
        [self setLoadFactor:[input readUInt32]];
        break;
      }
      case 24: {
        [self setConnectCount:[input readUInt32]];
        break;
      }
      case 32: {
        [self setSendTime:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasReq {
  return resultLoadDectorMsg.hasReq;
}
- (BOOL) req {
  return resultLoadDectorMsg.req;
}
- (load_dector_msgBuilder*) setReq:(BOOL) value {
  resultLoadDectorMsg.hasReq = YES;
  resultLoadDectorMsg.req = value;
  return self;
}
- (load_dector_msgBuilder*) clearReq {
  resultLoadDectorMsg.hasReq = NO;
  resultLoadDectorMsg.req = NO;
  return self;
}
- (BOOL) hasLoadFactor {
  return resultLoadDectorMsg.hasLoadFactor;
}
- (UInt32) loadFactor {
  return resultLoadDectorMsg.loadFactor;
}
- (load_dector_msgBuilder*) setLoadFactor:(UInt32) value {
  resultLoadDectorMsg.hasLoadFactor = YES;
  resultLoadDectorMsg.loadFactor = value;
  return self;
}
- (load_dector_msgBuilder*) clearLoadFactor {
  resultLoadDectorMsg.hasLoadFactor = NO;
  resultLoadDectorMsg.loadFactor = 0;
  return self;
}
- (BOOL) hasConnectCount {
  return resultLoadDectorMsg.hasConnectCount;
}
- (UInt32) connectCount {
  return resultLoadDectorMsg.connectCount;
}
- (load_dector_msgBuilder*) setConnectCount:(UInt32) value {
  resultLoadDectorMsg.hasConnectCount = YES;
  resultLoadDectorMsg.connectCount = value;
  return self;
}
- (load_dector_msgBuilder*) clearConnectCount {
  resultLoadDectorMsg.hasConnectCount = NO;
  resultLoadDectorMsg.connectCount = 0;
  return self;
}
- (BOOL) hasSendTime {
  return resultLoadDectorMsg.hasSendTime;
}
- (UInt32) sendTime {
  return resultLoadDectorMsg.sendTime;
}
- (load_dector_msgBuilder*) setSendTime:(UInt32) value {
  resultLoadDectorMsg.hasSendTime = YES;
  resultLoadDectorMsg.sendTime = value;
  return self;
}
- (load_dector_msgBuilder*) clearSendTime {
  resultLoadDectorMsg.hasSendTime = NO;
  resultLoadDectorMsg.sendTime = 0;
  return self;
}
@end

@interface server_login_msg ()
@property (strong) NSString* name;
@property (strong) NSString* password;
@end

@implementation server_login_msg

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) _value_ {
  hasPassword_ = !!_value_;
}
@synthesize password;
- (instancetype) init {
  if ((self = [super init])) {
    self.name = @"";
    self.password = @"";
  }
  return self;
}
static server_login_msg* defaultserver_login_msgInstance = nil;
+ (void) initialize {
  if (self == [server_login_msg class]) {
    defaultserver_login_msgInstance = [[server_login_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultserver_login_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultserver_login_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasPassword) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasName) {
    size_ += computeStringSize(1, self.name);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(2, self.password);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (server_login_msg*) parseFromData:(NSData*) data {
  return (server_login_msg*)[[[server_login_msg builder] mergeFromData:data] build];
}
+ (server_login_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (server_login_msg*)[[[server_login_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (server_login_msg*) parseFromInputStream:(NSInputStream*) input {
  return (server_login_msg*)[[[server_login_msg builder] mergeFromInputStream:input] build];
}
+ (server_login_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (server_login_msg*)[[[server_login_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (server_login_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (server_login_msg*)[[[server_login_msg builder] mergeFromCodedInputStream:input] build];
}
+ (server_login_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (server_login_msg*)[[[server_login_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (server_login_msgBuilder*) builder {
  return [[server_login_msgBuilder alloc] init];
}
+ (server_login_msgBuilder*) builderWithPrototype:(server_login_msg*) prototype {
  return [[server_login_msg builder] mergeFrom:prototype];
}
- (server_login_msgBuilder*) builder {
  return [server_login_msg builder];
}
- (server_login_msgBuilder*) toBuilder {
  return [server_login_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasPassword) {
    [dictionary setObject: self.password forKey: @"password"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[server_login_msg class]]) {
    return NO;
  }
  server_login_msg *otherMessage = other;
  return
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface server_login_msgBuilder()
@property (strong) server_login_msg* resultServerLoginMsg;
@end

@implementation server_login_msgBuilder
@synthesize resultServerLoginMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultServerLoginMsg = [[server_login_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultServerLoginMsg;
}
- (server_login_msgBuilder*) clear {
  self.resultServerLoginMsg = [[server_login_msg alloc] init];
  return self;
}
- (server_login_msgBuilder*) clone {
  return [server_login_msg builderWithPrototype:resultServerLoginMsg];
}
- (server_login_msg*) defaultInstance {
  return [server_login_msg defaultInstance];
}
- (server_login_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (server_login_msg*) buildPartial {
  server_login_msg* returnMe = resultServerLoginMsg;
  self.resultServerLoginMsg = nil;
  return returnMe;
}
- (server_login_msgBuilder*) mergeFrom:(server_login_msg*) other {
  if (other == [server_login_msg defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (server_login_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (server_login_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return resultServerLoginMsg.hasName;
}
- (NSString*) name {
  return resultServerLoginMsg.name;
}
- (server_login_msgBuilder*) setName:(NSString*) value {
  resultServerLoginMsg.hasName = YES;
  resultServerLoginMsg.name = value;
  return self;
}
- (server_login_msgBuilder*) clearName {
  resultServerLoginMsg.hasName = NO;
  resultServerLoginMsg.name = @"";
  return self;
}
- (BOOL) hasPassword {
  return resultServerLoginMsg.hasPassword;
}
- (NSString*) password {
  return resultServerLoginMsg.password;
}
- (server_login_msgBuilder*) setPassword:(NSString*) value {
  resultServerLoginMsg.hasPassword = YES;
  resultServerLoginMsg.password = value;
  return self;
}
- (server_login_msgBuilder*) clearPassword {
  resultServerLoginMsg.hasPassword = NO;
  resultServerLoginMsg.password = @"";
  return self;
}
@end

@interface server_login_result_msg ()
@property BOOL result;
@end

@implementation server_login_result_msg

- (BOOL) hasResult {
  return !!hasResult_;
}
- (void) setHasResult:(BOOL) _value_ {
  hasResult_ = !!_value_;
}
- (BOOL) result {
  return !!result_;
}
- (void) setResult:(BOOL) _value_ {
  result_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.result = NO;
  }
  return self;
}
static server_login_result_msg* defaultserver_login_result_msgInstance = nil;
+ (void) initialize {
  if (self == [server_login_result_msg class]) {
    defaultserver_login_result_msgInstance = [[server_login_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultserver_login_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultserver_login_result_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResult) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResult) {
    [output writeBool:1 value:self.result];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResult) {
    size_ += computeBoolSize(1, self.result);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (server_login_result_msg*) parseFromData:(NSData*) data {
  return (server_login_result_msg*)[[[server_login_result_msg builder] mergeFromData:data] build];
}
+ (server_login_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (server_login_result_msg*)[[[server_login_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (server_login_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (server_login_result_msg*)[[[server_login_result_msg builder] mergeFromInputStream:input] build];
}
+ (server_login_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (server_login_result_msg*)[[[server_login_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (server_login_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (server_login_result_msg*)[[[server_login_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (server_login_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (server_login_result_msg*)[[[server_login_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (server_login_result_msgBuilder*) builder {
  return [[server_login_result_msgBuilder alloc] init];
}
+ (server_login_result_msgBuilder*) builderWithPrototype:(server_login_result_msg*) prototype {
  return [[server_login_result_msg builder] mergeFrom:prototype];
}
- (server_login_result_msgBuilder*) builder {
  return [server_login_result_msg builder];
}
- (server_login_result_msgBuilder*) toBuilder {
  return [server_login_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResult) {
    [output appendFormat:@"%@%@: %@\n", indent, @"result", [NSNumber numberWithBool:self.result]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasResult) {
    [dictionary setObject: [NSNumber numberWithBool:self.result] forKey: @"result"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[server_login_result_msg class]]) {
    return NO;
  }
  server_login_result_msg *otherMessage = other;
  return
      self.hasResult == otherMessage.hasResult &&
      (!self.hasResult || self.result == otherMessage.result) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResult) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.result] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface server_login_result_msgBuilder()
@property (strong) server_login_result_msg* resultServerLoginResultMsg;
@end

@implementation server_login_result_msgBuilder
@synthesize resultServerLoginResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultServerLoginResultMsg = [[server_login_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultServerLoginResultMsg;
}
- (server_login_result_msgBuilder*) clear {
  self.resultServerLoginResultMsg = [[server_login_result_msg alloc] init];
  return self;
}
- (server_login_result_msgBuilder*) clone {
  return [server_login_result_msg builderWithPrototype:resultServerLoginResultMsg];
}
- (server_login_result_msg*) defaultInstance {
  return [server_login_result_msg defaultInstance];
}
- (server_login_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (server_login_result_msg*) buildPartial {
  server_login_result_msg* returnMe = resultServerLoginResultMsg;
  self.resultServerLoginResultMsg = nil;
  return returnMe;
}
- (server_login_result_msgBuilder*) mergeFrom:(server_login_result_msg*) other {
  if (other == [server_login_result_msg defaultInstance]) {
    return self;
  }
  if (other.hasResult) {
    [self setResult:other.result];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (server_login_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (server_login_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResult:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasResult {
  return resultServerLoginResultMsg.hasResult;
}
- (BOOL) result {
  return resultServerLoginResultMsg.result;
}
- (server_login_result_msgBuilder*) setResult:(BOOL) value {
  resultServerLoginResultMsg.hasResult = YES;
  resultServerLoginResultMsg.result = value;
  return self;
}
- (server_login_result_msgBuilder*) clearResult {
  resultServerLoginResultMsg.hasResult = NO;
  resultServerLoginResultMsg.result = NO;
  return self;
}
@end

@interface client_login_msg ()
@property (strong) NSString* name;
@property (strong) NSString* password;
@property (strong) NSString* bios;
@property (strong) NSString* mac;
@property (strong) NSString* hdd;
@property (strong) NSString* cpu;
@property (strong) NSString* ip;
@property client_login_msglogin_type ltype;
@property UInt32 sid;
@property UInt32 cid;
@end

@implementation client_login_msg

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) _value_ {
  hasPassword_ = !!_value_;
}
@synthesize password;
- (BOOL) hasBios {
  return !!hasBios_;
}
- (void) setHasBios:(BOOL) _value_ {
  hasBios_ = !!_value_;
}
@synthesize bios;
- (BOOL) hasMac {
  return !!hasMac_;
}
- (void) setHasMac:(BOOL) _value_ {
  hasMac_ = !!_value_;
}
@synthesize mac;
- (BOOL) hasHdd {
  return !!hasHdd_;
}
- (void) setHasHdd:(BOOL) _value_ {
  hasHdd_ = !!_value_;
}
@synthesize hdd;
- (BOOL) hasCpu {
  return !!hasCpu_;
}
- (void) setHasCpu:(BOOL) _value_ {
  hasCpu_ = !!_value_;
}
@synthesize cpu;
- (BOOL) hasIp {
  return !!hasIp_;
}
- (void) setHasIp:(BOOL) _value_ {
  hasIp_ = !!_value_;
}
@synthesize ip;
- (BOOL) hasLtype {
  return !!hasLtype_;
}
- (void) setHasLtype:(BOOL) _value_ {
  hasLtype_ = !!_value_;
}
@synthesize ltype;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) _value_ {
  hasSid_ = !!_value_;
}
@synthesize sid;
- (BOOL) hasCid {
  return !!hasCid_;
}
- (void) setHasCid:(BOOL) _value_ {
  hasCid_ = !!_value_;
}
@synthesize cid;
- (instancetype) init {
  if ((self = [super init])) {
    self.name = @"";
    self.password = @"";
    self.bios = @"";
    self.mac = @"";
    self.hdd = @"";
    self.cpu = @"";
    self.ip = @"";
    self.ltype = client_login_msglogin_typeIndexPc;
    self.sid = 0;
    self.cid = 0;
  }
  return self;
}
static client_login_msg* defaultclient_login_msgInstance = nil;
+ (void) initialize {
  if (self == [client_login_msg class]) {
    defaultclient_login_msgInstance = [[client_login_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultclient_login_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultclient_login_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasPassword) {
    return NO;
  }
  if (!self.hasBios) {
    return NO;
  }
  if (!self.hasMac) {
    return NO;
  }
  if (!self.hasHdd) {
    return NO;
  }
  if (!self.hasCpu) {
    return NO;
  }
  if (!self.hasIp) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  if (self.hasBios) {
    [output writeString:3 value:self.bios];
  }
  if (self.hasMac) {
    [output writeString:4 value:self.mac];
  }
  if (self.hasHdd) {
    [output writeString:5 value:self.hdd];
  }
  if (self.hasCpu) {
    [output writeString:6 value:self.cpu];
  }
  if (self.hasIp) {
    [output writeString:7 value:self.ip];
  }
  if (self.hasLtype) {
    [output writeEnum:8 value:self.ltype];
  }
  if (self.hasSid) {
    [output writeUInt32:9 value:self.sid];
  }
  if (self.hasCid) {
    [output writeUInt32:10 value:self.cid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasName) {
    size_ += computeStringSize(1, self.name);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(2, self.password);
  }
  if (self.hasBios) {
    size_ += computeStringSize(3, self.bios);
  }
  if (self.hasMac) {
    size_ += computeStringSize(4, self.mac);
  }
  if (self.hasHdd) {
    size_ += computeStringSize(5, self.hdd);
  }
  if (self.hasCpu) {
    size_ += computeStringSize(6, self.cpu);
  }
  if (self.hasIp) {
    size_ += computeStringSize(7, self.ip);
  }
  if (self.hasLtype) {
    size_ += computeEnumSize(8, self.ltype);
  }
  if (self.hasSid) {
    size_ += computeUInt32Size(9, self.sid);
  }
  if (self.hasCid) {
    size_ += computeUInt32Size(10, self.cid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (client_login_msg*) parseFromData:(NSData*) data {
  return (client_login_msg*)[[[client_login_msg builder] mergeFromData:data] build];
}
+ (client_login_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (client_login_msg*)[[[client_login_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (client_login_msg*) parseFromInputStream:(NSInputStream*) input {
  return (client_login_msg*)[[[client_login_msg builder] mergeFromInputStream:input] build];
}
+ (client_login_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (client_login_msg*)[[[client_login_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (client_login_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (client_login_msg*)[[[client_login_msg builder] mergeFromCodedInputStream:input] build];
}
+ (client_login_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (client_login_msg*)[[[client_login_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (client_login_msgBuilder*) builder {
  return [[client_login_msgBuilder alloc] init];
}
+ (client_login_msgBuilder*) builderWithPrototype:(client_login_msg*) prototype {
  return [[client_login_msg builder] mergeFrom:prototype];
}
- (client_login_msgBuilder*) builder {
  return [client_login_msg builder];
}
- (client_login_msgBuilder*) toBuilder {
  return [client_login_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  if (self.hasBios) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bios", self.bios];
  }
  if (self.hasMac) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mac", self.mac];
  }
  if (self.hasHdd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hdd", self.hdd];
  }
  if (self.hasCpu) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cpu", self.cpu];
  }
  if (self.hasIp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ip", self.ip];
  }
  if (self.hasLtype) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ltype", NSStringFromclient_login_msglogin_type(self.ltype)];
  }
  if (self.hasSid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sid", [NSNumber numberWithInteger:self.sid]];
  }
  if (self.hasCid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cid", [NSNumber numberWithInteger:self.cid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasPassword) {
    [dictionary setObject: self.password forKey: @"password"];
  }
  if (self.hasBios) {
    [dictionary setObject: self.bios forKey: @"bios"];
  }
  if (self.hasMac) {
    [dictionary setObject: self.mac forKey: @"mac"];
  }
  if (self.hasHdd) {
    [dictionary setObject: self.hdd forKey: @"hdd"];
  }
  if (self.hasCpu) {
    [dictionary setObject: self.cpu forKey: @"cpu"];
  }
  if (self.hasIp) {
    [dictionary setObject: self.ip forKey: @"ip"];
  }
  if (self.hasLtype) {
    [dictionary setObject: @(self.ltype) forKey: @"ltype"];
  }
  if (self.hasSid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.sid] forKey: @"sid"];
  }
  if (self.hasCid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cid] forKey: @"cid"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[client_login_msg class]]) {
    return NO;
  }
  client_login_msg *otherMessage = other;
  return
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      self.hasBios == otherMessage.hasBios &&
      (!self.hasBios || [self.bios isEqual:otherMessage.bios]) &&
      self.hasMac == otherMessage.hasMac &&
      (!self.hasMac || [self.mac isEqual:otherMessage.mac]) &&
      self.hasHdd == otherMessage.hasHdd &&
      (!self.hasHdd || [self.hdd isEqual:otherMessage.hdd]) &&
      self.hasCpu == otherMessage.hasCpu &&
      (!self.hasCpu || [self.cpu isEqual:otherMessage.cpu]) &&
      self.hasIp == otherMessage.hasIp &&
      (!self.hasIp || [self.ip isEqual:otherMessage.ip]) &&
      self.hasLtype == otherMessage.hasLtype &&
      (!self.hasLtype || self.ltype == otherMessage.ltype) &&
      self.hasSid == otherMessage.hasSid &&
      (!self.hasSid || self.sid == otherMessage.sid) &&
      self.hasCid == otherMessage.hasCid &&
      (!self.hasCid || self.cid == otherMessage.cid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  if (self.hasBios) {
    hashCode = hashCode * 31 + [self.bios hash];
  }
  if (self.hasMac) {
    hashCode = hashCode * 31 + [self.mac hash];
  }
  if (self.hasHdd) {
    hashCode = hashCode * 31 + [self.hdd hash];
  }
  if (self.hasCpu) {
    hashCode = hashCode * 31 + [self.cpu hash];
  }
  if (self.hasIp) {
    hashCode = hashCode * 31 + [self.ip hash];
  }
  if (self.hasLtype) {
    hashCode = hashCode * 31 + self.ltype;
  }
  if (self.hasSid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sid] hash];
  }
  if (self.hasCid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL client_login_msglogin_typeIsValidValue(client_login_msglogin_type value) {
  switch (value) {
    case client_login_msglogin_typeIndexPc:
    case client_login_msglogin_typeIndexMobile:
    case client_login_msglogin_typeTgPc:
    case client_login_msglogin_typeTgMobile:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromclient_login_msglogin_type(client_login_msglogin_type value) {
  switch (value) {
    case client_login_msglogin_typeIndexPc:
      return @"client_login_msglogin_typeIndexPc";
    case client_login_msglogin_typeIndexMobile:
      return @"client_login_msglogin_typeIndexMobile";
    case client_login_msglogin_typeTgPc:
      return @"client_login_msglogin_typeTgPc";
    case client_login_msglogin_typeTgMobile:
      return @"client_login_msglogin_typeTgMobile";
    default:
      return nil;
  }
}

@interface client_login_msgBuilder()
@property (strong) client_login_msg* resultClientLoginMsg;
@end

@implementation client_login_msgBuilder
@synthesize resultClientLoginMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClientLoginMsg = [[client_login_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClientLoginMsg;
}
- (client_login_msgBuilder*) clear {
  self.resultClientLoginMsg = [[client_login_msg alloc] init];
  return self;
}
- (client_login_msgBuilder*) clone {
  return [client_login_msg builderWithPrototype:resultClientLoginMsg];
}
- (client_login_msg*) defaultInstance {
  return [client_login_msg defaultInstance];
}
- (client_login_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (client_login_msg*) buildPartial {
  client_login_msg* returnMe = resultClientLoginMsg;
  self.resultClientLoginMsg = nil;
  return returnMe;
}
- (client_login_msgBuilder*) mergeFrom:(client_login_msg*) other {
  if (other == [client_login_msg defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.hasBios) {
    [self setBios:other.bios];
  }
  if (other.hasMac) {
    [self setMac:other.mac];
  }
  if (other.hasHdd) {
    [self setHdd:other.hdd];
  }
  if (other.hasCpu) {
    [self setCpu:other.cpu];
  }
  if (other.hasIp) {
    [self setIp:other.ip];
  }
  if (other.hasLtype) {
    [self setLtype:other.ltype];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasCid) {
    [self setCid:other.cid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (client_login_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (client_login_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
      case 26: {
        [self setBios:[input readString]];
        break;
      }
      case 34: {
        [self setMac:[input readString]];
        break;
      }
      case 42: {
        [self setHdd:[input readString]];
        break;
      }
      case 50: {
        [self setCpu:[input readString]];
        break;
      }
      case 58: {
        [self setIp:[input readString]];
        break;
      }
      case 64: {
        client_login_msglogin_type value = (client_login_msglogin_type)[input readEnum];
        if (client_login_msglogin_typeIsValidValue(value)) {
          [self setLtype:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
      case 72: {
        [self setSid:[input readUInt32]];
        break;
      }
      case 80: {
        [self setCid:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return resultClientLoginMsg.hasName;
}
- (NSString*) name {
  return resultClientLoginMsg.name;
}
- (client_login_msgBuilder*) setName:(NSString*) value {
  resultClientLoginMsg.hasName = YES;
  resultClientLoginMsg.name = value;
  return self;
}
- (client_login_msgBuilder*) clearName {
  resultClientLoginMsg.hasName = NO;
  resultClientLoginMsg.name = @"";
  return self;
}
- (BOOL) hasPassword {
  return resultClientLoginMsg.hasPassword;
}
- (NSString*) password {
  return resultClientLoginMsg.password;
}
- (client_login_msgBuilder*) setPassword:(NSString*) value {
  resultClientLoginMsg.hasPassword = YES;
  resultClientLoginMsg.password = value;
  return self;
}
- (client_login_msgBuilder*) clearPassword {
  resultClientLoginMsg.hasPassword = NO;
  resultClientLoginMsg.password = @"";
  return self;
}
- (BOOL) hasBios {
  return resultClientLoginMsg.hasBios;
}
- (NSString*) bios {
  return resultClientLoginMsg.bios;
}
- (client_login_msgBuilder*) setBios:(NSString*) value {
  resultClientLoginMsg.hasBios = YES;
  resultClientLoginMsg.bios = value;
  return self;
}
- (client_login_msgBuilder*) clearBios {
  resultClientLoginMsg.hasBios = NO;
  resultClientLoginMsg.bios = @"";
  return self;
}
- (BOOL) hasMac {
  return resultClientLoginMsg.hasMac;
}
- (NSString*) mac {
  return resultClientLoginMsg.mac;
}
- (client_login_msgBuilder*) setMac:(NSString*) value {
  resultClientLoginMsg.hasMac = YES;
  resultClientLoginMsg.mac = value;
  return self;
}
- (client_login_msgBuilder*) clearMac {
  resultClientLoginMsg.hasMac = NO;
  resultClientLoginMsg.mac = @"";
  return self;
}
- (BOOL) hasHdd {
  return resultClientLoginMsg.hasHdd;
}
- (NSString*) hdd {
  return resultClientLoginMsg.hdd;
}
- (client_login_msgBuilder*) setHdd:(NSString*) value {
  resultClientLoginMsg.hasHdd = YES;
  resultClientLoginMsg.hdd = value;
  return self;
}
- (client_login_msgBuilder*) clearHdd {
  resultClientLoginMsg.hasHdd = NO;
  resultClientLoginMsg.hdd = @"";
  return self;
}
- (BOOL) hasCpu {
  return resultClientLoginMsg.hasCpu;
}
- (NSString*) cpu {
  return resultClientLoginMsg.cpu;
}
- (client_login_msgBuilder*) setCpu:(NSString*) value {
  resultClientLoginMsg.hasCpu = YES;
  resultClientLoginMsg.cpu = value;
  return self;
}
- (client_login_msgBuilder*) clearCpu {
  resultClientLoginMsg.hasCpu = NO;
  resultClientLoginMsg.cpu = @"";
  return self;
}
- (BOOL) hasIp {
  return resultClientLoginMsg.hasIp;
}
- (NSString*) ip {
  return resultClientLoginMsg.ip;
}
- (client_login_msgBuilder*) setIp:(NSString*) value {
  resultClientLoginMsg.hasIp = YES;
  resultClientLoginMsg.ip = value;
  return self;
}
- (client_login_msgBuilder*) clearIp {
  resultClientLoginMsg.hasIp = NO;
  resultClientLoginMsg.ip = @"";
  return self;
}
- (BOOL) hasLtype {
  return resultClientLoginMsg.hasLtype;
}
- (client_login_msglogin_type) ltype {
  return resultClientLoginMsg.ltype;
}
- (client_login_msgBuilder*) setLtype:(client_login_msglogin_type) value {
  resultClientLoginMsg.hasLtype = YES;
  resultClientLoginMsg.ltype = value;
  return self;
}
- (client_login_msgBuilder*) clearLtype {
  resultClientLoginMsg.hasLtype = NO;
  resultClientLoginMsg.ltype = client_login_msglogin_typeIndexPc;
  return self;
}
- (BOOL) hasSid {
  return resultClientLoginMsg.hasSid;
}
- (UInt32) sid {
  return resultClientLoginMsg.sid;
}
- (client_login_msgBuilder*) setSid:(UInt32) value {
  resultClientLoginMsg.hasSid = YES;
  resultClientLoginMsg.sid = value;
  return self;
}
- (client_login_msgBuilder*) clearSid {
  resultClientLoginMsg.hasSid = NO;
  resultClientLoginMsg.sid = 0;
  return self;
}
- (BOOL) hasCid {
  return resultClientLoginMsg.hasCid;
}
- (UInt32) cid {
  return resultClientLoginMsg.cid;
}
- (client_login_msgBuilder*) setCid:(UInt32) value {
  resultClientLoginMsg.hasCid = YES;
  resultClientLoginMsg.cid = value;
  return self;
}
- (client_login_msgBuilder*) clearCid {
  resultClientLoginMsg.hasCid = NO;
  resultClientLoginMsg.cid = 0;
  return self;
}
@end

@interface auth_ctx_msg ()
@property (strong) PBAppendableArray * authServicesArray;
@property (strong) NSMutableArray * topicsArray;
@property (strong) NSMutableArray * extArray;
@end

@implementation auth_ctx_msg

@synthesize authServicesArray;
@dynamic authServices;
@synthesize topicsArray;
@dynamic topics;
@synthesize extArray;
@dynamic ext;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static auth_ctx_msg* defaultauth_ctx_msgInstance = nil;
+ (void) initialize {
  if (self == [auth_ctx_msg class]) {
    defaultauth_ctx_msgInstance = [[auth_ctx_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultauth_ctx_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultauth_ctx_msgInstance;
}
- (PBArray *)authServices {
  return authServicesArray;
}
- (eum_rpc_service)authServicesAtIndex:(NSUInteger)index {
  return (eum_rpc_service)[authServicesArray enumAtIndex:index];
}
- (NSArray *)topics {
  return topicsArray;
}
- (subcribe_msg*)topicsAtIndex:(NSUInteger)index {
  return [topicsArray objectAtIndex:index];
}
- (NSArray *)ext {
  return extArray;
}
- (ext_key_info*)extAtIndex:(NSUInteger)index {
  return [extArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInittopics = YES;
   [self.topics enumerateObjectsUsingBlock:^(subcribe_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInittopics = NO;
      *stop = YES;
    }
  }];
  if (!isInittopics) return isInittopics;
  __block BOOL isInitext = YES;
   [self.ext enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitext = NO;
      *stop = YES;
    }
  }];
  if (!isInitext) return isInitext;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger authServicesArrayCount = self.authServicesArray.count;
  const eum_rpc_service *authServicesArrayValues = (const eum_rpc_service *)self.authServicesArray.data;
  for (NSUInteger i = 0; i < authServicesArrayCount; ++i) {
    [output writeEnum:1 value:authServicesArrayValues[i]];
  }
  [self.topicsArray enumerateObjectsUsingBlock:^(subcribe_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    SInt32 dataSize = 0;
    const NSUInteger count = self.authServicesArray.count;
    const eum_rpc_service *values = (const eum_rpc_service *)self.authServicesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeEnumSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  [self.topicsArray enumerateObjectsUsingBlock:^(subcribe_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (auth_ctx_msg*) parseFromData:(NSData*) data {
  return (auth_ctx_msg*)[[[auth_ctx_msg builder] mergeFromData:data] build];
}
+ (auth_ctx_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_ctx_msg*)[[[auth_ctx_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (auth_ctx_msg*) parseFromInputStream:(NSInputStream*) input {
  return (auth_ctx_msg*)[[[auth_ctx_msg builder] mergeFromInputStream:input] build];
}
+ (auth_ctx_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_ctx_msg*)[[[auth_ctx_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_ctx_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (auth_ctx_msg*)[[[auth_ctx_msg builder] mergeFromCodedInputStream:input] build];
}
+ (auth_ctx_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (auth_ctx_msg*)[[[auth_ctx_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (auth_ctx_msgBuilder*) builder {
  return [[auth_ctx_msgBuilder alloc] init];
}
+ (auth_ctx_msgBuilder*) builderWithPrototype:(auth_ctx_msg*) prototype {
  return [[auth_ctx_msg builder] mergeFrom:prototype];
}
- (auth_ctx_msgBuilder*) builder {
  return [auth_ctx_msg builder];
}
- (auth_ctx_msgBuilder*) toBuilder {
  return [auth_ctx_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.authServicesArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authServices", NSStringFromeum_rpc_service([(NSNumber *)element intValue])];
  }];
  [self.topicsArray enumerateObjectsUsingBlock:^(subcribe_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"topics"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"ext"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  const NSUInteger authServicesArrayCount = self.authServicesArray.count;
  if (authServicesArrayCount > 0) {
    const eum_rpc_service *authServicesArrayValues = (const eum_rpc_service *)self.authServicesArray.data;
    NSMutableArray * authServicesArrayArray = [NSMutableArray new];
    for (NSUInteger i = 0; i < authServicesArrayCount; ++i) {
      [authServicesArrayArray addObject: @(authServicesArrayValues[i])];
    }
    [dictionary setObject: authServicesArrayArray forKey: @"authServices"];
  }
  for (subcribe_msg* element in self.topicsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"topics"];
  }
  for (ext_key_info* element in self.extArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"ext"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[auth_ctx_msg class]]) {
    return NO;
  }
  auth_ctx_msg *otherMessage = other;
  return
      [self.authServicesArray isEqualToArray:otherMessage.authServicesArray] &&
      [self.topicsArray isEqualToArray:otherMessage.topicsArray] &&
      [self.extArray isEqualToArray:otherMessage.extArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.authServicesArray enumerateObjectsUsingBlock:^(NSNumber* element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + element.longValue;
  }];
  [self.topicsArray enumerateObjectsUsingBlock:^(subcribe_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface auth_ctx_msgBuilder()
@property (strong) auth_ctx_msg* resultAuthCtxMsg;
@end

@implementation auth_ctx_msgBuilder
@synthesize resultAuthCtxMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAuthCtxMsg = [[auth_ctx_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAuthCtxMsg;
}
- (auth_ctx_msgBuilder*) clear {
  self.resultAuthCtxMsg = [[auth_ctx_msg alloc] init];
  return self;
}
- (auth_ctx_msgBuilder*) clone {
  return [auth_ctx_msg builderWithPrototype:resultAuthCtxMsg];
}
- (auth_ctx_msg*) defaultInstance {
  return [auth_ctx_msg defaultInstance];
}
- (auth_ctx_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (auth_ctx_msg*) buildPartial {
  auth_ctx_msg* returnMe = resultAuthCtxMsg;
  self.resultAuthCtxMsg = nil;
  return returnMe;
}
- (auth_ctx_msgBuilder*) mergeFrom:(auth_ctx_msg*) other {
  if (other == [auth_ctx_msg defaultInstance]) {
    return self;
  }
  if (other.authServicesArray.count > 0) {
    if (resultAuthCtxMsg.authServicesArray == nil) {
      resultAuthCtxMsg.authServicesArray = [other.authServicesArray copy];
    } else {
      [resultAuthCtxMsg.authServicesArray appendArray:other.authServicesArray];
    }
  }
  if (other.topicsArray.count > 0) {
    if (resultAuthCtxMsg.topicsArray == nil) {
      resultAuthCtxMsg.topicsArray = [[NSMutableArray alloc] initWithArray:other.topicsArray];
    } else {
      [resultAuthCtxMsg.topicsArray addObjectsFromArray:other.topicsArray];
    }
  }
  if (other.extArray.count > 0) {
    if (resultAuthCtxMsg.extArray == nil) {
      resultAuthCtxMsg.extArray = [[NSMutableArray alloc] initWithArray:other.extArray];
    } else {
      [resultAuthCtxMsg.extArray addObjectsFromArray:other.extArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (auth_ctx_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (auth_ctx_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        eum_rpc_service value = (eum_rpc_service)[input readEnum];
        if (eum_rpc_serviceIsValidValue(value)) {
          [self addAuthServices:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        subcribe_msgBuilder* subBuilder = [subcribe_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTopics:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        ext_key_infoBuilder* subBuilder = [ext_key_info builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExt:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)authServices {
  return resultAuthCtxMsg.authServicesArray;
}
- (eum_rpc_service)authServicesAtIndex:(NSUInteger)index {
  return [resultAuthCtxMsg authServicesAtIndex:index];
}
- (auth_ctx_msgBuilder *)addAuthServices:(eum_rpc_service)value {
  if (resultAuthCtxMsg.authServicesArray == nil) {
    resultAuthCtxMsg.authServicesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [resultAuthCtxMsg.authServicesArray addEnum:value];
  return self;
}
- (auth_ctx_msgBuilder *)setAuthServicesArray:(NSArray *)array {
  resultAuthCtxMsg.authServicesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (auth_ctx_msgBuilder *)setAuthServicesValues:(const eum_rpc_service *)values count:(NSUInteger)count {
  resultAuthCtxMsg.authServicesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (auth_ctx_msgBuilder *)clearAuthServices {
  resultAuthCtxMsg.authServicesArray = nil;
  return self;
}
- (NSMutableArray *)topics {
  return resultAuthCtxMsg.topicsArray;
}
- (subcribe_msg*)topicsAtIndex:(NSUInteger)index {
  return [resultAuthCtxMsg topicsAtIndex:index];
}
- (auth_ctx_msgBuilder *)addTopics:(subcribe_msg*)value {
  if (resultAuthCtxMsg.topicsArray == nil) {
    resultAuthCtxMsg.topicsArray = [[NSMutableArray alloc]init];
  }
  [resultAuthCtxMsg.topicsArray addObject:value];
  return self;
}
- (auth_ctx_msgBuilder *)setTopicsArray:(NSArray *)array {
  resultAuthCtxMsg.topicsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (auth_ctx_msgBuilder *)clearTopics {
  resultAuthCtxMsg.topicsArray = nil;
  return self;
}
- (NSMutableArray *)ext {
  return resultAuthCtxMsg.extArray;
}
- (ext_key_info*)extAtIndex:(NSUInteger)index {
  return [resultAuthCtxMsg extAtIndex:index];
}
- (auth_ctx_msgBuilder *)addExt:(ext_key_info*)value {
  if (resultAuthCtxMsg.extArray == nil) {
    resultAuthCtxMsg.extArray = [[NSMutableArray alloc]init];
  }
  [resultAuthCtxMsg.extArray addObject:value];
  return self;
}
- (auth_ctx_msgBuilder *)setExtArray:(NSArray *)array {
  resultAuthCtxMsg.extArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (auth_ctx_msgBuilder *)clearExt {
  resultAuthCtxMsg.extArray = nil;
  return self;
}
@end

@interface client_login_result_msg ()
@property BOOL result;
@property (strong) NSString* msg;
@property (strong) NSMutableArray * extArray;
@property SInt32 ltype;
@property UInt32 sid;
@property UInt32 cid;
@property (strong) auth_ctx_msg* auths;
@end

@implementation client_login_result_msg

- (BOOL) hasResult {
  return !!hasResult_;
}
- (void) setHasResult:(BOOL) _value_ {
  hasResult_ = !!_value_;
}
- (BOOL) result {
  return !!result_;
}
- (void) setResult:(BOOL) _value_ {
  result_ = !!_value_;
}
- (BOOL) hasMsg {
  return !!hasMsg_;
}
- (void) setHasMsg:(BOOL) _value_ {
  hasMsg_ = !!_value_;
}
@synthesize msg;
@synthesize extArray;
@dynamic ext;
- (BOOL) hasLtype {
  return !!hasLtype_;
}
- (void) setHasLtype:(BOOL) _value_ {
  hasLtype_ = !!_value_;
}
@synthesize ltype;
- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) _value_ {
  hasSid_ = !!_value_;
}
@synthesize sid;
- (BOOL) hasCid {
  return !!hasCid_;
}
- (void) setHasCid:(BOOL) _value_ {
  hasCid_ = !!_value_;
}
@synthesize cid;
- (BOOL) hasAuths {
  return !!hasAuths_;
}
- (void) setHasAuths:(BOOL) _value_ {
  hasAuths_ = !!_value_;
}
@synthesize auths;
- (instancetype) init {
  if ((self = [super init])) {
    self.result = NO;
    self.msg = @"";
    self.ltype = 0;
    self.sid = 0;
    self.cid = 0;
    self.auths = [auth_ctx_msg defaultInstance];
  }
  return self;
}
static client_login_result_msg* defaultclient_login_result_msgInstance = nil;
+ (void) initialize {
  if (self == [client_login_result_msg class]) {
    defaultclient_login_result_msgInstance = [[client_login_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultclient_login_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultclient_login_result_msgInstance;
}
- (NSArray *)ext {
  return extArray;
}
- (ext_key_info*)extAtIndex:(NSUInteger)index {
  return [extArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasResult) {
    return NO;
  }
  __block BOOL isInitext = YES;
   [self.ext enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitext = NO;
      *stop = YES;
    }
  }];
  if (!isInitext) return isInitext;
  if (self.hasAuths) {
    if (!self.auths.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResult) {
    [output writeBool:1 value:self.result];
  }
  if (self.hasMsg) {
    [output writeString:2 value:self.msg];
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasLtype) {
    [output writeInt32:4 value:self.ltype];
  }
  if (self.hasSid) {
    [output writeUInt32:5 value:self.sid];
  }
  if (self.hasCid) {
    [output writeUInt32:6 value:self.cid];
  }
  if (self.hasAuths) {
    [output writeMessage:7 value:self.auths];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResult) {
    size_ += computeBoolSize(1, self.result);
  }
  if (self.hasMsg) {
    size_ += computeStringSize(2, self.msg);
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasLtype) {
    size_ += computeInt32Size(4, self.ltype);
  }
  if (self.hasSid) {
    size_ += computeUInt32Size(5, self.sid);
  }
  if (self.hasCid) {
    size_ += computeUInt32Size(6, self.cid);
  }
  if (self.hasAuths) {
    size_ += computeMessageSize(7, self.auths);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (client_login_result_msg*) parseFromData:(NSData*) data {
  return (client_login_result_msg*)[[[client_login_result_msg builder] mergeFromData:data] build];
}
+ (client_login_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (client_login_result_msg*)[[[client_login_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (client_login_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (client_login_result_msg*)[[[client_login_result_msg builder] mergeFromInputStream:input] build];
}
+ (client_login_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (client_login_result_msg*)[[[client_login_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (client_login_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (client_login_result_msg*)[[[client_login_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (client_login_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (client_login_result_msg*)[[[client_login_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (client_login_result_msgBuilder*) builder {
  return [[client_login_result_msgBuilder alloc] init];
}
+ (client_login_result_msgBuilder*) builderWithPrototype:(client_login_result_msg*) prototype {
  return [[client_login_result_msg builder] mergeFrom:prototype];
}
- (client_login_result_msgBuilder*) builder {
  return [client_login_result_msg builder];
}
- (client_login_result_msgBuilder*) toBuilder {
  return [client_login_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResult) {
    [output appendFormat:@"%@%@: %@\n", indent, @"result", [NSNumber numberWithBool:self.result]];
  }
  if (self.hasMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msg", self.msg];
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"ext"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasLtype) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ltype", [NSNumber numberWithInteger:self.ltype]];
  }
  if (self.hasSid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sid", [NSNumber numberWithInteger:self.sid]];
  }
  if (self.hasCid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cid", [NSNumber numberWithInteger:self.cid]];
  }
  if (self.hasAuths) {
    [output appendFormat:@"%@%@ {\n", indent, @"auths"];
    [self.auths writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasResult) {
    [dictionary setObject: [NSNumber numberWithBool:self.result] forKey: @"result"];
  }
  if (self.hasMsg) {
    [dictionary setObject: self.msg forKey: @"msg"];
  }
  for (ext_key_info* element in self.extArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"ext"];
  }
  if (self.hasLtype) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ltype] forKey: @"ltype"];
  }
  if (self.hasSid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.sid] forKey: @"sid"];
  }
  if (self.hasCid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.cid] forKey: @"cid"];
  }
  if (self.hasAuths) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.auths storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"auths"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[client_login_result_msg class]]) {
    return NO;
  }
  client_login_result_msg *otherMessage = other;
  return
      self.hasResult == otherMessage.hasResult &&
      (!self.hasResult || self.result == otherMessage.result) &&
      self.hasMsg == otherMessage.hasMsg &&
      (!self.hasMsg || [self.msg isEqual:otherMessage.msg]) &&
      [self.extArray isEqualToArray:otherMessage.extArray] &&
      self.hasLtype == otherMessage.hasLtype &&
      (!self.hasLtype || self.ltype == otherMessage.ltype) &&
      self.hasSid == otherMessage.hasSid &&
      (!self.hasSid || self.sid == otherMessage.sid) &&
      self.hasCid == otherMessage.hasCid &&
      (!self.hasCid || self.cid == otherMessage.cid) &&
      self.hasAuths == otherMessage.hasAuths &&
      (!self.hasAuths || [self.auths isEqual:otherMessage.auths]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResult) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.result] hash];
  }
  if (self.hasMsg) {
    hashCode = hashCode * 31 + [self.msg hash];
  }
  [self.extArray enumerateObjectsUsingBlock:^(ext_key_info *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasLtype) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ltype] hash];
  }
  if (self.hasSid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.sid] hash];
  }
  if (self.hasCid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.cid] hash];
  }
  if (self.hasAuths) {
    hashCode = hashCode * 31 + [self.auths hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface client_login_result_msgBuilder()
@property (strong) client_login_result_msg* resultClientLoginResultMsg;
@end

@implementation client_login_result_msgBuilder
@synthesize resultClientLoginResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClientLoginResultMsg = [[client_login_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClientLoginResultMsg;
}
- (client_login_result_msgBuilder*) clear {
  self.resultClientLoginResultMsg = [[client_login_result_msg alloc] init];
  return self;
}
- (client_login_result_msgBuilder*) clone {
  return [client_login_result_msg builderWithPrototype:resultClientLoginResultMsg];
}
- (client_login_result_msg*) defaultInstance {
  return [client_login_result_msg defaultInstance];
}
- (client_login_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (client_login_result_msg*) buildPartial {
  client_login_result_msg* returnMe = resultClientLoginResultMsg;
  self.resultClientLoginResultMsg = nil;
  return returnMe;
}
- (client_login_result_msgBuilder*) mergeFrom:(client_login_result_msg*) other {
  if (other == [client_login_result_msg defaultInstance]) {
    return self;
  }
  if (other.hasResult) {
    [self setResult:other.result];
  }
  if (other.hasMsg) {
    [self setMsg:other.msg];
  }
  if (other.extArray.count > 0) {
    if (resultClientLoginResultMsg.extArray == nil) {
      resultClientLoginResultMsg.extArray = [[NSMutableArray alloc] initWithArray:other.extArray];
    } else {
      [resultClientLoginResultMsg.extArray addObjectsFromArray:other.extArray];
    }
  }
  if (other.hasLtype) {
    [self setLtype:other.ltype];
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasCid) {
    [self setCid:other.cid];
  }
  if (other.hasAuths) {
    [self mergeAuths:other.auths];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (client_login_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (client_login_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResult:[input readBool]];
        break;
      }
      case 18: {
        [self setMsg:[input readString]];
        break;
      }
      case 26: {
        ext_key_infoBuilder* subBuilder = [ext_key_info builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExt:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setLtype:[input readInt32]];
        break;
      }
      case 40: {
        [self setSid:[input readUInt32]];
        break;
      }
      case 48: {
        [self setCid:[input readUInt32]];
        break;
      }
      case 58: {
        auth_ctx_msgBuilder* subBuilder = [auth_ctx_msg builder];
        if (self.hasAuths) {
          [subBuilder mergeFrom:self.auths];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAuths:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasResult {
  return resultClientLoginResultMsg.hasResult;
}
- (BOOL) result {
  return resultClientLoginResultMsg.result;
}
- (client_login_result_msgBuilder*) setResult:(BOOL) value {
  resultClientLoginResultMsg.hasResult = YES;
  resultClientLoginResultMsg.result = value;
  return self;
}
- (client_login_result_msgBuilder*) clearResult {
  resultClientLoginResultMsg.hasResult = NO;
  resultClientLoginResultMsg.result = NO;
  return self;
}
- (BOOL) hasMsg {
  return resultClientLoginResultMsg.hasMsg;
}
- (NSString*) msg {
  return resultClientLoginResultMsg.msg;
}
- (client_login_result_msgBuilder*) setMsg:(NSString*) value {
  resultClientLoginResultMsg.hasMsg = YES;
  resultClientLoginResultMsg.msg = value;
  return self;
}
- (client_login_result_msgBuilder*) clearMsg {
  resultClientLoginResultMsg.hasMsg = NO;
  resultClientLoginResultMsg.msg = @"";
  return self;
}
- (NSMutableArray *)ext {
  return resultClientLoginResultMsg.extArray;
}
- (ext_key_info*)extAtIndex:(NSUInteger)index {
  return [resultClientLoginResultMsg extAtIndex:index];
}
- (client_login_result_msgBuilder *)addExt:(ext_key_info*)value {
  if (resultClientLoginResultMsg.extArray == nil) {
    resultClientLoginResultMsg.extArray = [[NSMutableArray alloc]init];
  }
  [resultClientLoginResultMsg.extArray addObject:value];
  return self;
}
- (client_login_result_msgBuilder *)setExtArray:(NSArray *)array {
  resultClientLoginResultMsg.extArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (client_login_result_msgBuilder *)clearExt {
  resultClientLoginResultMsg.extArray = nil;
  return self;
}
- (BOOL) hasLtype {
  return resultClientLoginResultMsg.hasLtype;
}
- (SInt32) ltype {
  return resultClientLoginResultMsg.ltype;
}
- (client_login_result_msgBuilder*) setLtype:(SInt32) value {
  resultClientLoginResultMsg.hasLtype = YES;
  resultClientLoginResultMsg.ltype = value;
  return self;
}
- (client_login_result_msgBuilder*) clearLtype {
  resultClientLoginResultMsg.hasLtype = NO;
  resultClientLoginResultMsg.ltype = 0;
  return self;
}
- (BOOL) hasSid {
  return resultClientLoginResultMsg.hasSid;
}
- (UInt32) sid {
  return resultClientLoginResultMsg.sid;
}
- (client_login_result_msgBuilder*) setSid:(UInt32) value {
  resultClientLoginResultMsg.hasSid = YES;
  resultClientLoginResultMsg.sid = value;
  return self;
}
- (client_login_result_msgBuilder*) clearSid {
  resultClientLoginResultMsg.hasSid = NO;
  resultClientLoginResultMsg.sid = 0;
  return self;
}
- (BOOL) hasCid {
  return resultClientLoginResultMsg.hasCid;
}
- (UInt32) cid {
  return resultClientLoginResultMsg.cid;
}
- (client_login_result_msgBuilder*) setCid:(UInt32) value {
  resultClientLoginResultMsg.hasCid = YES;
  resultClientLoginResultMsg.cid = value;
  return self;
}
- (client_login_result_msgBuilder*) clearCid {
  resultClientLoginResultMsg.hasCid = NO;
  resultClientLoginResultMsg.cid = 0;
  return self;
}
- (BOOL) hasAuths {
  return resultClientLoginResultMsg.hasAuths;
}
- (auth_ctx_msg*) auths {
  return resultClientLoginResultMsg.auths;
}
- (client_login_result_msgBuilder*) setAuths:(auth_ctx_msg*) value {
  resultClientLoginResultMsg.hasAuths = YES;
  resultClientLoginResultMsg.auths = value;
  return self;
}
- (client_login_result_msgBuilder*) setAuthsBuilder:(auth_ctx_msgBuilder*) builderForValue {
  return [self setAuths:[builderForValue build]];
}
- (client_login_result_msgBuilder*) mergeAuths:(auth_ctx_msg*) value {
  if (resultClientLoginResultMsg.hasAuths &&
      resultClientLoginResultMsg.auths != [auth_ctx_msg defaultInstance]) {
    resultClientLoginResultMsg.auths =
      [[[auth_ctx_msg builderWithPrototype:resultClientLoginResultMsg.auths] mergeFrom:value] buildPartial];
  } else {
    resultClientLoginResultMsg.auths = value;
  }
  resultClientLoginResultMsg.hasAuths = YES;
  return self;
}
- (client_login_result_msgBuilder*) clearAuths {
  resultClientLoginResultMsg.hasAuths = NO;
  resultClientLoginResultMsg.auths = [auth_ctx_msg defaultInstance];
  return self;
}
@end

@interface time_range_selector ()
@property UInt32 begin;
@property UInt32 end;
@end

@implementation time_range_selector

- (BOOL) hasBegin {
  return !!hasBegin_;
}
- (void) setHasBegin:(BOOL) _value_ {
  hasBegin_ = !!_value_;
}
@synthesize begin;
- (BOOL) hasEnd {
  return !!hasEnd_;
}
- (void) setHasEnd:(BOOL) _value_ {
  hasEnd_ = !!_value_;
}
@synthesize end;
- (instancetype) init {
  if ((self = [super init])) {
    self.begin = 0;
    self.end = 0;
  }
  return self;
}
static time_range_selector* defaulttime_range_selectorInstance = nil;
+ (void) initialize {
  if (self == [time_range_selector class]) {
    defaulttime_range_selectorInstance = [[time_range_selector alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttime_range_selectorInstance;
}
- (instancetype) defaultInstance {
  return defaulttime_range_selectorInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBegin) {
    return NO;
  }
  if (!self.hasEnd) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBegin) {
    [output writeUInt32:1 value:self.begin];
  }
  if (self.hasEnd) {
    [output writeUInt32:2 value:self.end];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBegin) {
    size_ += computeUInt32Size(1, self.begin);
  }
  if (self.hasEnd) {
    size_ += computeUInt32Size(2, self.end);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (time_range_selector*) parseFromData:(NSData*) data {
  return (time_range_selector*)[[[time_range_selector builder] mergeFromData:data] build];
}
+ (time_range_selector*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (time_range_selector*)[[[time_range_selector builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (time_range_selector*) parseFromInputStream:(NSInputStream*) input {
  return (time_range_selector*)[[[time_range_selector builder] mergeFromInputStream:input] build];
}
+ (time_range_selector*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (time_range_selector*)[[[time_range_selector builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (time_range_selector*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (time_range_selector*)[[[time_range_selector builder] mergeFromCodedInputStream:input] build];
}
+ (time_range_selector*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (time_range_selector*)[[[time_range_selector builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (time_range_selectorBuilder*) builder {
  return [[time_range_selectorBuilder alloc] init];
}
+ (time_range_selectorBuilder*) builderWithPrototype:(time_range_selector*) prototype {
  return [[time_range_selector builder] mergeFrom:prototype];
}
- (time_range_selectorBuilder*) builder {
  return [time_range_selector builder];
}
- (time_range_selectorBuilder*) toBuilder {
  return [time_range_selector builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBegin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"begin", [NSNumber numberWithInteger:self.begin]];
  }
  if (self.hasEnd) {
    [output appendFormat:@"%@%@: %@\n", indent, @"end", [NSNumber numberWithInteger:self.end]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBegin) {
    [dictionary setObject: [NSNumber numberWithInteger:self.begin] forKey: @"begin"];
  }
  if (self.hasEnd) {
    [dictionary setObject: [NSNumber numberWithInteger:self.end] forKey: @"end"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[time_range_selector class]]) {
    return NO;
  }
  time_range_selector *otherMessage = other;
  return
      self.hasBegin == otherMessage.hasBegin &&
      (!self.hasBegin || self.begin == otherMessage.begin) &&
      self.hasEnd == otherMessage.hasEnd &&
      (!self.hasEnd || self.end == otherMessage.end) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBegin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.begin] hash];
  }
  if (self.hasEnd) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.end] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface time_range_selectorBuilder()
@property (strong) time_range_selector* resultTimeRangeSelector;
@end

@implementation time_range_selectorBuilder
@synthesize resultTimeRangeSelector;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTimeRangeSelector = [[time_range_selector alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTimeRangeSelector;
}
- (time_range_selectorBuilder*) clear {
  self.resultTimeRangeSelector = [[time_range_selector alloc] init];
  return self;
}
- (time_range_selectorBuilder*) clone {
  return [time_range_selector builderWithPrototype:resultTimeRangeSelector];
}
- (time_range_selector*) defaultInstance {
  return [time_range_selector defaultInstance];
}
- (time_range_selector*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (time_range_selector*) buildPartial {
  time_range_selector* returnMe = resultTimeRangeSelector;
  self.resultTimeRangeSelector = nil;
  return returnMe;
}
- (time_range_selectorBuilder*) mergeFrom:(time_range_selector*) other {
  if (other == [time_range_selector defaultInstance]) {
    return self;
  }
  if (other.hasBegin) {
    [self setBegin:other.begin];
  }
  if (other.hasEnd) {
    [self setEnd:other.end];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (time_range_selectorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (time_range_selectorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBegin:[input readUInt32]];
        break;
      }
      case 16: {
        [self setEnd:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBegin {
  return resultTimeRangeSelector.hasBegin;
}
- (UInt32) begin {
  return resultTimeRangeSelector.begin;
}
- (time_range_selectorBuilder*) setBegin:(UInt32) value {
  resultTimeRangeSelector.hasBegin = YES;
  resultTimeRangeSelector.begin = value;
  return self;
}
- (time_range_selectorBuilder*) clearBegin {
  resultTimeRangeSelector.hasBegin = NO;
  resultTimeRangeSelector.begin = 0;
  return self;
}
- (BOOL) hasEnd {
  return resultTimeRangeSelector.hasEnd;
}
- (UInt32) end {
  return resultTimeRangeSelector.end;
}
- (time_range_selectorBuilder*) setEnd:(UInt32) value {
  resultTimeRangeSelector.hasEnd = YES;
  resultTimeRangeSelector.end = value;
  return self;
}
- (time_range_selectorBuilder*) clearEnd {
  resultTimeRangeSelector.hasEnd = NO;
  resultTimeRangeSelector.end = 0;
  return self;
}
@end

@interface count_offset_selector ()
@property UInt32 offset;
@property SInt32 count;
@end

@implementation count_offset_selector

- (BOOL) hasOffset {
  return !!hasOffset_;
}
- (void) setHasOffset:(BOOL) _value_ {
  hasOffset_ = !!_value_;
}
@synthesize offset;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) _value_ {
  hasCount_ = !!_value_;
}
@synthesize count;
- (instancetype) init {
  if ((self = [super init])) {
    self.offset = 0;
    self.count = 0;
  }
  return self;
}
static count_offset_selector* defaultcount_offset_selectorInstance = nil;
+ (void) initialize {
  if (self == [count_offset_selector class]) {
    defaultcount_offset_selectorInstance = [[count_offset_selector alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultcount_offset_selectorInstance;
}
- (instancetype) defaultInstance {
  return defaultcount_offset_selectorInstance;
}
- (BOOL) isInitialized {
  if (!self.hasOffset) {
    return NO;
  }
  if (!self.hasCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOffset) {
    [output writeUInt32:1 value:self.offset];
  }
  if (self.hasCount) {
    [output writeInt32:2 value:self.count];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOffset) {
    size_ += computeUInt32Size(1, self.offset);
  }
  if (self.hasCount) {
    size_ += computeInt32Size(2, self.count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (count_offset_selector*) parseFromData:(NSData*) data {
  return (count_offset_selector*)[[[count_offset_selector builder] mergeFromData:data] build];
}
+ (count_offset_selector*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (count_offset_selector*)[[[count_offset_selector builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (count_offset_selector*) parseFromInputStream:(NSInputStream*) input {
  return (count_offset_selector*)[[[count_offset_selector builder] mergeFromInputStream:input] build];
}
+ (count_offset_selector*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (count_offset_selector*)[[[count_offset_selector builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (count_offset_selector*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (count_offset_selector*)[[[count_offset_selector builder] mergeFromCodedInputStream:input] build];
}
+ (count_offset_selector*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (count_offset_selector*)[[[count_offset_selector builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (count_offset_selectorBuilder*) builder {
  return [[count_offset_selectorBuilder alloc] init];
}
+ (count_offset_selectorBuilder*) builderWithPrototype:(count_offset_selector*) prototype {
  return [[count_offset_selector builder] mergeFrom:prototype];
}
- (count_offset_selectorBuilder*) builder {
  return [count_offset_selector builder];
}
- (count_offset_selectorBuilder*) toBuilder {
  return [count_offset_selector builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"offset", [NSNumber numberWithInteger:self.offset]];
  }
  if (self.hasCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"count", [NSNumber numberWithInteger:self.count]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasOffset) {
    [dictionary setObject: [NSNumber numberWithInteger:self.offset] forKey: @"offset"];
  }
  if (self.hasCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.count] forKey: @"count"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[count_offset_selector class]]) {
    return NO;
  }
  count_offset_selector *otherMessage = other;
  return
      self.hasOffset == otherMessage.hasOffset &&
      (!self.hasOffset || self.offset == otherMessage.offset) &&
      self.hasCount == otherMessage.hasCount &&
      (!self.hasCount || self.count == otherMessage.count) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.offset] hash];
  }
  if (self.hasCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.count] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface count_offset_selectorBuilder()
@property (strong) count_offset_selector* resultCountOffsetSelector;
@end

@implementation count_offset_selectorBuilder
@synthesize resultCountOffsetSelector;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCountOffsetSelector = [[count_offset_selector alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCountOffsetSelector;
}
- (count_offset_selectorBuilder*) clear {
  self.resultCountOffsetSelector = [[count_offset_selector alloc] init];
  return self;
}
- (count_offset_selectorBuilder*) clone {
  return [count_offset_selector builderWithPrototype:resultCountOffsetSelector];
}
- (count_offset_selector*) defaultInstance {
  return [count_offset_selector defaultInstance];
}
- (count_offset_selector*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (count_offset_selector*) buildPartial {
  count_offset_selector* returnMe = resultCountOffsetSelector;
  self.resultCountOffsetSelector = nil;
  return returnMe;
}
- (count_offset_selectorBuilder*) mergeFrom:(count_offset_selector*) other {
  if (other == [count_offset_selector defaultInstance]) {
    return self;
  }
  if (other.hasOffset) {
    [self setOffset:other.offset];
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (count_offset_selectorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (count_offset_selectorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setOffset:[input readUInt32]];
        break;
      }
      case 16: {
        [self setCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasOffset {
  return resultCountOffsetSelector.hasOffset;
}
- (UInt32) offset {
  return resultCountOffsetSelector.offset;
}
- (count_offset_selectorBuilder*) setOffset:(UInt32) value {
  resultCountOffsetSelector.hasOffset = YES;
  resultCountOffsetSelector.offset = value;
  return self;
}
- (count_offset_selectorBuilder*) clearOffset {
  resultCountOffsetSelector.hasOffset = NO;
  resultCountOffsetSelector.offset = 0;
  return self;
}
- (BOOL) hasCount {
  return resultCountOffsetSelector.hasCount;
}
- (SInt32) count {
  return resultCountOffsetSelector.count;
}
- (count_offset_selectorBuilder*) setCount:(SInt32) value {
  resultCountOffsetSelector.hasCount = YES;
  resultCountOffsetSelector.count = value;
  return self;
}
- (count_offset_selectorBuilder*) clearCount {
  resultCountOffsetSelector.hasCount = NO;
  resultCountOffsetSelector.count = 0;
  return self;
}
@end

@interface time_offset_selector ()
@property UInt32 originTime;
@property SInt32 count;
@end

@implementation time_offset_selector

- (BOOL) hasOriginTime {
  return !!hasOriginTime_;
}
- (void) setHasOriginTime:(BOOL) _value_ {
  hasOriginTime_ = !!_value_;
}
@synthesize originTime;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) _value_ {
  hasCount_ = !!_value_;
}
@synthesize count;
- (instancetype) init {
  if ((self = [super init])) {
    self.originTime = 0;
    self.count = 0;
  }
  return self;
}
static time_offset_selector* defaulttime_offset_selectorInstance = nil;
+ (void) initialize {
  if (self == [time_offset_selector class]) {
    defaulttime_offset_selectorInstance = [[time_offset_selector alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaulttime_offset_selectorInstance;
}
- (instancetype) defaultInstance {
  return defaulttime_offset_selectorInstance;
}
- (BOOL) isInitialized {
  if (!self.hasOriginTime) {
    return NO;
  }
  if (!self.hasCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOriginTime) {
    [output writeUInt32:1 value:self.originTime];
  }
  if (self.hasCount) {
    [output writeInt32:2 value:self.count];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOriginTime) {
    size_ += computeUInt32Size(1, self.originTime);
  }
  if (self.hasCount) {
    size_ += computeInt32Size(2, self.count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (time_offset_selector*) parseFromData:(NSData*) data {
  return (time_offset_selector*)[[[time_offset_selector builder] mergeFromData:data] build];
}
+ (time_offset_selector*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (time_offset_selector*)[[[time_offset_selector builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (time_offset_selector*) parseFromInputStream:(NSInputStream*) input {
  return (time_offset_selector*)[[[time_offset_selector builder] mergeFromInputStream:input] build];
}
+ (time_offset_selector*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (time_offset_selector*)[[[time_offset_selector builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (time_offset_selector*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (time_offset_selector*)[[[time_offset_selector builder] mergeFromCodedInputStream:input] build];
}
+ (time_offset_selector*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (time_offset_selector*)[[[time_offset_selector builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (time_offset_selectorBuilder*) builder {
  return [[time_offset_selectorBuilder alloc] init];
}
+ (time_offset_selectorBuilder*) builderWithPrototype:(time_offset_selector*) prototype {
  return [[time_offset_selector builder] mergeFrom:prototype];
}
- (time_offset_selectorBuilder*) builder {
  return [time_offset_selector builder];
}
- (time_offset_selectorBuilder*) toBuilder {
  return [time_offset_selector builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasOriginTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"originTime", [NSNumber numberWithInteger:self.originTime]];
  }
  if (self.hasCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"count", [NSNumber numberWithInteger:self.count]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasOriginTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.originTime] forKey: @"originTime"];
  }
  if (self.hasCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.count] forKey: @"count"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[time_offset_selector class]]) {
    return NO;
  }
  time_offset_selector *otherMessage = other;
  return
      self.hasOriginTime == otherMessage.hasOriginTime &&
      (!self.hasOriginTime || self.originTime == otherMessage.originTime) &&
      self.hasCount == otherMessage.hasCount &&
      (!self.hasCount || self.count == otherMessage.count) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasOriginTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.originTime] hash];
  }
  if (self.hasCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.count] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface time_offset_selectorBuilder()
@property (strong) time_offset_selector* resultTimeOffsetSelector;
@end

@implementation time_offset_selectorBuilder
@synthesize resultTimeOffsetSelector;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTimeOffsetSelector = [[time_offset_selector alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTimeOffsetSelector;
}
- (time_offset_selectorBuilder*) clear {
  self.resultTimeOffsetSelector = [[time_offset_selector alloc] init];
  return self;
}
- (time_offset_selectorBuilder*) clone {
  return [time_offset_selector builderWithPrototype:resultTimeOffsetSelector];
}
- (time_offset_selector*) defaultInstance {
  return [time_offset_selector defaultInstance];
}
- (time_offset_selector*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (time_offset_selector*) buildPartial {
  time_offset_selector* returnMe = resultTimeOffsetSelector;
  self.resultTimeOffsetSelector = nil;
  return returnMe;
}
- (time_offset_selectorBuilder*) mergeFrom:(time_offset_selector*) other {
  if (other == [time_offset_selector defaultInstance]) {
    return self;
  }
  if (other.hasOriginTime) {
    [self setOriginTime:other.originTime];
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (time_offset_selectorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (time_offset_selectorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setOriginTime:[input readUInt32]];
        break;
      }
      case 16: {
        [self setCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasOriginTime {
  return resultTimeOffsetSelector.hasOriginTime;
}
- (UInt32) originTime {
  return resultTimeOffsetSelector.originTime;
}
- (time_offset_selectorBuilder*) setOriginTime:(UInt32) value {
  resultTimeOffsetSelector.hasOriginTime = YES;
  resultTimeOffsetSelector.originTime = value;
  return self;
}
- (time_offset_selectorBuilder*) clearOriginTime {
  resultTimeOffsetSelector.hasOriginTime = NO;
  resultTimeOffsetSelector.originTime = 0;
  return self;
}
- (BOOL) hasCount {
  return resultTimeOffsetSelector.hasCount;
}
- (SInt32) count {
  return resultTimeOffsetSelector.count;
}
- (time_offset_selectorBuilder*) setCount:(SInt32) value {
  resultTimeOffsetSelector.hasCount = YES;
  resultTimeOffsetSelector.count = value;
  return self;
}
- (time_offset_selectorBuilder*) clearCount {
  resultTimeOffsetSelector.hasCount = NO;
  resultTimeOffsetSelector.count = 0;
  return self;
}
@end

@interface data_selector ()
@property UInt32 selectorType;
@property (strong) NSData* selector;
@end

@implementation data_selector

- (BOOL) hasSelectorType {
  return !!hasSelectorType_;
}
- (void) setHasSelectorType:(BOOL) _value_ {
  hasSelectorType_ = !!_value_;
}
@synthesize selectorType;
- (BOOL) hasSelector {
  return !!hasSelector_;
}
- (void) setHasSelector:(BOOL) _value_ {
  hasSelector_ = !!_value_;
}
@synthesize selector;
- (instancetype) init {
  if ((self = [super init])) {
    self.selectorType = 0;
    self.selector = [NSData data];
  }
  return self;
}
static data_selector* defaultdata_selectorInstance = nil;
+ (void) initialize {
  if (self == [data_selector class]) {
    defaultdata_selectorInstance = [[data_selector alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultdata_selectorInstance;
}
- (instancetype) defaultInstance {
  return defaultdata_selectorInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSelectorType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSelectorType) {
    [output writeUInt32:1 value:self.selectorType];
  }
  if (self.hasSelector) {
    [output writeData:2 value:self.selector];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSelectorType) {
    size_ += computeUInt32Size(1, self.selectorType);
  }
  if (self.hasSelector) {
    size_ += computeDataSize(2, self.selector);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (data_selector*) parseFromData:(NSData*) data {
  return (data_selector*)[[[data_selector builder] mergeFromData:data] build];
}
+ (data_selector*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (data_selector*)[[[data_selector builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (data_selector*) parseFromInputStream:(NSInputStream*) input {
  return (data_selector*)[[[data_selector builder] mergeFromInputStream:input] build];
}
+ (data_selector*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (data_selector*)[[[data_selector builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (data_selector*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (data_selector*)[[[data_selector builder] mergeFromCodedInputStream:input] build];
}
+ (data_selector*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (data_selector*)[[[data_selector builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (data_selectorBuilder*) builder {
  return [[data_selectorBuilder alloc] init];
}
+ (data_selectorBuilder*) builderWithPrototype:(data_selector*) prototype {
  return [[data_selector builder] mergeFrom:prototype];
}
- (data_selectorBuilder*) builder {
  return [data_selector builder];
}
- (data_selectorBuilder*) toBuilder {
  return [data_selector builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSelectorType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"selectorType", [NSNumber numberWithInteger:self.selectorType]];
  }
  if (self.hasSelector) {
    [output appendFormat:@"%@%@: %@\n", indent, @"selector", self.selector];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSelectorType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.selectorType] forKey: @"selectorType"];
  }
  if (self.hasSelector) {
    [dictionary setObject: self.selector forKey: @"selector"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[data_selector class]]) {
    return NO;
  }
  data_selector *otherMessage = other;
  return
      self.hasSelectorType == otherMessage.hasSelectorType &&
      (!self.hasSelectorType || self.selectorType == otherMessage.selectorType) &&
      self.hasSelector == otherMessage.hasSelector &&
      (!self.hasSelector || [self.selector isEqual:otherMessage.selector]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSelectorType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.selectorType] hash];
  }
  if (self.hasSelector) {
    hashCode = hashCode * 31 + [self.selector hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface data_selectorBuilder()
@property (strong) data_selector* resultDataSelector;
@end

@implementation data_selectorBuilder
@synthesize resultDataSelector;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDataSelector = [[data_selector alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDataSelector;
}
- (data_selectorBuilder*) clear {
  self.resultDataSelector = [[data_selector alloc] init];
  return self;
}
- (data_selectorBuilder*) clone {
  return [data_selector builderWithPrototype:resultDataSelector];
}
- (data_selector*) defaultInstance {
  return [data_selector defaultInstance];
}
- (data_selector*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (data_selector*) buildPartial {
  data_selector* returnMe = resultDataSelector;
  self.resultDataSelector = nil;
  return returnMe;
}
- (data_selectorBuilder*) mergeFrom:(data_selector*) other {
  if (other == [data_selector defaultInstance]) {
    return self;
  }
  if (other.hasSelectorType) {
    [self setSelectorType:other.selectorType];
  }
  if (other.hasSelector) {
    [self setSelector:other.selector];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (data_selectorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (data_selectorBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSelectorType:[input readUInt32]];
        break;
      }
      case 18: {
        [self setSelector:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasSelectorType {
  return resultDataSelector.hasSelectorType;
}
- (UInt32) selectorType {
  return resultDataSelector.selectorType;
}
- (data_selectorBuilder*) setSelectorType:(UInt32) value {
  resultDataSelector.hasSelectorType = YES;
  resultDataSelector.selectorType = value;
  return self;
}
- (data_selectorBuilder*) clearSelectorType {
  resultDataSelector.hasSelectorType = NO;
  resultDataSelector.selectorType = 0;
  return self;
}
- (BOOL) hasSelector {
  return resultDataSelector.hasSelector;
}
- (NSData*) selector {
  return resultDataSelector.selector;
}
- (data_selectorBuilder*) setSelector:(NSData*) value {
  resultDataSelector.hasSelector = YES;
  resultDataSelector.selector = value;
  return self;
}
- (data_selectorBuilder*) clearSelector {
  resultDataSelector.hasSelector = NO;
  resultDataSelector.selector = [NSData data];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
