// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Report.pb.h"
// @@protoc_insertion_point(imports)

@implementation ReportRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ReportRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CommonRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL report_data_cycleIsValidValue(report_data_cycle value) {
  switch (value) {
    case report_data_cycleReportDataCycleBegin:
    case report_data_cycleReportDataCycle1Min:
    case report_data_cycleReportDataCycle3Min:
    case report_data_cycleReportDataCycle5Min:
    case report_data_cycleReportDataCycle10Min:
    case report_data_cycleReportDataCycle15Min:
    case report_data_cycleReportDataCycle20Min:
    case report_data_cycleReportDataCycle30Min:
    case report_data_cycleReportDataCycle60Min:
    case report_data_cycleReportDataCycleDay:
    case report_data_cycleReportDataCycleWeek:
    case report_data_cycleReportDataCycleMonth:
    case report_data_cycleReportDataCycleQuarter:
    case report_data_cycleReportDataCycleYear:
    case report_data_cycleReportDataCycleEnd:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromreport_data_cycle(report_data_cycle value) {
  switch (value) {
    case report_data_cycleReportDataCycleBegin:
      return @"report_data_cycleReportDataCycleBegin";
    case report_data_cycleReportDataCycle1Min:
      return @"report_data_cycleReportDataCycle1Min";
    case report_data_cycleReportDataCycle3Min:
      return @"report_data_cycleReportDataCycle3Min";
    case report_data_cycleReportDataCycle5Min:
      return @"report_data_cycleReportDataCycle5Min";
    case report_data_cycleReportDataCycle10Min:
      return @"report_data_cycleReportDataCycle10Min";
    case report_data_cycleReportDataCycle15Min:
      return @"report_data_cycleReportDataCycle15Min";
    case report_data_cycleReportDataCycle20Min:
      return @"report_data_cycleReportDataCycle20Min";
    case report_data_cycleReportDataCycle30Min:
      return @"report_data_cycleReportDataCycle30Min";
    case report_data_cycleReportDataCycle60Min:
      return @"report_data_cycleReportDataCycle60Min";
    case report_data_cycleReportDataCycleDay:
      return @"report_data_cycleReportDataCycleDay";
    case report_data_cycleReportDataCycleWeek:
      return @"report_data_cycleReportDataCycleWeek";
    case report_data_cycleReportDataCycleMonth:
      return @"report_data_cycleReportDataCycleMonth";
    case report_data_cycleReportDataCycleQuarter:
      return @"report_data_cycleReportDataCycleQuarter";
    case report_data_cycleReportDataCycleYear:
      return @"report_data_cycleReportDataCycleYear";
    case report_data_cycleReportDataCycleEnd:
      return @"report_data_cycleReportDataCycleEnd";
    default:
      return nil;
  }
}

BOOL colum_typeIsValidValue(colum_type value) {
  switch (value) {
    case colum_typeColIndex:
    case colum_typeColStockCode:
    case colum_typeColStockName:
    case colum_typeColSuspended:
    case colum_typeColRiseScope:
    case colum_typeColLastClosePrice:
    case colum_typeColOpenPrice:
    case colum_typeColHighPrice:
    case colum_typeColLowPrice:
    case colum_typeColNewPrice:
    case colum_typeColVolume:
    case colum_typeColNowVol:
    case colum_typeColAmount:
    case colum_typeColAvePrice:
    case colum_typeColRise:
    case colum_typeColAmplitude:
    case colum_typeColCommitScale:
    case colum_typeColCommitDif:
    case colum_typeColVolumeScale:
    case colum_typeColCommitBuyVol:
    case colum_typeColCimmitSellVol:
    case colum_typeColCommitBuy:
    case colum_typeColCimmitSell:
    case colum_typeColRiseVol:
    case colum_typeColDropVol:
    case colum_typeColRiseSpeed:
    case colum_typeColCommitBuyVol1:
    case colum_typeColCommitBuyVol2:
    case colum_typeColCommitBuyVol3:
    case colum_typeColCommitBuyPrice1:
    case colum_typeColCommitBuyPrice2:
    case colum_typeColCommitBuyPrice3:
    case colum_typeColCommitSellVol1:
    case colum_typeColCommitSellVol2:
    case colum_typeColCommitSellVol3:
    case colum_typeColCommitSellPrice1:
    case colum_typeColCommitSellPrice2:
    case colum_typeColCommitSellPrice3:
    case colum_typeColTurnover:
    case colum_typeColDay5AveVol:
    case colum_typeColPe:
    case colum_typeColDay3RiseScope:
    case colum_typeColDay5RiseScope:
    case colum_typeColDay20RiseScope:
    case colum_typeColCommitBuyVol4:
    case colum_typeColCommitBuyPrice4:
    case colum_typeColCommitSellVol4:
    case colum_typeColCommitSellPrice4:
    case colum_typeColZgb:
    case colum_typeColGjg:
    case colum_typeColFqfrg:
    case colum_typeColFrg:
    case colum_typeColBg:
    case colum_typeColHg:
    case colum_typeColLtag:
    case colum_typeColZgg:
    case colum_typeColA2Zpg:
    case colum_typeColZzc:
    case colum_typeColLdzc:
    case colum_typeColGdzc:
    case colum_typeColWxzc:
    case colum_typeColCqtz:
    case colum_typeColLdfz:
    case colum_typeColCqfz:
    case colum_typeColZbgjj:
    case colum_typeColMggjj:
    case colum_typeColGdqy:
    case colum_typeColZysr:
    case colum_typeColZylr:
    case colum_typeColQtlr:
    case colum_typeColYylr:
    case colum_typeColTzsy:
    case colum_typeColBtsy:
    case colum_typeColYywsz:
    case colum_typeColSnsytz:
    case colum_typeColLrze:
    case colum_typeColShlr:
    case colum_typeColJlr:
    case colum_typeColWfplr:
    case colum_typeColMgwfp:
    case colum_typeColMgsy:
    case colum_typeColMgjzc:
    case colum_typeColTzmgjzc:
    case colum_typeColGdqyb:
    case colum_typeColJzsyl:
    case colum_typeColMin5RiseScope:
    case colum_typeColDay5Turnover:
    case colum_typeColDay20Turnover:
    case colum_typeColContribution:
    case colum_typeColLargeMidDealDif:
    case colum_typeColLargeDealScale:
    case colum_typeColMidDealScale:
    case colum_typeColSmallDealScale:
    case colum_typeColRelative:
    case colum_typeColLargeDealDif:
    case colum_typeColMidDealDif:
    case colum_typeColSmallDealDif:
    case colum_typeColLargeDealAdd:
    case colum_typeColHs300Contri:
    case colum_typeColHs300Min5Contri:
    case colum_typeColLargeMidScale:
    case colum_typeColAllDealDif:
    case colum_typeColD5LargeMidDif:
    case colum_typeColD10LargeMidDif:
    case colum_typeColD20LargeMidDif:
    case colum_typeColAllPtjz:
    case colum_typeColBlockPtjz:
    case colum_typeColAllCzx:
    case colum_typeColBlockCzx:
    case colum_typeColJbmpj:
    case colum_typeColRiseDropScale:
    case colum_typeColRiseMostInBlock:
    case colum_typeColBljc:
    case colum_typeColStockBlock:
    case colum_typeColFxj:
    case colum_typeColD3LargeMidDif:
    case colum_typeColDay3Turnover:
    case colum_typeColMonth3Turnover:
    case colum_typeColMonth6Turnover:
    case colum_typeColContinueRiseDay:
    case colum_typeColHigestPrice:
    case colum_typeColLowestPrice:
    case colum_typeColMonth3Rise:
    case colum_typeColMonth6Rise:
    case colum_typeColYear1Rise:
    case colum_typeColBljjDn:
    case colum_typeColJgkp:
    case colum_typeColYlw:
    case colum_typeColZcw:
    case colum_typeColDqqs:
    case colum_typeColLjphd:
    case colum_typeColJgpj:
    case colum_typeColBpoint:
    case colum_typeColSpoint:
    case colum_typeCol20HigestPrice:
    case colum_typeCol20LowestPrice:
    case colum_typeColRiseInBlock:
    case colum_typeColDropInBlock:
    case colum_typeColKeepInBlock:
    case colum_typeColBlsc:
    case colum_typeColXsmll:
    case colum_typeColXsjll:
    case colum_typeColMgxjll:
    case colum_typeColZysrzzl:
    case colum_typeColJlrzzl:
    case colum_typeColIfsts:
    case colum_typeColIfcc:
    case colum_typeColIfrzc:
    case colum_typeColIfzjsj:
    case colum_typeCol10DayRise:
    case colum_typeColDqqsdn:
    case colum_typeColDqqsbh:
    case colum_typeColZqqsdn:
    case colum_typeColZqqsbh:
    case colum_typeColFullName:
    case colum_typeColContractCode:
    case colum_typeColUnderlyingCode:
    case colum_typeColUnderlyingName:
    case colum_typeColExcercizePrice:
    case colum_typeColExcercizeDate:
    case colum_typeColOptionVol:
    case colum_typeColExcercizePriceSort:
    case colum_typeColPb:
    case colum_typeColEnd:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromcolum_type(colum_type value) {
  switch (value) {
    case colum_typeColIndex:
      return @"colum_typeColIndex";
    case colum_typeColStockCode:
      return @"colum_typeColStockCode";
    case colum_typeColStockName:
      return @"colum_typeColStockName";
    case colum_typeColSuspended:
      return @"colum_typeColSuspended";
    case colum_typeColRiseScope:
      return @"colum_typeColRiseScope";
    case colum_typeColLastClosePrice:
      return @"colum_typeColLastClosePrice";
    case colum_typeColOpenPrice:
      return @"colum_typeColOpenPrice";
    case colum_typeColHighPrice:
      return @"colum_typeColHighPrice";
    case colum_typeColLowPrice:
      return @"colum_typeColLowPrice";
    case colum_typeColNewPrice:
      return @"colum_typeColNewPrice";
    case colum_typeColVolume:
      return @"colum_typeColVolume";
    case colum_typeColNowVol:
      return @"colum_typeColNowVol";
    case colum_typeColAmount:
      return @"colum_typeColAmount";
    case colum_typeColAvePrice:
      return @"colum_typeColAvePrice";
    case colum_typeColRise:
      return @"colum_typeColRise";
    case colum_typeColAmplitude:
      return @"colum_typeColAmplitude";
    case colum_typeColCommitScale:
      return @"colum_typeColCommitScale";
    case colum_typeColCommitDif:
      return @"colum_typeColCommitDif";
    case colum_typeColVolumeScale:
      return @"colum_typeColVolumeScale";
    case colum_typeColCommitBuyVol:
      return @"colum_typeColCommitBuyVol";
    case colum_typeColCimmitSellVol:
      return @"colum_typeColCimmitSellVol";
    case colum_typeColCommitBuy:
      return @"colum_typeColCommitBuy";
    case colum_typeColCimmitSell:
      return @"colum_typeColCimmitSell";
    case colum_typeColRiseVol:
      return @"colum_typeColRiseVol";
    case colum_typeColDropVol:
      return @"colum_typeColDropVol";
    case colum_typeColRiseSpeed:
      return @"colum_typeColRiseSpeed";
    case colum_typeColCommitBuyVol1:
      return @"colum_typeColCommitBuyVol1";
    case colum_typeColCommitBuyVol2:
      return @"colum_typeColCommitBuyVol2";
    case colum_typeColCommitBuyVol3:
      return @"colum_typeColCommitBuyVol3";
    case colum_typeColCommitBuyPrice1:
      return @"colum_typeColCommitBuyPrice1";
    case colum_typeColCommitBuyPrice2:
      return @"colum_typeColCommitBuyPrice2";
    case colum_typeColCommitBuyPrice3:
      return @"colum_typeColCommitBuyPrice3";
    case colum_typeColCommitSellVol1:
      return @"colum_typeColCommitSellVol1";
    case colum_typeColCommitSellVol2:
      return @"colum_typeColCommitSellVol2";
    case colum_typeColCommitSellVol3:
      return @"colum_typeColCommitSellVol3";
    case colum_typeColCommitSellPrice1:
      return @"colum_typeColCommitSellPrice1";
    case colum_typeColCommitSellPrice2:
      return @"colum_typeColCommitSellPrice2";
    case colum_typeColCommitSellPrice3:
      return @"colum_typeColCommitSellPrice3";
    case colum_typeColTurnover:
      return @"colum_typeColTurnover";
    case colum_typeColDay5AveVol:
      return @"colum_typeColDay5AveVol";
    case colum_typeColPe:
      return @"colum_typeColPe";
    case colum_typeColDay3RiseScope:
      return @"colum_typeColDay3RiseScope";
    case colum_typeColDay5RiseScope:
      return @"colum_typeColDay5RiseScope";
    case colum_typeColDay20RiseScope:
      return @"colum_typeColDay20RiseScope";
    case colum_typeColCommitBuyVol4:
      return @"colum_typeColCommitBuyVol4";
    case colum_typeColCommitBuyPrice4:
      return @"colum_typeColCommitBuyPrice4";
    case colum_typeColCommitSellVol4:
      return @"colum_typeColCommitSellVol4";
    case colum_typeColCommitSellPrice4:
      return @"colum_typeColCommitSellPrice4";
    case colum_typeColZgb:
      return @"colum_typeColZgb";
    case colum_typeColGjg:
      return @"colum_typeColGjg";
    case colum_typeColFqfrg:
      return @"colum_typeColFqfrg";
    case colum_typeColFrg:
      return @"colum_typeColFrg";
    case colum_typeColBg:
      return @"colum_typeColBg";
    case colum_typeColHg:
      return @"colum_typeColHg";
    case colum_typeColLtag:
      return @"colum_typeColLtag";
    case colum_typeColZgg:
      return @"colum_typeColZgg";
    case colum_typeColA2Zpg:
      return @"colum_typeColA2Zpg";
    case colum_typeColZzc:
      return @"colum_typeColZzc";
    case colum_typeColLdzc:
      return @"colum_typeColLdzc";
    case colum_typeColGdzc:
      return @"colum_typeColGdzc";
    case colum_typeColWxzc:
      return @"colum_typeColWxzc";
    case colum_typeColCqtz:
      return @"colum_typeColCqtz";
    case colum_typeColLdfz:
      return @"colum_typeColLdfz";
    case colum_typeColCqfz:
      return @"colum_typeColCqfz";
    case colum_typeColZbgjj:
      return @"colum_typeColZbgjj";
    case colum_typeColMggjj:
      return @"colum_typeColMggjj";
    case colum_typeColGdqy:
      return @"colum_typeColGdqy";
    case colum_typeColZysr:
      return @"colum_typeColZysr";
    case colum_typeColZylr:
      return @"colum_typeColZylr";
    case colum_typeColQtlr:
      return @"colum_typeColQtlr";
    case colum_typeColYylr:
      return @"colum_typeColYylr";
    case colum_typeColTzsy:
      return @"colum_typeColTzsy";
    case colum_typeColBtsy:
      return @"colum_typeColBtsy";
    case colum_typeColYywsz:
      return @"colum_typeColYywsz";
    case colum_typeColSnsytz:
      return @"colum_typeColSnsytz";
    case colum_typeColLrze:
      return @"colum_typeColLrze";
    case colum_typeColShlr:
      return @"colum_typeColShlr";
    case colum_typeColJlr:
      return @"colum_typeColJlr";
    case colum_typeColWfplr:
      return @"colum_typeColWfplr";
    case colum_typeColMgwfp:
      return @"colum_typeColMgwfp";
    case colum_typeColMgsy:
      return @"colum_typeColMgsy";
    case colum_typeColMgjzc:
      return @"colum_typeColMgjzc";
    case colum_typeColTzmgjzc:
      return @"colum_typeColTzmgjzc";
    case colum_typeColGdqyb:
      return @"colum_typeColGdqyb";
    case colum_typeColJzsyl:
      return @"colum_typeColJzsyl";
    case colum_typeColMin5RiseScope:
      return @"colum_typeColMin5RiseScope";
    case colum_typeColDay5Turnover:
      return @"colum_typeColDay5Turnover";
    case colum_typeColDay20Turnover:
      return @"colum_typeColDay20Turnover";
    case colum_typeColContribution:
      return @"colum_typeColContribution";
    case colum_typeColLargeMidDealDif:
      return @"colum_typeColLargeMidDealDif";
    case colum_typeColLargeDealScale:
      return @"colum_typeColLargeDealScale";
    case colum_typeColMidDealScale:
      return @"colum_typeColMidDealScale";
    case colum_typeColSmallDealScale:
      return @"colum_typeColSmallDealScale";
    case colum_typeColRelative:
      return @"colum_typeColRelative";
    case colum_typeColLargeDealDif:
      return @"colum_typeColLargeDealDif";
    case colum_typeColMidDealDif:
      return @"colum_typeColMidDealDif";
    case colum_typeColSmallDealDif:
      return @"colum_typeColSmallDealDif";
    case colum_typeColLargeDealAdd:
      return @"colum_typeColLargeDealAdd";
    case colum_typeColHs300Contri:
      return @"colum_typeColHs300Contri";
    case colum_typeColHs300Min5Contri:
      return @"colum_typeColHs300Min5Contri";
    case colum_typeColLargeMidScale:
      return @"colum_typeColLargeMidScale";
    case colum_typeColAllDealDif:
      return @"colum_typeColAllDealDif";
    case colum_typeColD5LargeMidDif:
      return @"colum_typeColD5LargeMidDif";
    case colum_typeColD10LargeMidDif:
      return @"colum_typeColD10LargeMidDif";
    case colum_typeColD20LargeMidDif:
      return @"colum_typeColD20LargeMidDif";
    case colum_typeColAllPtjz:
      return @"colum_typeColAllPtjz";
    case colum_typeColBlockPtjz:
      return @"colum_typeColBlockPtjz";
    case colum_typeColAllCzx:
      return @"colum_typeColAllCzx";
    case colum_typeColBlockCzx:
      return @"colum_typeColBlockCzx";
    case colum_typeColJbmpj:
      return @"colum_typeColJbmpj";
    case colum_typeColRiseDropScale:
      return @"colum_typeColRiseDropScale";
    case colum_typeColRiseMostInBlock:
      return @"colum_typeColRiseMostInBlock";
    case colum_typeColBljc:
      return @"colum_typeColBljc";
    case colum_typeColStockBlock:
      return @"colum_typeColStockBlock";
    case colum_typeColFxj:
      return @"colum_typeColFxj";
    case colum_typeColD3LargeMidDif:
      return @"colum_typeColD3LargeMidDif";
    case colum_typeColDay3Turnover:
      return @"colum_typeColDay3Turnover";
    case colum_typeColMonth3Turnover:
      return @"colum_typeColMonth3Turnover";
    case colum_typeColMonth6Turnover:
      return @"colum_typeColMonth6Turnover";
    case colum_typeColContinueRiseDay:
      return @"colum_typeColContinueRiseDay";
    case colum_typeColHigestPrice:
      return @"colum_typeColHigestPrice";
    case colum_typeColLowestPrice:
      return @"colum_typeColLowestPrice";
    case colum_typeColMonth3Rise:
      return @"colum_typeColMonth3Rise";
    case colum_typeColMonth6Rise:
      return @"colum_typeColMonth6Rise";
    case colum_typeColYear1Rise:
      return @"colum_typeColYear1Rise";
    case colum_typeColBljjDn:
      return @"colum_typeColBljjDn";
    case colum_typeColJgkp:
      return @"colum_typeColJgkp";
    case colum_typeColYlw:
      return @"colum_typeColYlw";
    case colum_typeColZcw:
      return @"colum_typeColZcw";
    case colum_typeColDqqs:
      return @"colum_typeColDqqs";
    case colum_typeColLjphd:
      return @"colum_typeColLjphd";
    case colum_typeColJgpj:
      return @"colum_typeColJgpj";
    case colum_typeColBpoint:
      return @"colum_typeColBpoint";
    case colum_typeColSpoint:
      return @"colum_typeColSpoint";
    case colum_typeCol20HigestPrice:
      return @"colum_typeCol20HigestPrice";
    case colum_typeCol20LowestPrice:
      return @"colum_typeCol20LowestPrice";
    case colum_typeColRiseInBlock:
      return @"colum_typeColRiseInBlock";
    case colum_typeColDropInBlock:
      return @"colum_typeColDropInBlock";
    case colum_typeColKeepInBlock:
      return @"colum_typeColKeepInBlock";
    case colum_typeColBlsc:
      return @"colum_typeColBlsc";
    case colum_typeColXsmll:
      return @"colum_typeColXsmll";
    case colum_typeColXsjll:
      return @"colum_typeColXsjll";
    case colum_typeColMgxjll:
      return @"colum_typeColMgxjll";
    case colum_typeColZysrzzl:
      return @"colum_typeColZysrzzl";
    case colum_typeColJlrzzl:
      return @"colum_typeColJlrzzl";
    case colum_typeColIfsts:
      return @"colum_typeColIfsts";
    case colum_typeColIfcc:
      return @"colum_typeColIfcc";
    case colum_typeColIfrzc:
      return @"colum_typeColIfrzc";
    case colum_typeColIfzjsj:
      return @"colum_typeColIfzjsj";
    case colum_typeCol10DayRise:
      return @"colum_typeCol10DayRise";
    case colum_typeColDqqsdn:
      return @"colum_typeColDqqsdn";
    case colum_typeColDqqsbh:
      return @"colum_typeColDqqsbh";
    case colum_typeColZqqsdn:
      return @"colum_typeColZqqsdn";
    case colum_typeColZqqsbh:
      return @"colum_typeColZqqsbh";
    case colum_typeColFullName:
      return @"colum_typeColFullName";
    case colum_typeColContractCode:
      return @"colum_typeColContractCode";
    case colum_typeColUnderlyingCode:
      return @"colum_typeColUnderlyingCode";
    case colum_typeColUnderlyingName:
      return @"colum_typeColUnderlyingName";
    case colum_typeColExcercizePrice:
      return @"colum_typeColExcercizePrice";
    case colum_typeColExcercizeDate:
      return @"colum_typeColExcercizeDate";
    case colum_typeColOptionVol:
      return @"colum_typeColOptionVol";
    case colum_typeColExcercizePriceSort:
      return @"colum_typeColExcercizePriceSort";
    case colum_typeColPb:
      return @"colum_typeColPb";
    case colum_typeColEnd:
      return @"colum_typeColEnd";
    default:
      return nil;
  }
}

@interface report_msg ()
@property (strong) NSMutableArray * codeArray;
@end

@implementation report_msg

@synthesize codeArray;
@dynamic code;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static report_msg* defaultreport_msgInstance = nil;
+ (void) initialize {
  if (self == [report_msg class]) {
    defaultreport_msgInstance = [[report_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultreport_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultreport_msgInstance;
}
- (NSArray *)code {
  return codeArray;
}
- (NSString*)codeAtIndex:(NSUInteger)index {
  return [codeArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.codeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.codeArray.count;
    [self.codeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (report_msg*) parseFromData:(NSData*) data {
  return (report_msg*)[[[report_msg builder] mergeFromData:data] build];
}
+ (report_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (report_msg*)[[[report_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (report_msg*) parseFromInputStream:(NSInputStream*) input {
  return (report_msg*)[[[report_msg builder] mergeFromInputStream:input] build];
}
+ (report_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (report_msg*)[[[report_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (report_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (report_msg*)[[[report_msg builder] mergeFromCodedInputStream:input] build];
}
+ (report_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (report_msg*)[[[report_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (report_msgBuilder*) builder {
  return [[report_msgBuilder alloc] init];
}
+ (report_msgBuilder*) builderWithPrototype:(report_msg*) prototype {
  return [[report_msg builder] mergeFrom:prototype];
}
- (report_msgBuilder*) builder {
  return [report_msg builder];
}
- (report_msgBuilder*) toBuilder {
  return [report_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.codeArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [dictionary setObject:self.code forKey: @"code"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[report_msg class]]) {
    return NO;
  }
  report_msg *otherMessage = other;
  return
      [self.codeArray isEqualToArray:otherMessage.codeArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.codeArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface report_msgBuilder()
@property (strong) report_msg* resultReportMsg;
@end

@implementation report_msgBuilder
@synthesize resultReportMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReportMsg = [[report_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReportMsg;
}
- (report_msgBuilder*) clear {
  self.resultReportMsg = [[report_msg alloc] init];
  return self;
}
- (report_msgBuilder*) clone {
  return [report_msg builderWithPrototype:resultReportMsg];
}
- (report_msg*) defaultInstance {
  return [report_msg defaultInstance];
}
- (report_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (report_msg*) buildPartial {
  report_msg* returnMe = resultReportMsg;
  self.resultReportMsg = nil;
  return returnMe;
}
- (report_msgBuilder*) mergeFrom:(report_msg*) other {
  if (other == [report_msg defaultInstance]) {
    return self;
  }
  if (other.codeArray.count > 0) {
    if (resultReportMsg.codeArray == nil) {
      resultReportMsg.codeArray = [[NSMutableArray alloc] initWithArray:other.codeArray];
    } else {
      [resultReportMsg.codeArray addObjectsFromArray:other.codeArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (report_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (report_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addCode:[input readString]];
        break;
      }
    }
  }
}
- (NSMutableArray *)code {
  return resultReportMsg.codeArray;
}
- (NSString*)codeAtIndex:(NSUInteger)index {
  return [resultReportMsg codeAtIndex:index];
}
- (report_msgBuilder *)addCode:(NSString*)value {
  if (resultReportMsg.codeArray == nil) {
    resultReportMsg.codeArray = [[NSMutableArray alloc]init];
  }
  [resultReportMsg.codeArray addObject:value];
  return self;
}
- (report_msgBuilder *)setCodeArray:(NSArray *)array {
  resultReportMsg.codeArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (report_msgBuilder *)clearCode {
  resultReportMsg.codeArray = nil;
  return self;
}
@end

@interface s_report_result_msg ()
@property (strong) NSString* code;
@property (strong) NSString* name;
@property UInt32 time;
@property Float64 lastClose;
@property Float64 pb_new;
@property Float64 open;
@property Float64 high;
@property Float64 low;
@property Float64 vol;
@property Float64 amount;
@property Float64 fiveDayAvevol;
@property (strong) PBAppendableArray * selPriceArray;
@property (strong) PBAppendableArray * selVolArray;
@property (strong) PBAppendableArray * buyPriceArray;
@property (strong) PBAppendableArray * buyVolArray;
@property Float64 pe;
@property Float64 hhjcap;
@property Float64 riseVol;
@property Float64 dropVol;
@property Float64 hsl;
@property Float64 zgb;
@property Float64 mgjzc;
@property Float64 mgsy;
@end

@implementation s_report_result_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasLastClose {
  return !!hasLastClose_;
}
- (void) setHasLastClose:(BOOL) _value_ {
  hasLastClose_ = !!_value_;
}
@synthesize lastClose;
- (BOOL) hasPbNew {
  return !!hasPbNew_;
}
- (void) setHasPbNew:(BOOL) _value_ {
  hasPbNew_ = !!_value_;
}
@synthesize pb_new;
- (BOOL) hasOpen {
  return !!hasOpen_;
}
- (void) setHasOpen:(BOOL) _value_ {
  hasOpen_ = !!_value_;
}
@synthesize open;
- (BOOL) hasHigh {
  return !!hasHigh_;
}
- (void) setHasHigh:(BOOL) _value_ {
  hasHigh_ = !!_value_;
}
@synthesize high;
- (BOOL) hasLow {
  return !!hasLow_;
}
- (void) setHasLow:(BOOL) _value_ {
  hasLow_ = !!_value_;
}
@synthesize low;
- (BOOL) hasVol {
  return !!hasVol_;
}
- (void) setHasVol:(BOOL) _value_ {
  hasVol_ = !!_value_;
}
@synthesize vol;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) _value_ {
  hasAmount_ = !!_value_;
}
@synthesize amount;
- (BOOL) hasFiveDayAvevol {
  return !!hasFiveDayAvevol_;
}
- (void) setHasFiveDayAvevol:(BOOL) _value_ {
  hasFiveDayAvevol_ = !!_value_;
}
@synthesize fiveDayAvevol;
@synthesize selPriceArray;
@dynamic selPrice;
@synthesize selVolArray;
@dynamic selVol;
@synthesize buyPriceArray;
@dynamic buyPrice;
@synthesize buyVolArray;
@dynamic buyVol;
- (BOOL) hasPe {
  return !!hasPe_;
}
- (void) setHasPe:(BOOL) _value_ {
  hasPe_ = !!_value_;
}
@synthesize pe;
- (BOOL) hasHhjcap {
  return !!hasHhjcap_;
}
- (void) setHasHhjcap:(BOOL) _value_ {
  hasHhjcap_ = !!_value_;
}
@synthesize hhjcap;
- (BOOL) hasRiseVol {
  return !!hasRiseVol_;
}
- (void) setHasRiseVol:(BOOL) _value_ {
  hasRiseVol_ = !!_value_;
}
@synthesize riseVol;
- (BOOL) hasDropVol {
  return !!hasDropVol_;
}
- (void) setHasDropVol:(BOOL) _value_ {
  hasDropVol_ = !!_value_;
}
@synthesize dropVol;
- (BOOL) hasHsl {
  return !!hasHsl_;
}
- (void) setHasHsl:(BOOL) _value_ {
  hasHsl_ = !!_value_;
}
@synthesize hsl;
- (BOOL) hasZgb {
  return !!hasZgb_;
}
- (void) setHasZgb:(BOOL) _value_ {
  hasZgb_ = !!_value_;
}
@synthesize zgb;
- (BOOL) hasMgjzc {
  return !!hasMgjzc_;
}
- (void) setHasMgjzc:(BOOL) _value_ {
  hasMgjzc_ = !!_value_;
}
@synthesize mgjzc;
- (BOOL) hasMgsy {
  return !!hasMgsy_;
}
- (void) setHasMgsy:(BOOL) _value_ {
  hasMgsy_ = !!_value_;
}
@synthesize mgsy;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.name = @"";
    self.time = 0;
    self.lastClose = 0;
    self.pb_new = 0;
    self.open = 0;
    self.high = 0;
    self.low = 0;
    self.vol = 0;
    self.amount = 0;
    self.fiveDayAvevol = 0;
    self.pe = 0;
    self.hhjcap = 0;
    self.riseVol = 0;
    self.dropVol = 0;
    self.hsl = 0;
    self.zgb = 0;
    self.mgjzc = 0;
    self.mgsy = 0;
  }
  return self;
}
static s_report_result_msg* defaults_report_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_report_result_msg class]) {
    defaults_report_result_msgInstance = [[s_report_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_report_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_report_result_msgInstance;
}
- (PBArray *)selPrice {
  return selPriceArray;
}
- (Float64)selPriceAtIndex:(NSUInteger)index {
  return [selPriceArray doubleAtIndex:index];
}
- (PBArray *)selVol {
  return selVolArray;
}
- (Float64)selVolAtIndex:(NSUInteger)index {
  return [selVolArray doubleAtIndex:index];
}
- (PBArray *)buyPrice {
  return buyPriceArray;
}
- (Float64)buyPriceAtIndex:(NSUInteger)index {
  return [buyPriceArray doubleAtIndex:index];
}
- (PBArray *)buyVol {
  return buyVolArray;
}
- (Float64)buyVolAtIndex:(NSUInteger)index {
  return [buyVolArray doubleAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasTime) {
    return NO;
  }
  if (!self.hasLastClose) {
    return NO;
  }
  if (!self.hasPbNew) {
    return NO;
  }
  if (!self.hasOpen) {
    return NO;
  }
  if (!self.hasHigh) {
    return NO;
  }
  if (!self.hasLow) {
    return NO;
  }
  if (!self.hasVol) {
    return NO;
  }
  if (!self.hasAmount) {
    return NO;
  }
  if (!self.hasFiveDayAvevol) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasTime) {
    [output writeUInt32:3 value:self.time];
  }
  if (self.hasLastClose) {
    [output writeDouble:4 value:self.lastClose];
  }
  if (self.hasPbNew) {
    [output writeDouble:5 value:self.pb_new];
  }
  if (self.hasOpen) {
    [output writeDouble:6 value:self.open];
  }
  if (self.hasHigh) {
    [output writeDouble:7 value:self.high];
  }
  if (self.hasLow) {
    [output writeDouble:8 value:self.low];
  }
  if (self.hasVol) {
    [output writeDouble:9 value:self.vol];
  }
  if (self.hasAmount) {
    [output writeDouble:10 value:self.amount];
  }
  if (self.hasFiveDayAvevol) {
    [output writeDouble:11 value:self.fiveDayAvevol];
  }
  const NSUInteger selPriceArrayCount = self.selPriceArray.count;
  if (selPriceArrayCount > 0) {
    const Float64 *values = (const Float64 *)self.selPriceArray.data;
    for (NSUInteger i = 0; i < selPriceArrayCount; ++i) {
      [output writeDouble:12 value:values[i]];
    }
  }
  const NSUInteger selVolArrayCount = self.selVolArray.count;
  if (selVolArrayCount > 0) {
    const Float64 *values = (const Float64 *)self.selVolArray.data;
    for (NSUInteger i = 0; i < selVolArrayCount; ++i) {
      [output writeDouble:13 value:values[i]];
    }
  }
  const NSUInteger buyPriceArrayCount = self.buyPriceArray.count;
  if (buyPriceArrayCount > 0) {
    const Float64 *values = (const Float64 *)self.buyPriceArray.data;
    for (NSUInteger i = 0; i < buyPriceArrayCount; ++i) {
      [output writeDouble:14 value:values[i]];
    }
  }
  const NSUInteger buyVolArrayCount = self.buyVolArray.count;
  if (buyVolArrayCount > 0) {
    const Float64 *values = (const Float64 *)self.buyVolArray.data;
    for (NSUInteger i = 0; i < buyVolArrayCount; ++i) {
      [output writeDouble:15 value:values[i]];
    }
  }
  if (self.hasPe) {
    [output writeDouble:16 value:self.pe];
  }
  if (self.hasHhjcap) {
    [output writeDouble:19 value:self.hhjcap];
  }
  if (self.hasRiseVol) {
    [output writeDouble:20 value:self.riseVol];
  }
  if (self.hasDropVol) {
    [output writeDouble:21 value:self.dropVol];
  }
  if (self.hasHsl) {
    [output writeDouble:22 value:self.hsl];
  }
  if (self.hasZgb) {
    [output writeDouble:23 value:self.zgb];
  }
  if (self.hasMgjzc) {
    [output writeDouble:24 value:self.mgjzc];
  }
  if (self.hasMgsy) {
    [output writeDouble:25 value:self.mgsy];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasTime) {
    size_ += computeUInt32Size(3, self.time);
  }
  if (self.hasLastClose) {
    size_ += computeDoubleSize(4, self.lastClose);
  }
  if (self.hasPbNew) {
    size_ += computeDoubleSize(5, self.pb_new);
  }
  if (self.hasOpen) {
    size_ += computeDoubleSize(6, self.open);
  }
  if (self.hasHigh) {
    size_ += computeDoubleSize(7, self.high);
  }
  if (self.hasLow) {
    size_ += computeDoubleSize(8, self.low);
  }
  if (self.hasVol) {
    size_ += computeDoubleSize(9, self.vol);
  }
  if (self.hasAmount) {
    size_ += computeDoubleSize(10, self.amount);
  }
  if (self.hasFiveDayAvevol) {
    size_ += computeDoubleSize(11, self.fiveDayAvevol);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.selPriceArray.count;
    dataSize = (SInt32)(8 * count);
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.selVolArray.count;
    dataSize = (SInt32)(8 * count);
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.buyPriceArray.count;
    dataSize = (SInt32)(8 * count);
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.buyVolArray.count;
    dataSize = (SInt32)(8 * count);
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasPe) {
    size_ += computeDoubleSize(16, self.pe);
  }
  if (self.hasHhjcap) {
    size_ += computeDoubleSize(19, self.hhjcap);
  }
  if (self.hasRiseVol) {
    size_ += computeDoubleSize(20, self.riseVol);
  }
  if (self.hasDropVol) {
    size_ += computeDoubleSize(21, self.dropVol);
  }
  if (self.hasHsl) {
    size_ += computeDoubleSize(22, self.hsl);
  }
  if (self.hasZgb) {
    size_ += computeDoubleSize(23, self.zgb);
  }
  if (self.hasMgjzc) {
    size_ += computeDoubleSize(24, self.mgjzc);
  }
  if (self.hasMgsy) {
    size_ += computeDoubleSize(25, self.mgsy);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_report_result_msg*) parseFromData:(NSData*) data {
  return (s_report_result_msg*)[[[s_report_result_msg builder] mergeFromData:data] build];
}
+ (s_report_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_report_result_msg*)[[[s_report_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_report_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_report_result_msg*)[[[s_report_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_report_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_report_result_msg*)[[[s_report_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_report_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_report_result_msg*)[[[s_report_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_report_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_report_result_msg*)[[[s_report_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_report_result_msgBuilder*) builder {
  return [[s_report_result_msgBuilder alloc] init];
}
+ (s_report_result_msgBuilder*) builderWithPrototype:(s_report_result_msg*) prototype {
  return [[s_report_result_msg builder] mergeFrom:prototype];
}
- (s_report_result_msgBuilder*) builder {
  return [s_report_result_msg builder];
}
- (s_report_result_msgBuilder*) toBuilder {
  return [s_report_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  if (self.hasLastClose) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastClose", [NSNumber numberWithDouble:self.lastClose]];
  }
  if (self.hasPbNew) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_new", [NSNumber numberWithDouble:self.pb_new]];
  }
  if (self.hasOpen) {
    [output appendFormat:@"%@%@: %@\n", indent, @"open", [NSNumber numberWithDouble:self.open]];
  }
  if (self.hasHigh) {
    [output appendFormat:@"%@%@: %@\n", indent, @"high", [NSNumber numberWithDouble:self.high]];
  }
  if (self.hasLow) {
    [output appendFormat:@"%@%@: %@\n", indent, @"low", [NSNumber numberWithDouble:self.low]];
  }
  if (self.hasVol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vol", [NSNumber numberWithDouble:self.vol]];
  }
  if (self.hasAmount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"amount", [NSNumber numberWithDouble:self.amount]];
  }
  if (self.hasFiveDayAvevol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fiveDayAvevol", [NSNumber numberWithDouble:self.fiveDayAvevol]];
  }
  [self.selPriceArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"selPrice", obj];
  }];
  [self.selVolArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"selVol", obj];
  }];
  [self.buyPriceArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buyPrice", obj];
  }];
  [self.buyVolArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buyVol", obj];
  }];
  if (self.hasPe) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pe", [NSNumber numberWithDouble:self.pe]];
  }
  if (self.hasHhjcap) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hhjcap", [NSNumber numberWithDouble:self.hhjcap]];
  }
  if (self.hasRiseVol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"riseVol", [NSNumber numberWithDouble:self.riseVol]];
  }
  if (self.hasDropVol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dropVol", [NSNumber numberWithDouble:self.dropVol]];
  }
  if (self.hasHsl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hsl", [NSNumber numberWithDouble:self.hsl]];
  }
  if (self.hasZgb) {
    [output appendFormat:@"%@%@: %@\n", indent, @"zgb", [NSNumber numberWithDouble:self.zgb]];
  }
  if (self.hasMgjzc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mgjzc", [NSNumber numberWithDouble:self.mgjzc]];
  }
  if (self.hasMgsy) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mgsy", [NSNumber numberWithDouble:self.mgsy]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  if (self.hasLastClose) {
    [dictionary setObject: [NSNumber numberWithDouble:self.lastClose] forKey: @"lastClose"];
  }
  if (self.hasPbNew) {
    [dictionary setObject: [NSNumber numberWithDouble:self.pb_new] forKey: @"pb_new"];
  }
  if (self.hasOpen) {
    [dictionary setObject: [NSNumber numberWithDouble:self.open] forKey: @"open"];
  }
  if (self.hasHigh) {
    [dictionary setObject: [NSNumber numberWithDouble:self.high] forKey: @"high"];
  }
  if (self.hasLow) {
    [dictionary setObject: [NSNumber numberWithDouble:self.low] forKey: @"low"];
  }
  if (self.hasVol) {
    [dictionary setObject: [NSNumber numberWithDouble:self.vol] forKey: @"vol"];
  }
  if (self.hasAmount) {
    [dictionary setObject: [NSNumber numberWithDouble:self.amount] forKey: @"amount"];
  }
  if (self.hasFiveDayAvevol) {
    [dictionary setObject: [NSNumber numberWithDouble:self.fiveDayAvevol] forKey: @"fiveDayAvevol"];
  }
  NSMutableArray * selPriceArrayArray = [NSMutableArray new];
  NSUInteger selPriceArrayCount=self.selPriceArray.count;
  for(int i=0;i<selPriceArrayCount;i++){
    [selPriceArrayArray addObject: @([self.selPriceArray doubleAtIndex:i])];
  }
  [dictionary setObject: selPriceArrayArray forKey: @"selPrice"];
  NSMutableArray * selVolArrayArray = [NSMutableArray new];
  NSUInteger selVolArrayCount=self.selVolArray.count;
  for(int i=0;i<selVolArrayCount;i++){
    [selVolArrayArray addObject: @([self.selVolArray doubleAtIndex:i])];
  }
  [dictionary setObject: selVolArrayArray forKey: @"selVol"];
  NSMutableArray * buyPriceArrayArray = [NSMutableArray new];
  NSUInteger buyPriceArrayCount=self.buyPriceArray.count;
  for(int i=0;i<buyPriceArrayCount;i++){
    [buyPriceArrayArray addObject: @([self.buyPriceArray doubleAtIndex:i])];
  }
  [dictionary setObject: buyPriceArrayArray forKey: @"buyPrice"];
  NSMutableArray * buyVolArrayArray = [NSMutableArray new];
  NSUInteger buyVolArrayCount=self.buyVolArray.count;
  for(int i=0;i<buyVolArrayCount;i++){
    [buyVolArrayArray addObject: @([self.buyVolArray doubleAtIndex:i])];
  }
  [dictionary setObject: buyVolArrayArray forKey: @"buyVol"];
  if (self.hasPe) {
    [dictionary setObject: [NSNumber numberWithDouble:self.pe] forKey: @"pe"];
  }
  if (self.hasHhjcap) {
    [dictionary setObject: [NSNumber numberWithDouble:self.hhjcap] forKey: @"hhjcap"];
  }
  if (self.hasRiseVol) {
    [dictionary setObject: [NSNumber numberWithDouble:self.riseVol] forKey: @"riseVol"];
  }
  if (self.hasDropVol) {
    [dictionary setObject: [NSNumber numberWithDouble:self.dropVol] forKey: @"dropVol"];
  }
  if (self.hasHsl) {
    [dictionary setObject: [NSNumber numberWithDouble:self.hsl] forKey: @"hsl"];
  }
  if (self.hasZgb) {
    [dictionary setObject: [NSNumber numberWithDouble:self.zgb] forKey: @"zgb"];
  }
  if (self.hasMgjzc) {
    [dictionary setObject: [NSNumber numberWithDouble:self.mgjzc] forKey: @"mgjzc"];
  }
  if (self.hasMgsy) {
    [dictionary setObject: [NSNumber numberWithDouble:self.mgsy] forKey: @"mgsy"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_report_result_msg class]]) {
    return NO;
  }
  s_report_result_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasLastClose == otherMessage.hasLastClose &&
      (!self.hasLastClose || self.lastClose == otherMessage.lastClose) &&
      self.hasPbNew == otherMessage.hasPbNew &&
      (!self.hasPbNew || self.pb_new == otherMessage.pb_new) &&
      self.hasOpen == otherMessage.hasOpen &&
      (!self.hasOpen || self.open == otherMessage.open) &&
      self.hasHigh == otherMessage.hasHigh &&
      (!self.hasHigh || self.high == otherMessage.high) &&
      self.hasLow == otherMessage.hasLow &&
      (!self.hasLow || self.low == otherMessage.low) &&
      self.hasVol == otherMessage.hasVol &&
      (!self.hasVol || self.vol == otherMessage.vol) &&
      self.hasAmount == otherMessage.hasAmount &&
      (!self.hasAmount || self.amount == otherMessage.amount) &&
      self.hasFiveDayAvevol == otherMessage.hasFiveDayAvevol &&
      (!self.hasFiveDayAvevol || self.fiveDayAvevol == otherMessage.fiveDayAvevol) &&
      [self.selPriceArray isEqualToArray:otherMessage.selPriceArray] &&
      [self.selVolArray isEqualToArray:otherMessage.selVolArray] &&
      [self.buyPriceArray isEqualToArray:otherMessage.buyPriceArray] &&
      [self.buyVolArray isEqualToArray:otherMessage.buyVolArray] &&
      self.hasPe == otherMessage.hasPe &&
      (!self.hasPe || self.pe == otherMessage.pe) &&
      self.hasHhjcap == otherMessage.hasHhjcap &&
      (!self.hasHhjcap || self.hhjcap == otherMessage.hhjcap) &&
      self.hasRiseVol == otherMessage.hasRiseVol &&
      (!self.hasRiseVol || self.riseVol == otherMessage.riseVol) &&
      self.hasDropVol == otherMessage.hasDropVol &&
      (!self.hasDropVol || self.dropVol == otherMessage.dropVol) &&
      self.hasHsl == otherMessage.hasHsl &&
      (!self.hasHsl || self.hsl == otherMessage.hsl) &&
      self.hasZgb == otherMessage.hasZgb &&
      (!self.hasZgb || self.zgb == otherMessage.zgb) &&
      self.hasMgjzc == otherMessage.hasMgjzc &&
      (!self.hasMgjzc || self.mgjzc == otherMessage.mgjzc) &&
      self.hasMgsy == otherMessage.hasMgsy &&
      (!self.hasMgsy || self.mgsy == otherMessage.mgsy) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  if (self.hasLastClose) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.lastClose] hash];
  }
  if (self.hasPbNew) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.pb_new] hash];
  }
  if (self.hasOpen) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.open] hash];
  }
  if (self.hasHigh) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.high] hash];
  }
  if (self.hasLow) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.low] hash];
  }
  if (self.hasVol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.vol] hash];
  }
  if (self.hasAmount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.amount] hash];
  }
  if (self.hasFiveDayAvevol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.fiveDayAvevol] hash];
  }
  [self.selPriceArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.selVolArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.buyPriceArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.buyVolArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasPe) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.pe] hash];
  }
  if (self.hasHhjcap) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.hhjcap] hash];
  }
  if (self.hasRiseVol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.riseVol] hash];
  }
  if (self.hasDropVol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.dropVol] hash];
  }
  if (self.hasHsl) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.hsl] hash];
  }
  if (self.hasZgb) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.zgb] hash];
  }
  if (self.hasMgjzc) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.mgjzc] hash];
  }
  if (self.hasMgsy) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.mgsy] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_report_result_msgBuilder()
@property (strong) s_report_result_msg* resultSReportResultMsg;
@end

@implementation s_report_result_msgBuilder
@synthesize resultSReportResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSReportResultMsg = [[s_report_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSReportResultMsg;
}
- (s_report_result_msgBuilder*) clear {
  self.resultSReportResultMsg = [[s_report_result_msg alloc] init];
  return self;
}
- (s_report_result_msgBuilder*) clone {
  return [s_report_result_msg builderWithPrototype:resultSReportResultMsg];
}
- (s_report_result_msg*) defaultInstance {
  return [s_report_result_msg defaultInstance];
}
- (s_report_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_report_result_msg*) buildPartial {
  s_report_result_msg* returnMe = resultSReportResultMsg;
  self.resultSReportResultMsg = nil;
  return returnMe;
}
- (s_report_result_msgBuilder*) mergeFrom:(s_report_result_msg*) other {
  if (other == [s_report_result_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasLastClose) {
    [self setLastClose:other.lastClose];
  }
  if (other.hasPbNew) {
    [self setPbNew:other.pb_new];
  }
  if (other.hasOpen) {
    [self setOpen:other.open];
  }
  if (other.hasHigh) {
    [self setHigh:other.high];
  }
  if (other.hasLow) {
    [self setLow:other.low];
  }
  if (other.hasVol) {
    [self setVol:other.vol];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  if (other.hasFiveDayAvevol) {
    [self setFiveDayAvevol:other.fiveDayAvevol];
  }
  if (other.selPriceArray.count > 0) {
    if (resultSReportResultMsg.selPriceArray == nil) {
      resultSReportResultMsg.selPriceArray = [other.selPriceArray copy];
    } else {
      [resultSReportResultMsg.selPriceArray appendArray:other.selPriceArray];
    }
  }
  if (other.selVolArray.count > 0) {
    if (resultSReportResultMsg.selVolArray == nil) {
      resultSReportResultMsg.selVolArray = [other.selVolArray copy];
    } else {
      [resultSReportResultMsg.selVolArray appendArray:other.selVolArray];
    }
  }
  if (other.buyPriceArray.count > 0) {
    if (resultSReportResultMsg.buyPriceArray == nil) {
      resultSReportResultMsg.buyPriceArray = [other.buyPriceArray copy];
    } else {
      [resultSReportResultMsg.buyPriceArray appendArray:other.buyPriceArray];
    }
  }
  if (other.buyVolArray.count > 0) {
    if (resultSReportResultMsg.buyVolArray == nil) {
      resultSReportResultMsg.buyVolArray = [other.buyVolArray copy];
    } else {
      [resultSReportResultMsg.buyVolArray appendArray:other.buyVolArray];
    }
  }
  if (other.hasPe) {
    [self setPe:other.pe];
  }
  if (other.hasHhjcap) {
    [self setHhjcap:other.hhjcap];
  }
  if (other.hasRiseVol) {
    [self setRiseVol:other.riseVol];
  }
  if (other.hasDropVol) {
    [self setDropVol:other.dropVol];
  }
  if (other.hasHsl) {
    [self setHsl:other.hsl];
  }
  if (other.hasZgb) {
    [self setZgb:other.zgb];
  }
  if (other.hasMgjzc) {
    [self setMgjzc:other.mgjzc];
  }
  if (other.hasMgsy) {
    [self setMgsy:other.mgsy];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_report_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_report_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setTime:[input readUInt32]];
        break;
      }
      case 33: {
        [self setLastClose:[input readDouble]];
        break;
      }
      case 41: {
        [self setPbNew:[input readDouble]];
        break;
      }
      case 49: {
        [self setOpen:[input readDouble]];
        break;
      }
      case 57: {
        [self setHigh:[input readDouble]];
        break;
      }
      case 65: {
        [self setLow:[input readDouble]];
        break;
      }
      case 73: {
        [self setVol:[input readDouble]];
        break;
      }
      case 81: {
        [self setAmount:[input readDouble]];
        break;
      }
      case 89: {
        [self setFiveDayAvevol:[input readDouble]];
        break;
      }
      case 97: {
        [self addSelPrice:[input readDouble]];
        break;
      }
      case 105: {
        [self addSelVol:[input readDouble]];
        break;
      }
      case 113: {
        [self addBuyPrice:[input readDouble]];
        break;
      }
      case 121: {
        [self addBuyVol:[input readDouble]];
        break;
      }
      case 129: {
        [self setPe:[input readDouble]];
        break;
      }
      case 153: {
        [self setHhjcap:[input readDouble]];
        break;
      }
      case 161: {
        [self setRiseVol:[input readDouble]];
        break;
      }
      case 169: {
        [self setDropVol:[input readDouble]];
        break;
      }
      case 177: {
        [self setHsl:[input readDouble]];
        break;
      }
      case 185: {
        [self setZgb:[input readDouble]];
        break;
      }
      case 193: {
        [self setMgjzc:[input readDouble]];
        break;
      }
      case 201: {
        [self setMgsy:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSReportResultMsg.hasCode;
}
- (NSString*) code {
  return resultSReportResultMsg.code;
}
- (s_report_result_msgBuilder*) setCode:(NSString*) value {
  resultSReportResultMsg.hasCode = YES;
  resultSReportResultMsg.code = value;
  return self;
}
- (s_report_result_msgBuilder*) clearCode {
  resultSReportResultMsg.hasCode = NO;
  resultSReportResultMsg.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultSReportResultMsg.hasName;
}
- (NSString*) name {
  return resultSReportResultMsg.name;
}
- (s_report_result_msgBuilder*) setName:(NSString*) value {
  resultSReportResultMsg.hasName = YES;
  resultSReportResultMsg.name = value;
  return self;
}
- (s_report_result_msgBuilder*) clearName {
  resultSReportResultMsg.hasName = NO;
  resultSReportResultMsg.name = @"";
  return self;
}
- (BOOL) hasTime {
  return resultSReportResultMsg.hasTime;
}
- (UInt32) time {
  return resultSReportResultMsg.time;
}
- (s_report_result_msgBuilder*) setTime:(UInt32) value {
  resultSReportResultMsg.hasTime = YES;
  resultSReportResultMsg.time = value;
  return self;
}
- (s_report_result_msgBuilder*) clearTime {
  resultSReportResultMsg.hasTime = NO;
  resultSReportResultMsg.time = 0;
  return self;
}
- (BOOL) hasLastClose {
  return resultSReportResultMsg.hasLastClose;
}
- (Float64) lastClose {
  return resultSReportResultMsg.lastClose;
}
- (s_report_result_msgBuilder*) setLastClose:(Float64) value {
  resultSReportResultMsg.hasLastClose = YES;
  resultSReportResultMsg.lastClose = value;
  return self;
}
- (s_report_result_msgBuilder*) clearLastClose {
  resultSReportResultMsg.hasLastClose = NO;
  resultSReportResultMsg.lastClose = 0;
  return self;
}
- (BOOL) hasPbNew {
  return resultSReportResultMsg.hasPbNew;
}
- (Float64) pb_new {
  return resultSReportResultMsg.pb_new;
}
- (s_report_result_msgBuilder*) setPbNew:(Float64) value {
  resultSReportResultMsg.hasPbNew = YES;
  resultSReportResultMsg.pb_new = value;
  return self;
}
- (s_report_result_msgBuilder*) clearPbNew {
  resultSReportResultMsg.hasPbNew = NO;
  resultSReportResultMsg.pb_new = 0;
  return self;
}
- (BOOL) hasOpen {
  return resultSReportResultMsg.hasOpen;
}
- (Float64) open {
  return resultSReportResultMsg.open;
}
- (s_report_result_msgBuilder*) setOpen:(Float64) value {
  resultSReportResultMsg.hasOpen = YES;
  resultSReportResultMsg.open = value;
  return self;
}
- (s_report_result_msgBuilder*) clearOpen {
  resultSReportResultMsg.hasOpen = NO;
  resultSReportResultMsg.open = 0;
  return self;
}
- (BOOL) hasHigh {
  return resultSReportResultMsg.hasHigh;
}
- (Float64) high {
  return resultSReportResultMsg.high;
}
- (s_report_result_msgBuilder*) setHigh:(Float64) value {
  resultSReportResultMsg.hasHigh = YES;
  resultSReportResultMsg.high = value;
  return self;
}
- (s_report_result_msgBuilder*) clearHigh {
  resultSReportResultMsg.hasHigh = NO;
  resultSReportResultMsg.high = 0;
  return self;
}
- (BOOL) hasLow {
  return resultSReportResultMsg.hasLow;
}
- (Float64) low {
  return resultSReportResultMsg.low;
}
- (s_report_result_msgBuilder*) setLow:(Float64) value {
  resultSReportResultMsg.hasLow = YES;
  resultSReportResultMsg.low = value;
  return self;
}
- (s_report_result_msgBuilder*) clearLow {
  resultSReportResultMsg.hasLow = NO;
  resultSReportResultMsg.low = 0;
  return self;
}
- (BOOL) hasVol {
  return resultSReportResultMsg.hasVol;
}
- (Float64) vol {
  return resultSReportResultMsg.vol;
}
- (s_report_result_msgBuilder*) setVol:(Float64) value {
  resultSReportResultMsg.hasVol = YES;
  resultSReportResultMsg.vol = value;
  return self;
}
- (s_report_result_msgBuilder*) clearVol {
  resultSReportResultMsg.hasVol = NO;
  resultSReportResultMsg.vol = 0;
  return self;
}
- (BOOL) hasAmount {
  return resultSReportResultMsg.hasAmount;
}
- (Float64) amount {
  return resultSReportResultMsg.amount;
}
- (s_report_result_msgBuilder*) setAmount:(Float64) value {
  resultSReportResultMsg.hasAmount = YES;
  resultSReportResultMsg.amount = value;
  return self;
}
- (s_report_result_msgBuilder*) clearAmount {
  resultSReportResultMsg.hasAmount = NO;
  resultSReportResultMsg.amount = 0;
  return self;
}
- (BOOL) hasFiveDayAvevol {
  return resultSReportResultMsg.hasFiveDayAvevol;
}
- (Float64) fiveDayAvevol {
  return resultSReportResultMsg.fiveDayAvevol;
}
- (s_report_result_msgBuilder*) setFiveDayAvevol:(Float64) value {
  resultSReportResultMsg.hasFiveDayAvevol = YES;
  resultSReportResultMsg.fiveDayAvevol = value;
  return self;
}
- (s_report_result_msgBuilder*) clearFiveDayAvevol {
  resultSReportResultMsg.hasFiveDayAvevol = NO;
  resultSReportResultMsg.fiveDayAvevol = 0;
  return self;
}
- (PBAppendableArray *)selPrice {
  return resultSReportResultMsg.selPriceArray;
}
- (Float64)selPriceAtIndex:(NSUInteger)index {
  return [resultSReportResultMsg selPriceAtIndex:index];
}
- (s_report_result_msgBuilder *)addSelPrice:(Float64)value {
  if (resultSReportResultMsg.selPriceArray == nil) {
    resultSReportResultMsg.selPriceArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeDouble];
  }
  [resultSReportResultMsg.selPriceArray addDouble:value];
  return self;
}
- (s_report_result_msgBuilder *)setSelPriceArray:(NSArray *)array {
  resultSReportResultMsg.selPriceArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeDouble];
  return self;
}
- (s_report_result_msgBuilder *)setSelPriceValues:(const Float64 *)values count:(NSUInteger)count {
  resultSReportResultMsg.selPriceArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeDouble];
  return self;
}
- (s_report_result_msgBuilder *)clearSelPrice {
  resultSReportResultMsg.selPriceArray = nil;
  return self;
}
- (PBAppendableArray *)selVol {
  return resultSReportResultMsg.selVolArray;
}
- (Float64)selVolAtIndex:(NSUInteger)index {
  return [resultSReportResultMsg selVolAtIndex:index];
}
- (s_report_result_msgBuilder *)addSelVol:(Float64)value {
  if (resultSReportResultMsg.selVolArray == nil) {
    resultSReportResultMsg.selVolArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeDouble];
  }
  [resultSReportResultMsg.selVolArray addDouble:value];
  return self;
}
- (s_report_result_msgBuilder *)setSelVolArray:(NSArray *)array {
  resultSReportResultMsg.selVolArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeDouble];
  return self;
}
- (s_report_result_msgBuilder *)setSelVolValues:(const Float64 *)values count:(NSUInteger)count {
  resultSReportResultMsg.selVolArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeDouble];
  return self;
}
- (s_report_result_msgBuilder *)clearSelVol {
  resultSReportResultMsg.selVolArray = nil;
  return self;
}
- (PBAppendableArray *)buyPrice {
  return resultSReportResultMsg.buyPriceArray;
}
- (Float64)buyPriceAtIndex:(NSUInteger)index {
  return [resultSReportResultMsg buyPriceAtIndex:index];
}
- (s_report_result_msgBuilder *)addBuyPrice:(Float64)value {
  if (resultSReportResultMsg.buyPriceArray == nil) {
    resultSReportResultMsg.buyPriceArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeDouble];
  }
  [resultSReportResultMsg.buyPriceArray addDouble:value];
  return self;
}
- (s_report_result_msgBuilder *)setBuyPriceArray:(NSArray *)array {
  resultSReportResultMsg.buyPriceArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeDouble];
  return self;
}
- (s_report_result_msgBuilder *)setBuyPriceValues:(const Float64 *)values count:(NSUInteger)count {
  resultSReportResultMsg.buyPriceArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeDouble];
  return self;
}
- (s_report_result_msgBuilder *)clearBuyPrice {
  resultSReportResultMsg.buyPriceArray = nil;
  return self;
}
- (PBAppendableArray *)buyVol {
  return resultSReportResultMsg.buyVolArray;
}
- (Float64)buyVolAtIndex:(NSUInteger)index {
  return [resultSReportResultMsg buyVolAtIndex:index];
}
- (s_report_result_msgBuilder *)addBuyVol:(Float64)value {
  if (resultSReportResultMsg.buyVolArray == nil) {
    resultSReportResultMsg.buyVolArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeDouble];
  }
  [resultSReportResultMsg.buyVolArray addDouble:value];
  return self;
}
- (s_report_result_msgBuilder *)setBuyVolArray:(NSArray *)array {
  resultSReportResultMsg.buyVolArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeDouble];
  return self;
}
- (s_report_result_msgBuilder *)setBuyVolValues:(const Float64 *)values count:(NSUInteger)count {
  resultSReportResultMsg.buyVolArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeDouble];
  return self;
}
- (s_report_result_msgBuilder *)clearBuyVol {
  resultSReportResultMsg.buyVolArray = nil;
  return self;
}
- (BOOL) hasPe {
  return resultSReportResultMsg.hasPe;
}
- (Float64) pe {
  return resultSReportResultMsg.pe;
}
- (s_report_result_msgBuilder*) setPe:(Float64) value {
  resultSReportResultMsg.hasPe = YES;
  resultSReportResultMsg.pe = value;
  return self;
}
- (s_report_result_msgBuilder*) clearPe {
  resultSReportResultMsg.hasPe = NO;
  resultSReportResultMsg.pe = 0;
  return self;
}
- (BOOL) hasHhjcap {
  return resultSReportResultMsg.hasHhjcap;
}
- (Float64) hhjcap {
  return resultSReportResultMsg.hhjcap;
}
- (s_report_result_msgBuilder*) setHhjcap:(Float64) value {
  resultSReportResultMsg.hasHhjcap = YES;
  resultSReportResultMsg.hhjcap = value;
  return self;
}
- (s_report_result_msgBuilder*) clearHhjcap {
  resultSReportResultMsg.hasHhjcap = NO;
  resultSReportResultMsg.hhjcap = 0;
  return self;
}
- (BOOL) hasRiseVol {
  return resultSReportResultMsg.hasRiseVol;
}
- (Float64) riseVol {
  return resultSReportResultMsg.riseVol;
}
- (s_report_result_msgBuilder*) setRiseVol:(Float64) value {
  resultSReportResultMsg.hasRiseVol = YES;
  resultSReportResultMsg.riseVol = value;
  return self;
}
- (s_report_result_msgBuilder*) clearRiseVol {
  resultSReportResultMsg.hasRiseVol = NO;
  resultSReportResultMsg.riseVol = 0;
  return self;
}
- (BOOL) hasDropVol {
  return resultSReportResultMsg.hasDropVol;
}
- (Float64) dropVol {
  return resultSReportResultMsg.dropVol;
}
- (s_report_result_msgBuilder*) setDropVol:(Float64) value {
  resultSReportResultMsg.hasDropVol = YES;
  resultSReportResultMsg.dropVol = value;
  return self;
}
- (s_report_result_msgBuilder*) clearDropVol {
  resultSReportResultMsg.hasDropVol = NO;
  resultSReportResultMsg.dropVol = 0;
  return self;
}
- (BOOL) hasHsl {
  return resultSReportResultMsg.hasHsl;
}
- (Float64) hsl {
  return resultSReportResultMsg.hsl;
}
- (s_report_result_msgBuilder*) setHsl:(Float64) value {
  resultSReportResultMsg.hasHsl = YES;
  resultSReportResultMsg.hsl = value;
  return self;
}
- (s_report_result_msgBuilder*) clearHsl {
  resultSReportResultMsg.hasHsl = NO;
  resultSReportResultMsg.hsl = 0;
  return self;
}
- (BOOL) hasZgb {
  return resultSReportResultMsg.hasZgb;
}
- (Float64) zgb {
  return resultSReportResultMsg.zgb;
}
- (s_report_result_msgBuilder*) setZgb:(Float64) value {
  resultSReportResultMsg.hasZgb = YES;
  resultSReportResultMsg.zgb = value;
  return self;
}
- (s_report_result_msgBuilder*) clearZgb {
  resultSReportResultMsg.hasZgb = NO;
  resultSReportResultMsg.zgb = 0;
  return self;
}
- (BOOL) hasMgjzc {
  return resultSReportResultMsg.hasMgjzc;
}
- (Float64) mgjzc {
  return resultSReportResultMsg.mgjzc;
}
- (s_report_result_msgBuilder*) setMgjzc:(Float64) value {
  resultSReportResultMsg.hasMgjzc = YES;
  resultSReportResultMsg.mgjzc = value;
  return self;
}
- (s_report_result_msgBuilder*) clearMgjzc {
  resultSReportResultMsg.hasMgjzc = NO;
  resultSReportResultMsg.mgjzc = 0;
  return self;
}
- (BOOL) hasMgsy {
  return resultSReportResultMsg.hasMgsy;
}
- (Float64) mgsy {
  return resultSReportResultMsg.mgsy;
}
- (s_report_result_msgBuilder*) setMgsy:(Float64) value {
  resultSReportResultMsg.hasMgsy = YES;
  resultSReportResultMsg.mgsy = value;
  return self;
}
- (s_report_result_msgBuilder*) clearMgsy {
  resultSReportResultMsg.hasMgsy = NO;
  resultSReportResultMsg.mgsy = 0;
  return self;
}
@end

@interface s_report_array_result_msg ()
@property (strong) NSMutableArray * reportDataArray;
@end

@implementation s_report_array_result_msg

@synthesize reportDataArray;
@dynamic reportData;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_report_array_result_msg* defaults_report_array_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_report_array_result_msg class]) {
    defaults_report_array_result_msgInstance = [[s_report_array_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_report_array_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_report_array_result_msgInstance;
}
- (NSArray *)reportData {
  return reportDataArray;
}
- (s_report_result_msg*)reportDataAtIndex:(NSUInteger)index {
  return [reportDataArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitreportData = YES;
   [self.reportData enumerateObjectsUsingBlock:^(s_report_result_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitreportData = NO;
      *stop = YES;
    }
  }];
  if (!isInitreportData) return isInitreportData;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.reportDataArray enumerateObjectsUsingBlock:^(s_report_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.reportDataArray enumerateObjectsUsingBlock:^(s_report_result_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_report_array_result_msg*) parseFromData:(NSData*) data {
  return (s_report_array_result_msg*)[[[s_report_array_result_msg builder] mergeFromData:data] build];
}
+ (s_report_array_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_report_array_result_msg*)[[[s_report_array_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_report_array_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_report_array_result_msg*)[[[s_report_array_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_report_array_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_report_array_result_msg*)[[[s_report_array_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_report_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_report_array_result_msg*)[[[s_report_array_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_report_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_report_array_result_msg*)[[[s_report_array_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_report_array_result_msgBuilder*) builder {
  return [[s_report_array_result_msgBuilder alloc] init];
}
+ (s_report_array_result_msgBuilder*) builderWithPrototype:(s_report_array_result_msg*) prototype {
  return [[s_report_array_result_msg builder] mergeFrom:prototype];
}
- (s_report_array_result_msgBuilder*) builder {
  return [s_report_array_result_msg builder];
}
- (s_report_array_result_msgBuilder*) toBuilder {
  return [s_report_array_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.reportDataArray enumerateObjectsUsingBlock:^(s_report_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"reportData"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_report_result_msg* element in self.reportDataArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"reportData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_report_array_result_msg class]]) {
    return NO;
  }
  s_report_array_result_msg *otherMessage = other;
  return
      [self.reportDataArray isEqualToArray:otherMessage.reportDataArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.reportDataArray enumerateObjectsUsingBlock:^(s_report_result_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_report_array_result_msgBuilder()
@property (strong) s_report_array_result_msg* resultSReportArrayResultMsg;
@end

@implementation s_report_array_result_msgBuilder
@synthesize resultSReportArrayResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSReportArrayResultMsg = [[s_report_array_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSReportArrayResultMsg;
}
- (s_report_array_result_msgBuilder*) clear {
  self.resultSReportArrayResultMsg = [[s_report_array_result_msg alloc] init];
  return self;
}
- (s_report_array_result_msgBuilder*) clone {
  return [s_report_array_result_msg builderWithPrototype:resultSReportArrayResultMsg];
}
- (s_report_array_result_msg*) defaultInstance {
  return [s_report_array_result_msg defaultInstance];
}
- (s_report_array_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_report_array_result_msg*) buildPartial {
  s_report_array_result_msg* returnMe = resultSReportArrayResultMsg;
  self.resultSReportArrayResultMsg = nil;
  return returnMe;
}
- (s_report_array_result_msgBuilder*) mergeFrom:(s_report_array_result_msg*) other {
  if (other == [s_report_array_result_msg defaultInstance]) {
    return self;
  }
  if (other.reportDataArray.count > 0) {
    if (resultSReportArrayResultMsg.reportDataArray == nil) {
      resultSReportArrayResultMsg.reportDataArray = [[NSMutableArray alloc] initWithArray:other.reportDataArray];
    } else {
      [resultSReportArrayResultMsg.reportDataArray addObjectsFromArray:other.reportDataArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_report_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_report_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_report_result_msgBuilder* subBuilder = [s_report_result_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addReportData:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)reportData {
  return resultSReportArrayResultMsg.reportDataArray;
}
- (s_report_result_msg*)reportDataAtIndex:(NSUInteger)index {
  return [resultSReportArrayResultMsg reportDataAtIndex:index];
}
- (s_report_array_result_msgBuilder *)addReportData:(s_report_result_msg*)value {
  if (resultSReportArrayResultMsg.reportDataArray == nil) {
    resultSReportArrayResultMsg.reportDataArray = [[NSMutableArray alloc]init];
  }
  [resultSReportArrayResultMsg.reportDataArray addObject:value];
  return self;
}
- (s_report_array_result_msgBuilder *)setReportDataArray:(NSArray *)array {
  resultSReportArrayResultMsg.reportDataArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_report_array_result_msgBuilder *)clearReportData {
  resultSReportArrayResultMsg.reportDataArray = nil;
  return self;
}
@end

@interface s_biddeal_msg ()
@property (strong) NSString* code;
@property (strong) data_selector* selector;
@end

@implementation s_biddeal_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasSelector {
  return !!hasSelector_;
}
- (void) setHasSelector:(BOOL) _value_ {
  hasSelector_ = !!_value_;
}
@synthesize selector;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.selector = [data_selector defaultInstance];
  }
  return self;
}
static s_biddeal_msg* defaults_biddeal_msgInstance = nil;
+ (void) initialize {
  if (self == [s_biddeal_msg class]) {
    defaults_biddeal_msgInstance = [[s_biddeal_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_biddeal_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_biddeal_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasSelector) {
    return NO;
  }
  if (!self.selector.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasSelector) {
    [output writeMessage:2 value:self.selector];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasSelector) {
    size_ += computeMessageSize(2, self.selector);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_biddeal_msg*) parseFromData:(NSData*) data {
  return (s_biddeal_msg*)[[[s_biddeal_msg builder] mergeFromData:data] build];
}
+ (s_biddeal_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_biddeal_msg*)[[[s_biddeal_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_biddeal_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_biddeal_msg*)[[[s_biddeal_msg builder] mergeFromInputStream:input] build];
}
+ (s_biddeal_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_biddeal_msg*)[[[s_biddeal_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_biddeal_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_biddeal_msg*)[[[s_biddeal_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_biddeal_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_biddeal_msg*)[[[s_biddeal_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_biddeal_msgBuilder*) builder {
  return [[s_biddeal_msgBuilder alloc] init];
}
+ (s_biddeal_msgBuilder*) builderWithPrototype:(s_biddeal_msg*) prototype {
  return [[s_biddeal_msg builder] mergeFrom:prototype];
}
- (s_biddeal_msgBuilder*) builder {
  return [s_biddeal_msg builder];
}
- (s_biddeal_msgBuilder*) toBuilder {
  return [s_biddeal_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasSelector) {
    [output appendFormat:@"%@%@ {\n", indent, @"selector"];
    [self.selector writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasSelector) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.selector storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"selector"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_biddeal_msg class]]) {
    return NO;
  }
  s_biddeal_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasSelector == otherMessage.hasSelector &&
      (!self.hasSelector || [self.selector isEqual:otherMessage.selector]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasSelector) {
    hashCode = hashCode * 31 + [self.selector hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_biddeal_msgBuilder()
@property (strong) s_biddeal_msg* resultSBiddealMsg;
@end

@implementation s_biddeal_msgBuilder
@synthesize resultSBiddealMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBiddealMsg = [[s_biddeal_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBiddealMsg;
}
- (s_biddeal_msgBuilder*) clear {
  self.resultSBiddealMsg = [[s_biddeal_msg alloc] init];
  return self;
}
- (s_biddeal_msgBuilder*) clone {
  return [s_biddeal_msg builderWithPrototype:resultSBiddealMsg];
}
- (s_biddeal_msg*) defaultInstance {
  return [s_biddeal_msg defaultInstance];
}
- (s_biddeal_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_biddeal_msg*) buildPartial {
  s_biddeal_msg* returnMe = resultSBiddealMsg;
  self.resultSBiddealMsg = nil;
  return returnMe;
}
- (s_biddeal_msgBuilder*) mergeFrom:(s_biddeal_msg*) other {
  if (other == [s_biddeal_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasSelector) {
    [self mergeSelector:other.selector];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_biddeal_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_biddeal_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        data_selectorBuilder* subBuilder = [data_selector builder];
        if (self.hasSelector) {
          [subBuilder mergeFrom:self.selector];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSelector:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSBiddealMsg.hasCode;
}
- (NSString*) code {
  return resultSBiddealMsg.code;
}
- (s_biddeal_msgBuilder*) setCode:(NSString*) value {
  resultSBiddealMsg.hasCode = YES;
  resultSBiddealMsg.code = value;
  return self;
}
- (s_biddeal_msgBuilder*) clearCode {
  resultSBiddealMsg.hasCode = NO;
  resultSBiddealMsg.code = @"";
  return self;
}
- (BOOL) hasSelector {
  return resultSBiddealMsg.hasSelector;
}
- (data_selector*) selector {
  return resultSBiddealMsg.selector;
}
- (s_biddeal_msgBuilder*) setSelector:(data_selector*) value {
  resultSBiddealMsg.hasSelector = YES;
  resultSBiddealMsg.selector = value;
  return self;
}
- (s_biddeal_msgBuilder*) setSelectorBuilder:(data_selectorBuilder*) builderForValue {
  return [self setSelector:[builderForValue build]];
}
- (s_biddeal_msgBuilder*) mergeSelector:(data_selector*) value {
  if (resultSBiddealMsg.hasSelector &&
      resultSBiddealMsg.selector != [data_selector defaultInstance]) {
    resultSBiddealMsg.selector =
      [[[data_selector builderWithPrototype:resultSBiddealMsg.selector] mergeFrom:value] buildPartial];
  } else {
    resultSBiddealMsg.selector = value;
  }
  resultSBiddealMsg.hasSelector = YES;
  return self;
}
- (s_biddeal_msgBuilder*) clearSelector {
  resultSBiddealMsg.hasSelector = NO;
  resultSBiddealMsg.selector = [data_selector defaultInstance];
  return self;
}
@end

@interface s_biddeal_result_msg ()
@property UInt32 time;
@property Float64 price;
@property Float64 vol;
@property Float64 amount;
@property Float64 extend;
@end

@implementation s_biddeal_result_msg

- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) _value_ {
  hasPrice_ = !!_value_;
}
@synthesize price;
- (BOOL) hasVol {
  return !!hasVol_;
}
- (void) setHasVol:(BOOL) _value_ {
  hasVol_ = !!_value_;
}
@synthesize vol;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) _value_ {
  hasAmount_ = !!_value_;
}
@synthesize amount;
- (BOOL) hasExtend {
  return !!hasExtend_;
}
- (void) setHasExtend:(BOOL) _value_ {
  hasExtend_ = !!_value_;
}
@synthesize extend;
- (instancetype) init {
  if ((self = [super init])) {
    self.time = 0;
    self.price = 0;
    self.vol = 0;
    self.amount = 0;
    self.extend = 0;
  }
  return self;
}
static s_biddeal_result_msg* defaults_biddeal_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_biddeal_result_msg class]) {
    defaults_biddeal_result_msgInstance = [[s_biddeal_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_biddeal_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_biddeal_result_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTime) {
    return NO;
  }
  if (!self.hasPrice) {
    return NO;
  }
  if (!self.hasVol) {
    return NO;
  }
  if (!self.hasAmount) {
    return NO;
  }
  if (!self.hasExtend) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTime) {
    [output writeUInt32:1 value:self.time];
  }
  if (self.hasPrice) {
    [output writeDouble:2 value:self.price];
  }
  if (self.hasVol) {
    [output writeDouble:3 value:self.vol];
  }
  if (self.hasAmount) {
    [output writeDouble:4 value:self.amount];
  }
  if (self.hasExtend) {
    [output writeDouble:5 value:self.extend];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTime) {
    size_ += computeUInt32Size(1, self.time);
  }
  if (self.hasPrice) {
    size_ += computeDoubleSize(2, self.price);
  }
  if (self.hasVol) {
    size_ += computeDoubleSize(3, self.vol);
  }
  if (self.hasAmount) {
    size_ += computeDoubleSize(4, self.amount);
  }
  if (self.hasExtend) {
    size_ += computeDoubleSize(5, self.extend);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_biddeal_result_msg*) parseFromData:(NSData*) data {
  return (s_biddeal_result_msg*)[[[s_biddeal_result_msg builder] mergeFromData:data] build];
}
+ (s_biddeal_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_biddeal_result_msg*)[[[s_biddeal_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_biddeal_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_biddeal_result_msg*)[[[s_biddeal_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_biddeal_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_biddeal_result_msg*)[[[s_biddeal_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_biddeal_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_biddeal_result_msg*)[[[s_biddeal_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_biddeal_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_biddeal_result_msg*)[[[s_biddeal_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_biddeal_result_msgBuilder*) builder {
  return [[s_biddeal_result_msgBuilder alloc] init];
}
+ (s_biddeal_result_msgBuilder*) builderWithPrototype:(s_biddeal_result_msg*) prototype {
  return [[s_biddeal_result_msg builder] mergeFrom:prototype];
}
- (s_biddeal_result_msgBuilder*) builder {
  return [s_biddeal_result_msg builder];
}
- (s_biddeal_result_msgBuilder*) toBuilder {
  return [s_biddeal_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  if (self.hasPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"price", [NSNumber numberWithDouble:self.price]];
  }
  if (self.hasVol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vol", [NSNumber numberWithDouble:self.vol]];
  }
  if (self.hasAmount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"amount", [NSNumber numberWithDouble:self.amount]];
  }
  if (self.hasExtend) {
    [output appendFormat:@"%@%@: %@\n", indent, @"extend", [NSNumber numberWithDouble:self.extend]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  if (self.hasPrice) {
    [dictionary setObject: [NSNumber numberWithDouble:self.price] forKey: @"price"];
  }
  if (self.hasVol) {
    [dictionary setObject: [NSNumber numberWithDouble:self.vol] forKey: @"vol"];
  }
  if (self.hasAmount) {
    [dictionary setObject: [NSNumber numberWithDouble:self.amount] forKey: @"amount"];
  }
  if (self.hasExtend) {
    [dictionary setObject: [NSNumber numberWithDouble:self.extend] forKey: @"extend"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_biddeal_result_msg class]]) {
    return NO;
  }
  s_biddeal_result_msg *otherMessage = other;
  return
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasPrice == otherMessage.hasPrice &&
      (!self.hasPrice || self.price == otherMessage.price) &&
      self.hasVol == otherMessage.hasVol &&
      (!self.hasVol || self.vol == otherMessage.vol) &&
      self.hasAmount == otherMessage.hasAmount &&
      (!self.hasAmount || self.amount == otherMessage.amount) &&
      self.hasExtend == otherMessage.hasExtend &&
      (!self.hasExtend || self.extend == otherMessage.extend) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  if (self.hasPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.price] hash];
  }
  if (self.hasVol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.vol] hash];
  }
  if (self.hasAmount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.amount] hash];
  }
  if (self.hasExtend) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.extend] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_biddeal_result_msgBuilder()
@property (strong) s_biddeal_result_msg* resultSBiddealResultMsg;
@end

@implementation s_biddeal_result_msgBuilder
@synthesize resultSBiddealResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBiddealResultMsg = [[s_biddeal_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBiddealResultMsg;
}
- (s_biddeal_result_msgBuilder*) clear {
  self.resultSBiddealResultMsg = [[s_biddeal_result_msg alloc] init];
  return self;
}
- (s_biddeal_result_msgBuilder*) clone {
  return [s_biddeal_result_msg builderWithPrototype:resultSBiddealResultMsg];
}
- (s_biddeal_result_msg*) defaultInstance {
  return [s_biddeal_result_msg defaultInstance];
}
- (s_biddeal_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_biddeal_result_msg*) buildPartial {
  s_biddeal_result_msg* returnMe = resultSBiddealResultMsg;
  self.resultSBiddealResultMsg = nil;
  return returnMe;
}
- (s_biddeal_result_msgBuilder*) mergeFrom:(s_biddeal_result_msg*) other {
  if (other == [s_biddeal_result_msg defaultInstance]) {
    return self;
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  if (other.hasVol) {
    [self setVol:other.vol];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  if (other.hasExtend) {
    [self setExtend:other.extend];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_biddeal_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_biddeal_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTime:[input readUInt32]];
        break;
      }
      case 17: {
        [self setPrice:[input readDouble]];
        break;
      }
      case 25: {
        [self setVol:[input readDouble]];
        break;
      }
      case 33: {
        [self setAmount:[input readDouble]];
        break;
      }
      case 41: {
        [self setExtend:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasTime {
  return resultSBiddealResultMsg.hasTime;
}
- (UInt32) time {
  return resultSBiddealResultMsg.time;
}
- (s_biddeal_result_msgBuilder*) setTime:(UInt32) value {
  resultSBiddealResultMsg.hasTime = YES;
  resultSBiddealResultMsg.time = value;
  return self;
}
- (s_biddeal_result_msgBuilder*) clearTime {
  resultSBiddealResultMsg.hasTime = NO;
  resultSBiddealResultMsg.time = 0;
  return self;
}
- (BOOL) hasPrice {
  return resultSBiddealResultMsg.hasPrice;
}
- (Float64) price {
  return resultSBiddealResultMsg.price;
}
- (s_biddeal_result_msgBuilder*) setPrice:(Float64) value {
  resultSBiddealResultMsg.hasPrice = YES;
  resultSBiddealResultMsg.price = value;
  return self;
}
- (s_biddeal_result_msgBuilder*) clearPrice {
  resultSBiddealResultMsg.hasPrice = NO;
  resultSBiddealResultMsg.price = 0;
  return self;
}
- (BOOL) hasVol {
  return resultSBiddealResultMsg.hasVol;
}
- (Float64) vol {
  return resultSBiddealResultMsg.vol;
}
- (s_biddeal_result_msgBuilder*) setVol:(Float64) value {
  resultSBiddealResultMsg.hasVol = YES;
  resultSBiddealResultMsg.vol = value;
  return self;
}
- (s_biddeal_result_msgBuilder*) clearVol {
  resultSBiddealResultMsg.hasVol = NO;
  resultSBiddealResultMsg.vol = 0;
  return self;
}
- (BOOL) hasAmount {
  return resultSBiddealResultMsg.hasAmount;
}
- (Float64) amount {
  return resultSBiddealResultMsg.amount;
}
- (s_biddeal_result_msgBuilder*) setAmount:(Float64) value {
  resultSBiddealResultMsg.hasAmount = YES;
  resultSBiddealResultMsg.amount = value;
  return self;
}
- (s_biddeal_result_msgBuilder*) clearAmount {
  resultSBiddealResultMsg.hasAmount = NO;
  resultSBiddealResultMsg.amount = 0;
  return self;
}
- (BOOL) hasExtend {
  return resultSBiddealResultMsg.hasExtend;
}
- (Float64) extend {
  return resultSBiddealResultMsg.extend;
}
- (s_biddeal_result_msgBuilder*) setExtend:(Float64) value {
  resultSBiddealResultMsg.hasExtend = YES;
  resultSBiddealResultMsg.extend = value;
  return self;
}
- (s_biddeal_result_msgBuilder*) clearExtend {
  resultSBiddealResultMsg.hasExtend = NO;
  resultSBiddealResultMsg.extend = 0;
  return self;
}
@end

@interface s_biddeal_array_result_msg ()
@property (strong) NSMutableArray * biddealDataArray;
@end

@implementation s_biddeal_array_result_msg

@synthesize biddealDataArray;
@dynamic biddealData;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_biddeal_array_result_msg* defaults_biddeal_array_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_biddeal_array_result_msg class]) {
    defaults_biddeal_array_result_msgInstance = [[s_biddeal_array_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_biddeal_array_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_biddeal_array_result_msgInstance;
}
- (NSArray *)biddealData {
  return biddealDataArray;
}
- (s_biddeal_result_msg*)biddealDataAtIndex:(NSUInteger)index {
  return [biddealDataArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitbiddealData = YES;
   [self.biddealData enumerateObjectsUsingBlock:^(s_biddeal_result_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitbiddealData = NO;
      *stop = YES;
    }
  }];
  if (!isInitbiddealData) return isInitbiddealData;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.biddealDataArray enumerateObjectsUsingBlock:^(s_biddeal_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.biddealDataArray enumerateObjectsUsingBlock:^(s_biddeal_result_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_biddeal_array_result_msg*) parseFromData:(NSData*) data {
  return (s_biddeal_array_result_msg*)[[[s_biddeal_array_result_msg builder] mergeFromData:data] build];
}
+ (s_biddeal_array_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_biddeal_array_result_msg*)[[[s_biddeal_array_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_biddeal_array_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_biddeal_array_result_msg*)[[[s_biddeal_array_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_biddeal_array_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_biddeal_array_result_msg*)[[[s_biddeal_array_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_biddeal_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_biddeal_array_result_msg*)[[[s_biddeal_array_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_biddeal_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_biddeal_array_result_msg*)[[[s_biddeal_array_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_biddeal_array_result_msgBuilder*) builder {
  return [[s_biddeal_array_result_msgBuilder alloc] init];
}
+ (s_biddeal_array_result_msgBuilder*) builderWithPrototype:(s_biddeal_array_result_msg*) prototype {
  return [[s_biddeal_array_result_msg builder] mergeFrom:prototype];
}
- (s_biddeal_array_result_msgBuilder*) builder {
  return [s_biddeal_array_result_msg builder];
}
- (s_biddeal_array_result_msgBuilder*) toBuilder {
  return [s_biddeal_array_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.biddealDataArray enumerateObjectsUsingBlock:^(s_biddeal_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"biddealData"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_biddeal_result_msg* element in self.biddealDataArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"biddealData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_biddeal_array_result_msg class]]) {
    return NO;
  }
  s_biddeal_array_result_msg *otherMessage = other;
  return
      [self.biddealDataArray isEqualToArray:otherMessage.biddealDataArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.biddealDataArray enumerateObjectsUsingBlock:^(s_biddeal_result_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_biddeal_array_result_msgBuilder()
@property (strong) s_biddeal_array_result_msg* resultSBiddealArrayResultMsg;
@end

@implementation s_biddeal_array_result_msgBuilder
@synthesize resultSBiddealArrayResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBiddealArrayResultMsg = [[s_biddeal_array_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBiddealArrayResultMsg;
}
- (s_biddeal_array_result_msgBuilder*) clear {
  self.resultSBiddealArrayResultMsg = [[s_biddeal_array_result_msg alloc] init];
  return self;
}
- (s_biddeal_array_result_msgBuilder*) clone {
  return [s_biddeal_array_result_msg builderWithPrototype:resultSBiddealArrayResultMsg];
}
- (s_biddeal_array_result_msg*) defaultInstance {
  return [s_biddeal_array_result_msg defaultInstance];
}
- (s_biddeal_array_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_biddeal_array_result_msg*) buildPartial {
  s_biddeal_array_result_msg* returnMe = resultSBiddealArrayResultMsg;
  self.resultSBiddealArrayResultMsg = nil;
  return returnMe;
}
- (s_biddeal_array_result_msgBuilder*) mergeFrom:(s_biddeal_array_result_msg*) other {
  if (other == [s_biddeal_array_result_msg defaultInstance]) {
    return self;
  }
  if (other.biddealDataArray.count > 0) {
    if (resultSBiddealArrayResultMsg.biddealDataArray == nil) {
      resultSBiddealArrayResultMsg.biddealDataArray = [[NSMutableArray alloc] initWithArray:other.biddealDataArray];
    } else {
      [resultSBiddealArrayResultMsg.biddealDataArray addObjectsFromArray:other.biddealDataArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_biddeal_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_biddeal_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_biddeal_result_msgBuilder* subBuilder = [s_biddeal_result_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBiddealData:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)biddealData {
  return resultSBiddealArrayResultMsg.biddealDataArray;
}
- (s_biddeal_result_msg*)biddealDataAtIndex:(NSUInteger)index {
  return [resultSBiddealArrayResultMsg biddealDataAtIndex:index];
}
- (s_biddeal_array_result_msgBuilder *)addBiddealData:(s_biddeal_result_msg*)value {
  if (resultSBiddealArrayResultMsg.biddealDataArray == nil) {
    resultSBiddealArrayResultMsg.biddealDataArray = [[NSMutableArray alloc]init];
  }
  [resultSBiddealArrayResultMsg.biddealDataArray addObject:value];
  return self;
}
- (s_biddeal_array_result_msgBuilder *)setBiddealDataArray:(NSArray *)array {
  resultSBiddealArrayResultMsg.biddealDataArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_biddeal_array_result_msgBuilder *)clearBiddealData {
  resultSBiddealArrayResultMsg.biddealDataArray = nil;
  return self;
}
@end

@interface s_kline_msg ()
@property (strong) NSString* code;
@property report_data_cycle cycle;
@property (strong) data_selector* selector;
@end

@implementation s_kline_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasCycle {
  return !!hasCycle_;
}
- (void) setHasCycle:(BOOL) _value_ {
  hasCycle_ = !!_value_;
}
@synthesize cycle;
- (BOOL) hasSelector {
  return !!hasSelector_;
}
- (void) setHasSelector:(BOOL) _value_ {
  hasSelector_ = !!_value_;
}
@synthesize selector;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.cycle = report_data_cycleReportDataCycleBegin;
    self.selector = [data_selector defaultInstance];
  }
  return self;
}
static s_kline_msg* defaults_kline_msgInstance = nil;
+ (void) initialize {
  if (self == [s_kline_msg class]) {
    defaults_kline_msgInstance = [[s_kline_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_kline_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_kline_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasCycle) {
    return NO;
  }
  if (!self.hasSelector) {
    return NO;
  }
  if (!self.selector.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasCycle) {
    [output writeEnum:2 value:self.cycle];
  }
  if (self.hasSelector) {
    [output writeMessage:3 value:self.selector];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasCycle) {
    size_ += computeEnumSize(2, self.cycle);
  }
  if (self.hasSelector) {
    size_ += computeMessageSize(3, self.selector);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_kline_msg*) parseFromData:(NSData*) data {
  return (s_kline_msg*)[[[s_kline_msg builder] mergeFromData:data] build];
}
+ (s_kline_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_kline_msg*)[[[s_kline_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_kline_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_kline_msg*)[[[s_kline_msg builder] mergeFromInputStream:input] build];
}
+ (s_kline_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_kline_msg*)[[[s_kline_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_kline_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_kline_msg*)[[[s_kline_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_kline_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_kline_msg*)[[[s_kline_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_kline_msgBuilder*) builder {
  return [[s_kline_msgBuilder alloc] init];
}
+ (s_kline_msgBuilder*) builderWithPrototype:(s_kline_msg*) prototype {
  return [[s_kline_msg builder] mergeFrom:prototype];
}
- (s_kline_msgBuilder*) builder {
  return [s_kline_msg builder];
}
- (s_kline_msgBuilder*) toBuilder {
  return [s_kline_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasCycle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cycle", NSStringFromreport_data_cycle(self.cycle)];
  }
  if (self.hasSelector) {
    [output appendFormat:@"%@%@ {\n", indent, @"selector"];
    [self.selector writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasCycle) {
    [dictionary setObject: @(self.cycle) forKey: @"cycle"];
  }
  if (self.hasSelector) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.selector storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"selector"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_kline_msg class]]) {
    return NO;
  }
  s_kline_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasCycle == otherMessage.hasCycle &&
      (!self.hasCycle || self.cycle == otherMessage.cycle) &&
      self.hasSelector == otherMessage.hasSelector &&
      (!self.hasSelector || [self.selector isEqual:otherMessage.selector]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasCycle) {
    hashCode = hashCode * 31 + self.cycle;
  }
  if (self.hasSelector) {
    hashCode = hashCode * 31 + [self.selector hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_kline_msgBuilder()
@property (strong) s_kline_msg* resultSKlineMsg;
@end

@implementation s_kline_msgBuilder
@synthesize resultSKlineMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSKlineMsg = [[s_kline_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSKlineMsg;
}
- (s_kline_msgBuilder*) clear {
  self.resultSKlineMsg = [[s_kline_msg alloc] init];
  return self;
}
- (s_kline_msgBuilder*) clone {
  return [s_kline_msg builderWithPrototype:resultSKlineMsg];
}
- (s_kline_msg*) defaultInstance {
  return [s_kline_msg defaultInstance];
}
- (s_kline_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_kline_msg*) buildPartial {
  s_kline_msg* returnMe = resultSKlineMsg;
  self.resultSKlineMsg = nil;
  return returnMe;
}
- (s_kline_msgBuilder*) mergeFrom:(s_kline_msg*) other {
  if (other == [s_kline_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasCycle) {
    [self setCycle:other.cycle];
  }
  if (other.hasSelector) {
    [self mergeSelector:other.selector];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_kline_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_kline_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 16: {
        report_data_cycle value = (report_data_cycle)[input readEnum];
        if (report_data_cycleIsValidValue(value)) {
          [self setCycle:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        data_selectorBuilder* subBuilder = [data_selector builder];
        if (self.hasSelector) {
          [subBuilder mergeFrom:self.selector];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSelector:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSKlineMsg.hasCode;
}
- (NSString*) code {
  return resultSKlineMsg.code;
}
- (s_kline_msgBuilder*) setCode:(NSString*) value {
  resultSKlineMsg.hasCode = YES;
  resultSKlineMsg.code = value;
  return self;
}
- (s_kline_msgBuilder*) clearCode {
  resultSKlineMsg.hasCode = NO;
  resultSKlineMsg.code = @"";
  return self;
}
- (BOOL) hasCycle {
  return resultSKlineMsg.hasCycle;
}
- (report_data_cycle) cycle {
  return resultSKlineMsg.cycle;
}
- (s_kline_msgBuilder*) setCycle:(report_data_cycle) value {
  resultSKlineMsg.hasCycle = YES;
  resultSKlineMsg.cycle = value;
  return self;
}
- (s_kline_msgBuilder*) clearCycle {
  resultSKlineMsg.hasCycle = NO;
  resultSKlineMsg.cycle = report_data_cycleReportDataCycleBegin;
  return self;
}
- (BOOL) hasSelector {
  return resultSKlineMsg.hasSelector;
}
- (data_selector*) selector {
  return resultSKlineMsg.selector;
}
- (s_kline_msgBuilder*) setSelector:(data_selector*) value {
  resultSKlineMsg.hasSelector = YES;
  resultSKlineMsg.selector = value;
  return self;
}
- (s_kline_msgBuilder*) setSelectorBuilder:(data_selectorBuilder*) builderForValue {
  return [self setSelector:[builderForValue build]];
}
- (s_kline_msgBuilder*) mergeSelector:(data_selector*) value {
  if (resultSKlineMsg.hasSelector &&
      resultSKlineMsg.selector != [data_selector defaultInstance]) {
    resultSKlineMsg.selector =
      [[[data_selector builderWithPrototype:resultSKlineMsg.selector] mergeFrom:value] buildPartial];
  } else {
    resultSKlineMsg.selector = value;
  }
  resultSKlineMsg.hasSelector = YES;
  return self;
}
- (s_kline_msgBuilder*) clearSelector {
  resultSKlineMsg.hasSelector = NO;
  resultSKlineMsg.selector = [data_selector defaultInstance];
  return self;
}
@end

@interface s_kline_result_msg ()
@property UInt32 time;
@property Float64 open;
@property Float64 high;
@property Float64 close;
@property Float64 low;
@property Float64 vol;
@property Float64 amount;
@property Float64 hsl;
@property Float64 zdf;
@end

@implementation s_kline_result_msg

- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasOpen {
  return !!hasOpen_;
}
- (void) setHasOpen:(BOOL) _value_ {
  hasOpen_ = !!_value_;
}
@synthesize open;
- (BOOL) hasHigh {
  return !!hasHigh_;
}
- (void) setHasHigh:(BOOL) _value_ {
  hasHigh_ = !!_value_;
}
@synthesize high;
- (BOOL) hasClose {
  return !!hasClose_;
}
- (void) setHasClose:(BOOL) _value_ {
  hasClose_ = !!_value_;
}
@synthesize close;
- (BOOL) hasLow {
  return !!hasLow_;
}
- (void) setHasLow:(BOOL) _value_ {
  hasLow_ = !!_value_;
}
@synthesize low;
- (BOOL) hasVol {
  return !!hasVol_;
}
- (void) setHasVol:(BOOL) _value_ {
  hasVol_ = !!_value_;
}
@synthesize vol;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) _value_ {
  hasAmount_ = !!_value_;
}
@synthesize amount;
- (BOOL) hasHsl {
  return !!hasHsl_;
}
- (void) setHasHsl:(BOOL) _value_ {
  hasHsl_ = !!_value_;
}
@synthesize hsl;
- (BOOL) hasZdf {
  return !!hasZdf_;
}
- (void) setHasZdf:(BOOL) _value_ {
  hasZdf_ = !!_value_;
}
@synthesize zdf;
- (instancetype) init {
  if ((self = [super init])) {
    self.time = 0;
    self.open = 0;
    self.high = 0;
    self.close = 0;
    self.low = 0;
    self.vol = 0;
    self.amount = 0;
    self.hsl = 0;
    self.zdf = 0;
  }
  return self;
}
static s_kline_result_msg* defaults_kline_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_kline_result_msg class]) {
    defaults_kline_result_msgInstance = [[s_kline_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_kline_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_kline_result_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTime) {
    return NO;
  }
  if (!self.hasOpen) {
    return NO;
  }
  if (!self.hasHigh) {
    return NO;
  }
  if (!self.hasClose) {
    return NO;
  }
  if (!self.hasLow) {
    return NO;
  }
  if (!self.hasVol) {
    return NO;
  }
  if (!self.hasAmount) {
    return NO;
  }
  if (!self.hasHsl) {
    return NO;
  }
  if (!self.hasZdf) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTime) {
    [output writeUInt32:1 value:self.time];
  }
  if (self.hasOpen) {
    [output writeDouble:2 value:self.open];
  }
  if (self.hasHigh) {
    [output writeDouble:3 value:self.high];
  }
  if (self.hasClose) {
    [output writeDouble:4 value:self.close];
  }
  if (self.hasLow) {
    [output writeDouble:5 value:self.low];
  }
  if (self.hasVol) {
    [output writeDouble:6 value:self.vol];
  }
  if (self.hasAmount) {
    [output writeDouble:7 value:self.amount];
  }
  if (self.hasHsl) {
    [output writeDouble:8 value:self.hsl];
  }
  if (self.hasZdf) {
    [output writeDouble:9 value:self.zdf];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTime) {
    size_ += computeUInt32Size(1, self.time);
  }
  if (self.hasOpen) {
    size_ += computeDoubleSize(2, self.open);
  }
  if (self.hasHigh) {
    size_ += computeDoubleSize(3, self.high);
  }
  if (self.hasClose) {
    size_ += computeDoubleSize(4, self.close);
  }
  if (self.hasLow) {
    size_ += computeDoubleSize(5, self.low);
  }
  if (self.hasVol) {
    size_ += computeDoubleSize(6, self.vol);
  }
  if (self.hasAmount) {
    size_ += computeDoubleSize(7, self.amount);
  }
  if (self.hasHsl) {
    size_ += computeDoubleSize(8, self.hsl);
  }
  if (self.hasZdf) {
    size_ += computeDoubleSize(9, self.zdf);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_kline_result_msg*) parseFromData:(NSData*) data {
  return (s_kline_result_msg*)[[[s_kline_result_msg builder] mergeFromData:data] build];
}
+ (s_kline_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_kline_result_msg*)[[[s_kline_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_kline_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_kline_result_msg*)[[[s_kline_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_kline_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_kline_result_msg*)[[[s_kline_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_kline_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_kline_result_msg*)[[[s_kline_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_kline_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_kline_result_msg*)[[[s_kline_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_kline_result_msgBuilder*) builder {
  return [[s_kline_result_msgBuilder alloc] init];
}
+ (s_kline_result_msgBuilder*) builderWithPrototype:(s_kline_result_msg*) prototype {
  return [[s_kline_result_msg builder] mergeFrom:prototype];
}
- (s_kline_result_msgBuilder*) builder {
  return [s_kline_result_msg builder];
}
- (s_kline_result_msgBuilder*) toBuilder {
  return [s_kline_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  if (self.hasOpen) {
    [output appendFormat:@"%@%@: %@\n", indent, @"open", [NSNumber numberWithDouble:self.open]];
  }
  if (self.hasHigh) {
    [output appendFormat:@"%@%@: %@\n", indent, @"high", [NSNumber numberWithDouble:self.high]];
  }
  if (self.hasClose) {
    [output appendFormat:@"%@%@: %@\n", indent, @"close", [NSNumber numberWithDouble:self.close]];
  }
  if (self.hasLow) {
    [output appendFormat:@"%@%@: %@\n", indent, @"low", [NSNumber numberWithDouble:self.low]];
  }
  if (self.hasVol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vol", [NSNumber numberWithDouble:self.vol]];
  }
  if (self.hasAmount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"amount", [NSNumber numberWithDouble:self.amount]];
  }
  if (self.hasHsl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hsl", [NSNumber numberWithDouble:self.hsl]];
  }
  if (self.hasZdf) {
    [output appendFormat:@"%@%@: %@\n", indent, @"zdf", [NSNumber numberWithDouble:self.zdf]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  if (self.hasOpen) {
    [dictionary setObject: [NSNumber numberWithDouble:self.open] forKey: @"open"];
  }
  if (self.hasHigh) {
    [dictionary setObject: [NSNumber numberWithDouble:self.high] forKey: @"high"];
  }
  if (self.hasClose) {
    [dictionary setObject: [NSNumber numberWithDouble:self.close] forKey: @"close"];
  }
  if (self.hasLow) {
    [dictionary setObject: [NSNumber numberWithDouble:self.low] forKey: @"low"];
  }
  if (self.hasVol) {
    [dictionary setObject: [NSNumber numberWithDouble:self.vol] forKey: @"vol"];
  }
  if (self.hasAmount) {
    [dictionary setObject: [NSNumber numberWithDouble:self.amount] forKey: @"amount"];
  }
  if (self.hasHsl) {
    [dictionary setObject: [NSNumber numberWithDouble:self.hsl] forKey: @"hsl"];
  }
  if (self.hasZdf) {
    [dictionary setObject: [NSNumber numberWithDouble:self.zdf] forKey: @"zdf"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_kline_result_msg class]]) {
    return NO;
  }
  s_kline_result_msg *otherMessage = other;
  return
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasOpen == otherMessage.hasOpen &&
      (!self.hasOpen || self.open == otherMessage.open) &&
      self.hasHigh == otherMessage.hasHigh &&
      (!self.hasHigh || self.high == otherMessage.high) &&
      self.hasClose == otherMessage.hasClose &&
      (!self.hasClose || self.close == otherMessage.close) &&
      self.hasLow == otherMessage.hasLow &&
      (!self.hasLow || self.low == otherMessage.low) &&
      self.hasVol == otherMessage.hasVol &&
      (!self.hasVol || self.vol == otherMessage.vol) &&
      self.hasAmount == otherMessage.hasAmount &&
      (!self.hasAmount || self.amount == otherMessage.amount) &&
      self.hasHsl == otherMessage.hasHsl &&
      (!self.hasHsl || self.hsl == otherMessage.hsl) &&
      self.hasZdf == otherMessage.hasZdf &&
      (!self.hasZdf || self.zdf == otherMessage.zdf) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  if (self.hasOpen) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.open] hash];
  }
  if (self.hasHigh) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.high] hash];
  }
  if (self.hasClose) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.close] hash];
  }
  if (self.hasLow) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.low] hash];
  }
  if (self.hasVol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.vol] hash];
  }
  if (self.hasAmount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.amount] hash];
  }
  if (self.hasHsl) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.hsl] hash];
  }
  if (self.hasZdf) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.zdf] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_kline_result_msgBuilder()
@property (strong) s_kline_result_msg* resultSKlineResultMsg;
@end

@implementation s_kline_result_msgBuilder
@synthesize resultSKlineResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSKlineResultMsg = [[s_kline_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSKlineResultMsg;
}
- (s_kline_result_msgBuilder*) clear {
  self.resultSKlineResultMsg = [[s_kline_result_msg alloc] init];
  return self;
}
- (s_kline_result_msgBuilder*) clone {
  return [s_kline_result_msg builderWithPrototype:resultSKlineResultMsg];
}
- (s_kline_result_msg*) defaultInstance {
  return [s_kline_result_msg defaultInstance];
}
- (s_kline_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_kline_result_msg*) buildPartial {
  s_kline_result_msg* returnMe = resultSKlineResultMsg;
  self.resultSKlineResultMsg = nil;
  return returnMe;
}
- (s_kline_result_msgBuilder*) mergeFrom:(s_kline_result_msg*) other {
  if (other == [s_kline_result_msg defaultInstance]) {
    return self;
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasOpen) {
    [self setOpen:other.open];
  }
  if (other.hasHigh) {
    [self setHigh:other.high];
  }
  if (other.hasClose) {
    [self setClose:other.close];
  }
  if (other.hasLow) {
    [self setLow:other.low];
  }
  if (other.hasVol) {
    [self setVol:other.vol];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  if (other.hasHsl) {
    [self setHsl:other.hsl];
  }
  if (other.hasZdf) {
    [self setZdf:other.zdf];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_kline_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_kline_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTime:[input readUInt32]];
        break;
      }
      case 17: {
        [self setOpen:[input readDouble]];
        break;
      }
      case 25: {
        [self setHigh:[input readDouble]];
        break;
      }
      case 33: {
        [self setClose:[input readDouble]];
        break;
      }
      case 41: {
        [self setLow:[input readDouble]];
        break;
      }
      case 49: {
        [self setVol:[input readDouble]];
        break;
      }
      case 57: {
        [self setAmount:[input readDouble]];
        break;
      }
      case 65: {
        [self setHsl:[input readDouble]];
        break;
      }
      case 73: {
        [self setZdf:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasTime {
  return resultSKlineResultMsg.hasTime;
}
- (UInt32) time {
  return resultSKlineResultMsg.time;
}
- (s_kline_result_msgBuilder*) setTime:(UInt32) value {
  resultSKlineResultMsg.hasTime = YES;
  resultSKlineResultMsg.time = value;
  return self;
}
- (s_kline_result_msgBuilder*) clearTime {
  resultSKlineResultMsg.hasTime = NO;
  resultSKlineResultMsg.time = 0;
  return self;
}
- (BOOL) hasOpen {
  return resultSKlineResultMsg.hasOpen;
}
- (Float64) open {
  return resultSKlineResultMsg.open;
}
- (s_kline_result_msgBuilder*) setOpen:(Float64) value {
  resultSKlineResultMsg.hasOpen = YES;
  resultSKlineResultMsg.open = value;
  return self;
}
- (s_kline_result_msgBuilder*) clearOpen {
  resultSKlineResultMsg.hasOpen = NO;
  resultSKlineResultMsg.open = 0;
  return self;
}
- (BOOL) hasHigh {
  return resultSKlineResultMsg.hasHigh;
}
- (Float64) high {
  return resultSKlineResultMsg.high;
}
- (s_kline_result_msgBuilder*) setHigh:(Float64) value {
  resultSKlineResultMsg.hasHigh = YES;
  resultSKlineResultMsg.high = value;
  return self;
}
- (s_kline_result_msgBuilder*) clearHigh {
  resultSKlineResultMsg.hasHigh = NO;
  resultSKlineResultMsg.high = 0;
  return self;
}
- (BOOL) hasClose {
  return resultSKlineResultMsg.hasClose;
}
- (Float64) close {
  return resultSKlineResultMsg.close;
}
- (s_kline_result_msgBuilder*) setClose:(Float64) value {
  resultSKlineResultMsg.hasClose = YES;
  resultSKlineResultMsg.close = value;
  return self;
}
- (s_kline_result_msgBuilder*) clearClose {
  resultSKlineResultMsg.hasClose = NO;
  resultSKlineResultMsg.close = 0;
  return self;
}
- (BOOL) hasLow {
  return resultSKlineResultMsg.hasLow;
}
- (Float64) low {
  return resultSKlineResultMsg.low;
}
- (s_kline_result_msgBuilder*) setLow:(Float64) value {
  resultSKlineResultMsg.hasLow = YES;
  resultSKlineResultMsg.low = value;
  return self;
}
- (s_kline_result_msgBuilder*) clearLow {
  resultSKlineResultMsg.hasLow = NO;
  resultSKlineResultMsg.low = 0;
  return self;
}
- (BOOL) hasVol {
  return resultSKlineResultMsg.hasVol;
}
- (Float64) vol {
  return resultSKlineResultMsg.vol;
}
- (s_kline_result_msgBuilder*) setVol:(Float64) value {
  resultSKlineResultMsg.hasVol = YES;
  resultSKlineResultMsg.vol = value;
  return self;
}
- (s_kline_result_msgBuilder*) clearVol {
  resultSKlineResultMsg.hasVol = NO;
  resultSKlineResultMsg.vol = 0;
  return self;
}
- (BOOL) hasAmount {
  return resultSKlineResultMsg.hasAmount;
}
- (Float64) amount {
  return resultSKlineResultMsg.amount;
}
- (s_kline_result_msgBuilder*) setAmount:(Float64) value {
  resultSKlineResultMsg.hasAmount = YES;
  resultSKlineResultMsg.amount = value;
  return self;
}
- (s_kline_result_msgBuilder*) clearAmount {
  resultSKlineResultMsg.hasAmount = NO;
  resultSKlineResultMsg.amount = 0;
  return self;
}
- (BOOL) hasHsl {
  return resultSKlineResultMsg.hasHsl;
}
- (Float64) hsl {
  return resultSKlineResultMsg.hsl;
}
- (s_kline_result_msgBuilder*) setHsl:(Float64) value {
  resultSKlineResultMsg.hasHsl = YES;
  resultSKlineResultMsg.hsl = value;
  return self;
}
- (s_kline_result_msgBuilder*) clearHsl {
  resultSKlineResultMsg.hasHsl = NO;
  resultSKlineResultMsg.hsl = 0;
  return self;
}
- (BOOL) hasZdf {
  return resultSKlineResultMsg.hasZdf;
}
- (Float64) zdf {
  return resultSKlineResultMsg.zdf;
}
- (s_kline_result_msgBuilder*) setZdf:(Float64) value {
  resultSKlineResultMsg.hasZdf = YES;
  resultSKlineResultMsg.zdf = value;
  return self;
}
- (s_kline_result_msgBuilder*) clearZdf {
  resultSKlineResultMsg.hasZdf = NO;
  resultSKlineResultMsg.zdf = 0;
  return self;
}
@end

@interface s_kline_array_result_msg ()
@property (strong) NSMutableArray * klineDataArray;
@end

@implementation s_kline_array_result_msg

@synthesize klineDataArray;
@dynamic klineData;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_kline_array_result_msg* defaults_kline_array_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_kline_array_result_msg class]) {
    defaults_kline_array_result_msgInstance = [[s_kline_array_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_kline_array_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_kline_array_result_msgInstance;
}
- (NSArray *)klineData {
  return klineDataArray;
}
- (s_kline_result_msg*)klineDataAtIndex:(NSUInteger)index {
  return [klineDataArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitklineData = YES;
   [self.klineData enumerateObjectsUsingBlock:^(s_kline_result_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitklineData = NO;
      *stop = YES;
    }
  }];
  if (!isInitklineData) return isInitklineData;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.klineDataArray enumerateObjectsUsingBlock:^(s_kline_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.klineDataArray enumerateObjectsUsingBlock:^(s_kline_result_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_kline_array_result_msg*) parseFromData:(NSData*) data {
  return (s_kline_array_result_msg*)[[[s_kline_array_result_msg builder] mergeFromData:data] build];
}
+ (s_kline_array_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_kline_array_result_msg*)[[[s_kline_array_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_kline_array_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_kline_array_result_msg*)[[[s_kline_array_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_kline_array_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_kline_array_result_msg*)[[[s_kline_array_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_kline_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_kline_array_result_msg*)[[[s_kline_array_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_kline_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_kline_array_result_msg*)[[[s_kline_array_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_kline_array_result_msgBuilder*) builder {
  return [[s_kline_array_result_msgBuilder alloc] init];
}
+ (s_kline_array_result_msgBuilder*) builderWithPrototype:(s_kline_array_result_msg*) prototype {
  return [[s_kline_array_result_msg builder] mergeFrom:prototype];
}
- (s_kline_array_result_msgBuilder*) builder {
  return [s_kline_array_result_msg builder];
}
- (s_kline_array_result_msgBuilder*) toBuilder {
  return [s_kline_array_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.klineDataArray enumerateObjectsUsingBlock:^(s_kline_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"klineData"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_kline_result_msg* element in self.klineDataArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"klineData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_kline_array_result_msg class]]) {
    return NO;
  }
  s_kline_array_result_msg *otherMessage = other;
  return
      [self.klineDataArray isEqualToArray:otherMessage.klineDataArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.klineDataArray enumerateObjectsUsingBlock:^(s_kline_result_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_kline_array_result_msgBuilder()
@property (strong) s_kline_array_result_msg* resultSKlineArrayResultMsg;
@end

@implementation s_kline_array_result_msgBuilder
@synthesize resultSKlineArrayResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSKlineArrayResultMsg = [[s_kline_array_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSKlineArrayResultMsg;
}
- (s_kline_array_result_msgBuilder*) clear {
  self.resultSKlineArrayResultMsg = [[s_kline_array_result_msg alloc] init];
  return self;
}
- (s_kline_array_result_msgBuilder*) clone {
  return [s_kline_array_result_msg builderWithPrototype:resultSKlineArrayResultMsg];
}
- (s_kline_array_result_msg*) defaultInstance {
  return [s_kline_array_result_msg defaultInstance];
}
- (s_kline_array_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_kline_array_result_msg*) buildPartial {
  s_kline_array_result_msg* returnMe = resultSKlineArrayResultMsg;
  self.resultSKlineArrayResultMsg = nil;
  return returnMe;
}
- (s_kline_array_result_msgBuilder*) mergeFrom:(s_kline_array_result_msg*) other {
  if (other == [s_kline_array_result_msg defaultInstance]) {
    return self;
  }
  if (other.klineDataArray.count > 0) {
    if (resultSKlineArrayResultMsg.klineDataArray == nil) {
      resultSKlineArrayResultMsg.klineDataArray = [[NSMutableArray alloc] initWithArray:other.klineDataArray];
    } else {
      [resultSKlineArrayResultMsg.klineDataArray addObjectsFromArray:other.klineDataArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_kline_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_kline_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_kline_result_msgBuilder* subBuilder = [s_kline_result_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKlineData:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)klineData {
  return resultSKlineArrayResultMsg.klineDataArray;
}
- (s_kline_result_msg*)klineDataAtIndex:(NSUInteger)index {
  return [resultSKlineArrayResultMsg klineDataAtIndex:index];
}
- (s_kline_array_result_msgBuilder *)addKlineData:(s_kline_result_msg*)value {
  if (resultSKlineArrayResultMsg.klineDataArray == nil) {
    resultSKlineArrayResultMsg.klineDataArray = [[NSMutableArray alloc]init];
  }
  [resultSKlineArrayResultMsg.klineDataArray addObject:value];
  return self;
}
- (s_kline_array_result_msgBuilder *)setKlineDataArray:(NSArray *)array {
  resultSKlineArrayResultMsg.klineDataArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_kline_array_result_msgBuilder *)clearKlineData {
  resultSKlineArrayResultMsg.klineDataArray = nil;
  return self;
}
@end

@interface s_keep_msg ()
@property (strong) NSString* code;
@end

@implementation s_keep_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
  }
  return self;
}
static s_keep_msg* defaults_keep_msgInstance = nil;
+ (void) initialize {
  if (self == [s_keep_msg class]) {
    defaults_keep_msgInstance = [[s_keep_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_keep_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_keep_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_keep_msg*) parseFromData:(NSData*) data {
  return (s_keep_msg*)[[[s_keep_msg builder] mergeFromData:data] build];
}
+ (s_keep_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_keep_msg*)[[[s_keep_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_keep_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_keep_msg*)[[[s_keep_msg builder] mergeFromInputStream:input] build];
}
+ (s_keep_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_keep_msg*)[[[s_keep_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_keep_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_keep_msg*)[[[s_keep_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_keep_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_keep_msg*)[[[s_keep_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_keep_msgBuilder*) builder {
  return [[s_keep_msgBuilder alloc] init];
}
+ (s_keep_msgBuilder*) builderWithPrototype:(s_keep_msg*) prototype {
  return [[s_keep_msg builder] mergeFrom:prototype];
}
- (s_keep_msgBuilder*) builder {
  return [s_keep_msg builder];
}
- (s_keep_msgBuilder*) toBuilder {
  return [s_keep_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_keep_msg class]]) {
    return NO;
  }
  s_keep_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_keep_msgBuilder()
@property (strong) s_keep_msg* resultSKeepMsg;
@end

@implementation s_keep_msgBuilder
@synthesize resultSKeepMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSKeepMsg = [[s_keep_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSKeepMsg;
}
- (s_keep_msgBuilder*) clear {
  self.resultSKeepMsg = [[s_keep_msg alloc] init];
  return self;
}
- (s_keep_msgBuilder*) clone {
  return [s_keep_msg builderWithPrototype:resultSKeepMsg];
}
- (s_keep_msg*) defaultInstance {
  return [s_keep_msg defaultInstance];
}
- (s_keep_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_keep_msg*) buildPartial {
  s_keep_msg* returnMe = resultSKeepMsg;
  self.resultSKeepMsg = nil;
  return returnMe;
}
- (s_keep_msgBuilder*) mergeFrom:(s_keep_msg*) other {
  if (other == [s_keep_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_keep_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_keep_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSKeepMsg.hasCode;
}
- (NSString*) code {
  return resultSKeepMsg.code;
}
- (s_keep_msgBuilder*) setCode:(NSString*) value {
  resultSKeepMsg.hasCode = YES;
  resultSKeepMsg.code = value;
  return self;
}
- (s_keep_msgBuilder*) clearCode {
  resultSKeepMsg.hasCode = NO;
  resultSKeepMsg.code = @"";
  return self;
}
@end

@interface s_keep_result_msg ()
@property (strong) NSString* code;
@property (strong) NSString* name;
@property Float64 vol;
@property Float64 buyKeep;
@property Float64 sellKeep;
@property Float64 volDiu;
@property Float64 buyKeepDiu;
@property Float64 sellKeepDiu;
@end

@implementation s_keep_result_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasVol {
  return !!hasVol_;
}
- (void) setHasVol:(BOOL) _value_ {
  hasVol_ = !!_value_;
}
@synthesize vol;
- (BOOL) hasBuyKeep {
  return !!hasBuyKeep_;
}
- (void) setHasBuyKeep:(BOOL) _value_ {
  hasBuyKeep_ = !!_value_;
}
@synthesize buyKeep;
- (BOOL) hasSellKeep {
  return !!hasSellKeep_;
}
- (void) setHasSellKeep:(BOOL) _value_ {
  hasSellKeep_ = !!_value_;
}
@synthesize sellKeep;
- (BOOL) hasVolDiu {
  return !!hasVolDiu_;
}
- (void) setHasVolDiu:(BOOL) _value_ {
  hasVolDiu_ = !!_value_;
}
@synthesize volDiu;
- (BOOL) hasBuyKeepDiu {
  return !!hasBuyKeepDiu_;
}
- (void) setHasBuyKeepDiu:(BOOL) _value_ {
  hasBuyKeepDiu_ = !!_value_;
}
@synthesize buyKeepDiu;
- (BOOL) hasSellKeepDiu {
  return !!hasSellKeepDiu_;
}
- (void) setHasSellKeepDiu:(BOOL) _value_ {
  hasSellKeepDiu_ = !!_value_;
}
@synthesize sellKeepDiu;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.name = @"";
    self.vol = 0;
    self.buyKeep = 0;
    self.sellKeep = 0;
    self.volDiu = 0;
    self.buyKeepDiu = 0;
    self.sellKeepDiu = 0;
  }
  return self;
}
static s_keep_result_msg* defaults_keep_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_keep_result_msg class]) {
    defaults_keep_result_msgInstance = [[s_keep_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_keep_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_keep_result_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasVol) {
    return NO;
  }
  if (!self.hasBuyKeep) {
    return NO;
  }
  if (!self.hasSellKeep) {
    return NO;
  }
  if (!self.hasVolDiu) {
    return NO;
  }
  if (!self.hasBuyKeepDiu) {
    return NO;
  }
  if (!self.hasSellKeepDiu) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasVol) {
    [output writeDouble:3 value:self.vol];
  }
  if (self.hasBuyKeep) {
    [output writeDouble:4 value:self.buyKeep];
  }
  if (self.hasSellKeep) {
    [output writeDouble:5 value:self.sellKeep];
  }
  if (self.hasVolDiu) {
    [output writeDouble:6 value:self.volDiu];
  }
  if (self.hasBuyKeepDiu) {
    [output writeDouble:7 value:self.buyKeepDiu];
  }
  if (self.hasSellKeepDiu) {
    [output writeDouble:8 value:self.sellKeepDiu];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasVol) {
    size_ += computeDoubleSize(3, self.vol);
  }
  if (self.hasBuyKeep) {
    size_ += computeDoubleSize(4, self.buyKeep);
  }
  if (self.hasSellKeep) {
    size_ += computeDoubleSize(5, self.sellKeep);
  }
  if (self.hasVolDiu) {
    size_ += computeDoubleSize(6, self.volDiu);
  }
  if (self.hasBuyKeepDiu) {
    size_ += computeDoubleSize(7, self.buyKeepDiu);
  }
  if (self.hasSellKeepDiu) {
    size_ += computeDoubleSize(8, self.sellKeepDiu);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_keep_result_msg*) parseFromData:(NSData*) data {
  return (s_keep_result_msg*)[[[s_keep_result_msg builder] mergeFromData:data] build];
}
+ (s_keep_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_keep_result_msg*)[[[s_keep_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_keep_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_keep_result_msg*)[[[s_keep_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_keep_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_keep_result_msg*)[[[s_keep_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_keep_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_keep_result_msg*)[[[s_keep_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_keep_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_keep_result_msg*)[[[s_keep_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_keep_result_msgBuilder*) builder {
  return [[s_keep_result_msgBuilder alloc] init];
}
+ (s_keep_result_msgBuilder*) builderWithPrototype:(s_keep_result_msg*) prototype {
  return [[s_keep_result_msg builder] mergeFrom:prototype];
}
- (s_keep_result_msgBuilder*) builder {
  return [s_keep_result_msg builder];
}
- (s_keep_result_msgBuilder*) toBuilder {
  return [s_keep_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasVol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vol", [NSNumber numberWithDouble:self.vol]];
  }
  if (self.hasBuyKeep) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buyKeep", [NSNumber numberWithDouble:self.buyKeep]];
  }
  if (self.hasSellKeep) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sellKeep", [NSNumber numberWithDouble:self.sellKeep]];
  }
  if (self.hasVolDiu) {
    [output appendFormat:@"%@%@: %@\n", indent, @"volDiu", [NSNumber numberWithDouble:self.volDiu]];
  }
  if (self.hasBuyKeepDiu) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buyKeepDiu", [NSNumber numberWithDouble:self.buyKeepDiu]];
  }
  if (self.hasSellKeepDiu) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sellKeepDiu", [NSNumber numberWithDouble:self.sellKeepDiu]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasVol) {
    [dictionary setObject: [NSNumber numberWithDouble:self.vol] forKey: @"vol"];
  }
  if (self.hasBuyKeep) {
    [dictionary setObject: [NSNumber numberWithDouble:self.buyKeep] forKey: @"buyKeep"];
  }
  if (self.hasSellKeep) {
    [dictionary setObject: [NSNumber numberWithDouble:self.sellKeep] forKey: @"sellKeep"];
  }
  if (self.hasVolDiu) {
    [dictionary setObject: [NSNumber numberWithDouble:self.volDiu] forKey: @"volDiu"];
  }
  if (self.hasBuyKeepDiu) {
    [dictionary setObject: [NSNumber numberWithDouble:self.buyKeepDiu] forKey: @"buyKeepDiu"];
  }
  if (self.hasSellKeepDiu) {
    [dictionary setObject: [NSNumber numberWithDouble:self.sellKeepDiu] forKey: @"sellKeepDiu"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_keep_result_msg class]]) {
    return NO;
  }
  s_keep_result_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasVol == otherMessage.hasVol &&
      (!self.hasVol || self.vol == otherMessage.vol) &&
      self.hasBuyKeep == otherMessage.hasBuyKeep &&
      (!self.hasBuyKeep || self.buyKeep == otherMessage.buyKeep) &&
      self.hasSellKeep == otherMessage.hasSellKeep &&
      (!self.hasSellKeep || self.sellKeep == otherMessage.sellKeep) &&
      self.hasVolDiu == otherMessage.hasVolDiu &&
      (!self.hasVolDiu || self.volDiu == otherMessage.volDiu) &&
      self.hasBuyKeepDiu == otherMessage.hasBuyKeepDiu &&
      (!self.hasBuyKeepDiu || self.buyKeepDiu == otherMessage.buyKeepDiu) &&
      self.hasSellKeepDiu == otherMessage.hasSellKeepDiu &&
      (!self.hasSellKeepDiu || self.sellKeepDiu == otherMessage.sellKeepDiu) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasVol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.vol] hash];
  }
  if (self.hasBuyKeep) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.buyKeep] hash];
  }
  if (self.hasSellKeep) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.sellKeep] hash];
  }
  if (self.hasVolDiu) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.volDiu] hash];
  }
  if (self.hasBuyKeepDiu) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.buyKeepDiu] hash];
  }
  if (self.hasSellKeepDiu) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.sellKeepDiu] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_keep_result_msgBuilder()
@property (strong) s_keep_result_msg* resultSKeepResultMsg;
@end

@implementation s_keep_result_msgBuilder
@synthesize resultSKeepResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSKeepResultMsg = [[s_keep_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSKeepResultMsg;
}
- (s_keep_result_msgBuilder*) clear {
  self.resultSKeepResultMsg = [[s_keep_result_msg alloc] init];
  return self;
}
- (s_keep_result_msgBuilder*) clone {
  return [s_keep_result_msg builderWithPrototype:resultSKeepResultMsg];
}
- (s_keep_result_msg*) defaultInstance {
  return [s_keep_result_msg defaultInstance];
}
- (s_keep_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_keep_result_msg*) buildPartial {
  s_keep_result_msg* returnMe = resultSKeepResultMsg;
  self.resultSKeepResultMsg = nil;
  return returnMe;
}
- (s_keep_result_msgBuilder*) mergeFrom:(s_keep_result_msg*) other {
  if (other == [s_keep_result_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasVol) {
    [self setVol:other.vol];
  }
  if (other.hasBuyKeep) {
    [self setBuyKeep:other.buyKeep];
  }
  if (other.hasSellKeep) {
    [self setSellKeep:other.sellKeep];
  }
  if (other.hasVolDiu) {
    [self setVolDiu:other.volDiu];
  }
  if (other.hasBuyKeepDiu) {
    [self setBuyKeepDiu:other.buyKeepDiu];
  }
  if (other.hasSellKeepDiu) {
    [self setSellKeepDiu:other.sellKeepDiu];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_keep_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_keep_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 25: {
        [self setVol:[input readDouble]];
        break;
      }
      case 33: {
        [self setBuyKeep:[input readDouble]];
        break;
      }
      case 41: {
        [self setSellKeep:[input readDouble]];
        break;
      }
      case 49: {
        [self setVolDiu:[input readDouble]];
        break;
      }
      case 57: {
        [self setBuyKeepDiu:[input readDouble]];
        break;
      }
      case 65: {
        [self setSellKeepDiu:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSKeepResultMsg.hasCode;
}
- (NSString*) code {
  return resultSKeepResultMsg.code;
}
- (s_keep_result_msgBuilder*) setCode:(NSString*) value {
  resultSKeepResultMsg.hasCode = YES;
  resultSKeepResultMsg.code = value;
  return self;
}
- (s_keep_result_msgBuilder*) clearCode {
  resultSKeepResultMsg.hasCode = NO;
  resultSKeepResultMsg.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultSKeepResultMsg.hasName;
}
- (NSString*) name {
  return resultSKeepResultMsg.name;
}
- (s_keep_result_msgBuilder*) setName:(NSString*) value {
  resultSKeepResultMsg.hasName = YES;
  resultSKeepResultMsg.name = value;
  return self;
}
- (s_keep_result_msgBuilder*) clearName {
  resultSKeepResultMsg.hasName = NO;
  resultSKeepResultMsg.name = @"";
  return self;
}
- (BOOL) hasVol {
  return resultSKeepResultMsg.hasVol;
}
- (Float64) vol {
  return resultSKeepResultMsg.vol;
}
- (s_keep_result_msgBuilder*) setVol:(Float64) value {
  resultSKeepResultMsg.hasVol = YES;
  resultSKeepResultMsg.vol = value;
  return self;
}
- (s_keep_result_msgBuilder*) clearVol {
  resultSKeepResultMsg.hasVol = NO;
  resultSKeepResultMsg.vol = 0;
  return self;
}
- (BOOL) hasBuyKeep {
  return resultSKeepResultMsg.hasBuyKeep;
}
- (Float64) buyKeep {
  return resultSKeepResultMsg.buyKeep;
}
- (s_keep_result_msgBuilder*) setBuyKeep:(Float64) value {
  resultSKeepResultMsg.hasBuyKeep = YES;
  resultSKeepResultMsg.buyKeep = value;
  return self;
}
- (s_keep_result_msgBuilder*) clearBuyKeep {
  resultSKeepResultMsg.hasBuyKeep = NO;
  resultSKeepResultMsg.buyKeep = 0;
  return self;
}
- (BOOL) hasSellKeep {
  return resultSKeepResultMsg.hasSellKeep;
}
- (Float64) sellKeep {
  return resultSKeepResultMsg.sellKeep;
}
- (s_keep_result_msgBuilder*) setSellKeep:(Float64) value {
  resultSKeepResultMsg.hasSellKeep = YES;
  resultSKeepResultMsg.sellKeep = value;
  return self;
}
- (s_keep_result_msgBuilder*) clearSellKeep {
  resultSKeepResultMsg.hasSellKeep = NO;
  resultSKeepResultMsg.sellKeep = 0;
  return self;
}
- (BOOL) hasVolDiu {
  return resultSKeepResultMsg.hasVolDiu;
}
- (Float64) volDiu {
  return resultSKeepResultMsg.volDiu;
}
- (s_keep_result_msgBuilder*) setVolDiu:(Float64) value {
  resultSKeepResultMsg.hasVolDiu = YES;
  resultSKeepResultMsg.volDiu = value;
  return self;
}
- (s_keep_result_msgBuilder*) clearVolDiu {
  resultSKeepResultMsg.hasVolDiu = NO;
  resultSKeepResultMsg.volDiu = 0;
  return self;
}
- (BOOL) hasBuyKeepDiu {
  return resultSKeepResultMsg.hasBuyKeepDiu;
}
- (Float64) buyKeepDiu {
  return resultSKeepResultMsg.buyKeepDiu;
}
- (s_keep_result_msgBuilder*) setBuyKeepDiu:(Float64) value {
  resultSKeepResultMsg.hasBuyKeepDiu = YES;
  resultSKeepResultMsg.buyKeepDiu = value;
  return self;
}
- (s_keep_result_msgBuilder*) clearBuyKeepDiu {
  resultSKeepResultMsg.hasBuyKeepDiu = NO;
  resultSKeepResultMsg.buyKeepDiu = 0;
  return self;
}
- (BOOL) hasSellKeepDiu {
  return resultSKeepResultMsg.hasSellKeepDiu;
}
- (Float64) sellKeepDiu {
  return resultSKeepResultMsg.sellKeepDiu;
}
- (s_keep_result_msgBuilder*) setSellKeepDiu:(Float64) value {
  resultSKeepResultMsg.hasSellKeepDiu = YES;
  resultSKeepResultMsg.sellKeepDiu = value;
  return self;
}
- (s_keep_result_msgBuilder*) clearSellKeepDiu {
  resultSKeepResultMsg.hasSellKeepDiu = NO;
  resultSKeepResultMsg.sellKeepDiu = 0;
  return self;
}
@end

@interface s_keep_array_result_msg ()
@property (strong) NSMutableArray * keepDataArray;
@end

@implementation s_keep_array_result_msg

@synthesize keepDataArray;
@dynamic keepData;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_keep_array_result_msg* defaults_keep_array_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_keep_array_result_msg class]) {
    defaults_keep_array_result_msgInstance = [[s_keep_array_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_keep_array_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_keep_array_result_msgInstance;
}
- (NSArray *)keepData {
  return keepDataArray;
}
- (s_keep_result_msg*)keepDataAtIndex:(NSUInteger)index {
  return [keepDataArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitkeepData = YES;
   [self.keepData enumerateObjectsUsingBlock:^(s_keep_result_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitkeepData = NO;
      *stop = YES;
    }
  }];
  if (!isInitkeepData) return isInitkeepData;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.keepDataArray enumerateObjectsUsingBlock:^(s_keep_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.keepDataArray enumerateObjectsUsingBlock:^(s_keep_result_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_keep_array_result_msg*) parseFromData:(NSData*) data {
  return (s_keep_array_result_msg*)[[[s_keep_array_result_msg builder] mergeFromData:data] build];
}
+ (s_keep_array_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_keep_array_result_msg*)[[[s_keep_array_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_keep_array_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_keep_array_result_msg*)[[[s_keep_array_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_keep_array_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_keep_array_result_msg*)[[[s_keep_array_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_keep_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_keep_array_result_msg*)[[[s_keep_array_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_keep_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_keep_array_result_msg*)[[[s_keep_array_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_keep_array_result_msgBuilder*) builder {
  return [[s_keep_array_result_msgBuilder alloc] init];
}
+ (s_keep_array_result_msgBuilder*) builderWithPrototype:(s_keep_array_result_msg*) prototype {
  return [[s_keep_array_result_msg builder] mergeFrom:prototype];
}
- (s_keep_array_result_msgBuilder*) builder {
  return [s_keep_array_result_msg builder];
}
- (s_keep_array_result_msgBuilder*) toBuilder {
  return [s_keep_array_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.keepDataArray enumerateObjectsUsingBlock:^(s_keep_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"keepData"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_keep_result_msg* element in self.keepDataArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"keepData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_keep_array_result_msg class]]) {
    return NO;
  }
  s_keep_array_result_msg *otherMessage = other;
  return
      [self.keepDataArray isEqualToArray:otherMessage.keepDataArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.keepDataArray enumerateObjectsUsingBlock:^(s_keep_result_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_keep_array_result_msgBuilder()
@property (strong) s_keep_array_result_msg* resultSKeepArrayResultMsg;
@end

@implementation s_keep_array_result_msgBuilder
@synthesize resultSKeepArrayResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSKeepArrayResultMsg = [[s_keep_array_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSKeepArrayResultMsg;
}
- (s_keep_array_result_msgBuilder*) clear {
  self.resultSKeepArrayResultMsg = [[s_keep_array_result_msg alloc] init];
  return self;
}
- (s_keep_array_result_msgBuilder*) clone {
  return [s_keep_array_result_msg builderWithPrototype:resultSKeepArrayResultMsg];
}
- (s_keep_array_result_msg*) defaultInstance {
  return [s_keep_array_result_msg defaultInstance];
}
- (s_keep_array_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_keep_array_result_msg*) buildPartial {
  s_keep_array_result_msg* returnMe = resultSKeepArrayResultMsg;
  self.resultSKeepArrayResultMsg = nil;
  return returnMe;
}
- (s_keep_array_result_msgBuilder*) mergeFrom:(s_keep_array_result_msg*) other {
  if (other == [s_keep_array_result_msg defaultInstance]) {
    return self;
  }
  if (other.keepDataArray.count > 0) {
    if (resultSKeepArrayResultMsg.keepDataArray == nil) {
      resultSKeepArrayResultMsg.keepDataArray = [[NSMutableArray alloc] initWithArray:other.keepDataArray];
    } else {
      [resultSKeepArrayResultMsg.keepDataArray addObjectsFromArray:other.keepDataArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_keep_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_keep_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_keep_result_msgBuilder* subBuilder = [s_keep_result_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKeepData:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)keepData {
  return resultSKeepArrayResultMsg.keepDataArray;
}
- (s_keep_result_msg*)keepDataAtIndex:(NSUInteger)index {
  return [resultSKeepArrayResultMsg keepDataAtIndex:index];
}
- (s_keep_array_result_msgBuilder *)addKeepData:(s_keep_result_msg*)value {
  if (resultSKeepArrayResultMsg.keepDataArray == nil) {
    resultSKeepArrayResultMsg.keepDataArray = [[NSMutableArray alloc]init];
  }
  [resultSKeepArrayResultMsg.keepDataArray addObject:value];
  return self;
}
- (s_keep_array_result_msgBuilder *)setKeepDataArray:(NSArray *)array {
  resultSKeepArrayResultMsg.keepDataArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_keep_array_result_msgBuilder *)clearKeepData {
  resultSKeepArrayResultMsg.keepDataArray = nil;
  return self;
}
@end

@interface s_minute_msg ()
@property (strong) NSString* code;
@property (strong) data_selector* selector;
@end

@implementation s_minute_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasSelector {
  return !!hasSelector_;
}
- (void) setHasSelector:(BOOL) _value_ {
  hasSelector_ = !!_value_;
}
@synthesize selector;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.selector = [data_selector defaultInstance];
  }
  return self;
}
static s_minute_msg* defaults_minute_msgInstance = nil;
+ (void) initialize {
  if (self == [s_minute_msg class]) {
    defaults_minute_msgInstance = [[s_minute_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_minute_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_minute_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasSelector) {
    return NO;
  }
  if (!self.selector.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasSelector) {
    [output writeMessage:2 value:self.selector];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasSelector) {
    size_ += computeMessageSize(2, self.selector);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_minute_msg*) parseFromData:(NSData*) data {
  return (s_minute_msg*)[[[s_minute_msg builder] mergeFromData:data] build];
}
+ (s_minute_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_minute_msg*)[[[s_minute_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_minute_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_minute_msg*)[[[s_minute_msg builder] mergeFromInputStream:input] build];
}
+ (s_minute_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_minute_msg*)[[[s_minute_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_minute_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_minute_msg*)[[[s_minute_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_minute_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_minute_msg*)[[[s_minute_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_minute_msgBuilder*) builder {
  return [[s_minute_msgBuilder alloc] init];
}
+ (s_minute_msgBuilder*) builderWithPrototype:(s_minute_msg*) prototype {
  return [[s_minute_msg builder] mergeFrom:prototype];
}
- (s_minute_msgBuilder*) builder {
  return [s_minute_msg builder];
}
- (s_minute_msgBuilder*) toBuilder {
  return [s_minute_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasSelector) {
    [output appendFormat:@"%@%@ {\n", indent, @"selector"];
    [self.selector writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasSelector) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.selector storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"selector"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_minute_msg class]]) {
    return NO;
  }
  s_minute_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasSelector == otherMessage.hasSelector &&
      (!self.hasSelector || [self.selector isEqual:otherMessage.selector]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasSelector) {
    hashCode = hashCode * 31 + [self.selector hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_minute_msgBuilder()
@property (strong) s_minute_msg* resultSMinuteMsg;
@end

@implementation s_minute_msgBuilder
@synthesize resultSMinuteMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSMinuteMsg = [[s_minute_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSMinuteMsg;
}
- (s_minute_msgBuilder*) clear {
  self.resultSMinuteMsg = [[s_minute_msg alloc] init];
  return self;
}
- (s_minute_msgBuilder*) clone {
  return [s_minute_msg builderWithPrototype:resultSMinuteMsg];
}
- (s_minute_msg*) defaultInstance {
  return [s_minute_msg defaultInstance];
}
- (s_minute_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_minute_msg*) buildPartial {
  s_minute_msg* returnMe = resultSMinuteMsg;
  self.resultSMinuteMsg = nil;
  return returnMe;
}
- (s_minute_msgBuilder*) mergeFrom:(s_minute_msg*) other {
  if (other == [s_minute_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasSelector) {
    [self mergeSelector:other.selector];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_minute_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_minute_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        data_selectorBuilder* subBuilder = [data_selector builder];
        if (self.hasSelector) {
          [subBuilder mergeFrom:self.selector];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSelector:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSMinuteMsg.hasCode;
}
- (NSString*) code {
  return resultSMinuteMsg.code;
}
- (s_minute_msgBuilder*) setCode:(NSString*) value {
  resultSMinuteMsg.hasCode = YES;
  resultSMinuteMsg.code = value;
  return self;
}
- (s_minute_msgBuilder*) clearCode {
  resultSMinuteMsg.hasCode = NO;
  resultSMinuteMsg.code = @"";
  return self;
}
- (BOOL) hasSelector {
  return resultSMinuteMsg.hasSelector;
}
- (data_selector*) selector {
  return resultSMinuteMsg.selector;
}
- (s_minute_msgBuilder*) setSelector:(data_selector*) value {
  resultSMinuteMsg.hasSelector = YES;
  resultSMinuteMsg.selector = value;
  return self;
}
- (s_minute_msgBuilder*) setSelectorBuilder:(data_selectorBuilder*) builderForValue {
  return [self setSelector:[builderForValue build]];
}
- (s_minute_msgBuilder*) mergeSelector:(data_selector*) value {
  if (resultSMinuteMsg.hasSelector &&
      resultSMinuteMsg.selector != [data_selector defaultInstance]) {
    resultSMinuteMsg.selector =
      [[[data_selector builderWithPrototype:resultSMinuteMsg.selector] mergeFrom:value] buildPartial];
  } else {
    resultSMinuteMsg.selector = value;
  }
  resultSMinuteMsg.hasSelector = YES;
  return self;
}
- (s_minute_msgBuilder*) clearSelector {
  resultSMinuteMsg.hasSelector = NO;
  resultSMinuteMsg.selector = [data_selector defaultInstance];
  return self;
}
@end

@interface s_minute_result_msg ()
@property UInt32 time;
@property Float64 price;
@property Float64 vol;
@property Float64 amount;
@end

@implementation s_minute_result_msg

- (BOOL) hasTime {
  return !!hasTime_;
}
- (void) setHasTime:(BOOL) _value_ {
  hasTime_ = !!_value_;
}
@synthesize time;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) _value_ {
  hasPrice_ = !!_value_;
}
@synthesize price;
- (BOOL) hasVol {
  return !!hasVol_;
}
- (void) setHasVol:(BOOL) _value_ {
  hasVol_ = !!_value_;
}
@synthesize vol;
- (BOOL) hasAmount {
  return !!hasAmount_;
}
- (void) setHasAmount:(BOOL) _value_ {
  hasAmount_ = !!_value_;
}
@synthesize amount;
- (instancetype) init {
  if ((self = [super init])) {
    self.time = 0;
    self.price = 0;
    self.vol = 0;
    self.amount = 0;
  }
  return self;
}
static s_minute_result_msg* defaults_minute_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_minute_result_msg class]) {
    defaults_minute_result_msgInstance = [[s_minute_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_minute_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_minute_result_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTime) {
    return NO;
  }
  if (!self.hasPrice) {
    return NO;
  }
  if (!self.hasVol) {
    return NO;
  }
  if (!self.hasAmount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTime) {
    [output writeUInt32:1 value:self.time];
  }
  if (self.hasPrice) {
    [output writeDouble:2 value:self.price];
  }
  if (self.hasVol) {
    [output writeDouble:3 value:self.vol];
  }
  if (self.hasAmount) {
    [output writeDouble:4 value:self.amount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTime) {
    size_ += computeUInt32Size(1, self.time);
  }
  if (self.hasPrice) {
    size_ += computeDoubleSize(2, self.price);
  }
  if (self.hasVol) {
    size_ += computeDoubleSize(3, self.vol);
  }
  if (self.hasAmount) {
    size_ += computeDoubleSize(4, self.amount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_minute_result_msg*) parseFromData:(NSData*) data {
  return (s_minute_result_msg*)[[[s_minute_result_msg builder] mergeFromData:data] build];
}
+ (s_minute_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_minute_result_msg*)[[[s_minute_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_minute_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_minute_result_msg*)[[[s_minute_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_minute_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_minute_result_msg*)[[[s_minute_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_minute_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_minute_result_msg*)[[[s_minute_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_minute_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_minute_result_msg*)[[[s_minute_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_minute_result_msgBuilder*) builder {
  return [[s_minute_result_msgBuilder alloc] init];
}
+ (s_minute_result_msgBuilder*) builderWithPrototype:(s_minute_result_msg*) prototype {
  return [[s_minute_result_msg builder] mergeFrom:prototype];
}
- (s_minute_result_msgBuilder*) builder {
  return [s_minute_result_msg builder];
}
- (s_minute_result_msgBuilder*) toBuilder {
  return [s_minute_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"time", [NSNumber numberWithInteger:self.time]];
  }
  if (self.hasPrice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"price", [NSNumber numberWithDouble:self.price]];
  }
  if (self.hasVol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vol", [NSNumber numberWithDouble:self.vol]];
  }
  if (self.hasAmount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"amount", [NSNumber numberWithDouble:self.amount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.time] forKey: @"time"];
  }
  if (self.hasPrice) {
    [dictionary setObject: [NSNumber numberWithDouble:self.price] forKey: @"price"];
  }
  if (self.hasVol) {
    [dictionary setObject: [NSNumber numberWithDouble:self.vol] forKey: @"vol"];
  }
  if (self.hasAmount) {
    [dictionary setObject: [NSNumber numberWithDouble:self.amount] forKey: @"amount"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_minute_result_msg class]]) {
    return NO;
  }
  s_minute_result_msg *otherMessage = other;
  return
      self.hasTime == otherMessage.hasTime &&
      (!self.hasTime || self.time == otherMessage.time) &&
      self.hasPrice == otherMessage.hasPrice &&
      (!self.hasPrice || self.price == otherMessage.price) &&
      self.hasVol == otherMessage.hasVol &&
      (!self.hasVol || self.vol == otherMessage.vol) &&
      self.hasAmount == otherMessage.hasAmount &&
      (!self.hasAmount || self.amount == otherMessage.amount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.time] hash];
  }
  if (self.hasPrice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.price] hash];
  }
  if (self.hasVol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.vol] hash];
  }
  if (self.hasAmount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.amount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_minute_result_msgBuilder()
@property (strong) s_minute_result_msg* resultSMinuteResultMsg;
@end

@implementation s_minute_result_msgBuilder
@synthesize resultSMinuteResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSMinuteResultMsg = [[s_minute_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSMinuteResultMsg;
}
- (s_minute_result_msgBuilder*) clear {
  self.resultSMinuteResultMsg = [[s_minute_result_msg alloc] init];
  return self;
}
- (s_minute_result_msgBuilder*) clone {
  return [s_minute_result_msg builderWithPrototype:resultSMinuteResultMsg];
}
- (s_minute_result_msg*) defaultInstance {
  return [s_minute_result_msg defaultInstance];
}
- (s_minute_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_minute_result_msg*) buildPartial {
  s_minute_result_msg* returnMe = resultSMinuteResultMsg;
  self.resultSMinuteResultMsg = nil;
  return returnMe;
}
- (s_minute_result_msgBuilder*) mergeFrom:(s_minute_result_msg*) other {
  if (other == [s_minute_result_msg defaultInstance]) {
    return self;
  }
  if (other.hasTime) {
    [self setTime:other.time];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  if (other.hasVol) {
    [self setVol:other.vol];
  }
  if (other.hasAmount) {
    [self setAmount:other.amount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_minute_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_minute_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTime:[input readUInt32]];
        break;
      }
      case 17: {
        [self setPrice:[input readDouble]];
        break;
      }
      case 25: {
        [self setVol:[input readDouble]];
        break;
      }
      case 33: {
        [self setAmount:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasTime {
  return resultSMinuteResultMsg.hasTime;
}
- (UInt32) time {
  return resultSMinuteResultMsg.time;
}
- (s_minute_result_msgBuilder*) setTime:(UInt32) value {
  resultSMinuteResultMsg.hasTime = YES;
  resultSMinuteResultMsg.time = value;
  return self;
}
- (s_minute_result_msgBuilder*) clearTime {
  resultSMinuteResultMsg.hasTime = NO;
  resultSMinuteResultMsg.time = 0;
  return self;
}
- (BOOL) hasPrice {
  return resultSMinuteResultMsg.hasPrice;
}
- (Float64) price {
  return resultSMinuteResultMsg.price;
}
- (s_minute_result_msgBuilder*) setPrice:(Float64) value {
  resultSMinuteResultMsg.hasPrice = YES;
  resultSMinuteResultMsg.price = value;
  return self;
}
- (s_minute_result_msgBuilder*) clearPrice {
  resultSMinuteResultMsg.hasPrice = NO;
  resultSMinuteResultMsg.price = 0;
  return self;
}
- (BOOL) hasVol {
  return resultSMinuteResultMsg.hasVol;
}
- (Float64) vol {
  return resultSMinuteResultMsg.vol;
}
- (s_minute_result_msgBuilder*) setVol:(Float64) value {
  resultSMinuteResultMsg.hasVol = YES;
  resultSMinuteResultMsg.vol = value;
  return self;
}
- (s_minute_result_msgBuilder*) clearVol {
  resultSMinuteResultMsg.hasVol = NO;
  resultSMinuteResultMsg.vol = 0;
  return self;
}
- (BOOL) hasAmount {
  return resultSMinuteResultMsg.hasAmount;
}
- (Float64) amount {
  return resultSMinuteResultMsg.amount;
}
- (s_minute_result_msgBuilder*) setAmount:(Float64) value {
  resultSMinuteResultMsg.hasAmount = YES;
  resultSMinuteResultMsg.amount = value;
  return self;
}
- (s_minute_result_msgBuilder*) clearAmount {
  resultSMinuteResultMsg.hasAmount = NO;
  resultSMinuteResultMsg.amount = 0;
  return self;
}
@end

@interface s_minute_array_result_msg ()
@property (strong) NSMutableArray * minuteDataArray;
@end

@implementation s_minute_array_result_msg

@synthesize minuteDataArray;
@dynamic minuteData;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_minute_array_result_msg* defaults_minute_array_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_minute_array_result_msg class]) {
    defaults_minute_array_result_msgInstance = [[s_minute_array_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_minute_array_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_minute_array_result_msgInstance;
}
- (NSArray *)minuteData {
  return minuteDataArray;
}
- (s_minute_result_msg*)minuteDataAtIndex:(NSUInteger)index {
  return [minuteDataArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitminuteData = YES;
   [self.minuteData enumerateObjectsUsingBlock:^(s_minute_result_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitminuteData = NO;
      *stop = YES;
    }
  }];
  if (!isInitminuteData) return isInitminuteData;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.minuteDataArray enumerateObjectsUsingBlock:^(s_minute_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.minuteDataArray enumerateObjectsUsingBlock:^(s_minute_result_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_minute_array_result_msg*) parseFromData:(NSData*) data {
  return (s_minute_array_result_msg*)[[[s_minute_array_result_msg builder] mergeFromData:data] build];
}
+ (s_minute_array_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_minute_array_result_msg*)[[[s_minute_array_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_minute_array_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_minute_array_result_msg*)[[[s_minute_array_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_minute_array_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_minute_array_result_msg*)[[[s_minute_array_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_minute_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_minute_array_result_msg*)[[[s_minute_array_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_minute_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_minute_array_result_msg*)[[[s_minute_array_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_minute_array_result_msgBuilder*) builder {
  return [[s_minute_array_result_msgBuilder alloc] init];
}
+ (s_minute_array_result_msgBuilder*) builderWithPrototype:(s_minute_array_result_msg*) prototype {
  return [[s_minute_array_result_msg builder] mergeFrom:prototype];
}
- (s_minute_array_result_msgBuilder*) builder {
  return [s_minute_array_result_msg builder];
}
- (s_minute_array_result_msgBuilder*) toBuilder {
  return [s_minute_array_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.minuteDataArray enumerateObjectsUsingBlock:^(s_minute_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"minuteData"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_minute_result_msg* element in self.minuteDataArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"minuteData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_minute_array_result_msg class]]) {
    return NO;
  }
  s_minute_array_result_msg *otherMessage = other;
  return
      [self.minuteDataArray isEqualToArray:otherMessage.minuteDataArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.minuteDataArray enumerateObjectsUsingBlock:^(s_minute_result_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_minute_array_result_msgBuilder()
@property (strong) s_minute_array_result_msg* resultSMinuteArrayResultMsg;
@end

@implementation s_minute_array_result_msgBuilder
@synthesize resultSMinuteArrayResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSMinuteArrayResultMsg = [[s_minute_array_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSMinuteArrayResultMsg;
}
- (s_minute_array_result_msgBuilder*) clear {
  self.resultSMinuteArrayResultMsg = [[s_minute_array_result_msg alloc] init];
  return self;
}
- (s_minute_array_result_msgBuilder*) clone {
  return [s_minute_array_result_msg builderWithPrototype:resultSMinuteArrayResultMsg];
}
- (s_minute_array_result_msg*) defaultInstance {
  return [s_minute_array_result_msg defaultInstance];
}
- (s_minute_array_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_minute_array_result_msg*) buildPartial {
  s_minute_array_result_msg* returnMe = resultSMinuteArrayResultMsg;
  self.resultSMinuteArrayResultMsg = nil;
  return returnMe;
}
- (s_minute_array_result_msgBuilder*) mergeFrom:(s_minute_array_result_msg*) other {
  if (other == [s_minute_array_result_msg defaultInstance]) {
    return self;
  }
  if (other.minuteDataArray.count > 0) {
    if (resultSMinuteArrayResultMsg.minuteDataArray == nil) {
      resultSMinuteArrayResultMsg.minuteDataArray = [[NSMutableArray alloc] initWithArray:other.minuteDataArray];
    } else {
      [resultSMinuteArrayResultMsg.minuteDataArray addObjectsFromArray:other.minuteDataArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_minute_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_minute_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_minute_result_msgBuilder* subBuilder = [s_minute_result_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMinuteData:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)minuteData {
  return resultSMinuteArrayResultMsg.minuteDataArray;
}
- (s_minute_result_msg*)minuteDataAtIndex:(NSUInteger)index {
  return [resultSMinuteArrayResultMsg minuteDataAtIndex:index];
}
- (s_minute_array_result_msgBuilder *)addMinuteData:(s_minute_result_msg*)value {
  if (resultSMinuteArrayResultMsg.minuteDataArray == nil) {
    resultSMinuteArrayResultMsg.minuteDataArray = [[NSMutableArray alloc]init];
  }
  [resultSMinuteArrayResultMsg.minuteDataArray addObject:value];
  return self;
}
- (s_minute_array_result_msgBuilder *)setMinuteDataArray:(NSArray *)array {
  resultSMinuteArrayResultMsg.minuteDataArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_minute_array_result_msgBuilder *)clearMinuteData {
  resultSMinuteArrayResultMsg.minuteDataArray = nil;
  return self;
}
@end

@interface search_stock_msg ()
@property (strong) NSString* searchString;
@property SInt32 totalCount;
@property SInt32 offset;
@property (strong) data_selector* selector;
@end

@implementation search_stock_msg

- (BOOL) hasSearchString {
  return !!hasSearchString_;
}
- (void) setHasSearchString:(BOOL) _value_ {
  hasSearchString_ = !!_value_;
}
@synthesize searchString;
- (BOOL) hasTotalCount {
  return !!hasTotalCount_;
}
- (void) setHasTotalCount:(BOOL) _value_ {
  hasTotalCount_ = !!_value_;
}
@synthesize totalCount;
- (BOOL) hasOffset {
  return !!hasOffset_;
}
- (void) setHasOffset:(BOOL) _value_ {
  hasOffset_ = !!_value_;
}
@synthesize offset;
- (BOOL) hasSelector {
  return !!hasSelector_;
}
- (void) setHasSelector:(BOOL) _value_ {
  hasSelector_ = !!_value_;
}
@synthesize selector;
- (instancetype) init {
  if ((self = [super init])) {
    self.searchString = @"";
    self.totalCount = 20;
    self.offset = 0;
    self.selector = [data_selector defaultInstance];
  }
  return self;
}
static search_stock_msg* defaultsearch_stock_msgInstance = nil;
+ (void) initialize {
  if (self == [search_stock_msg class]) {
    defaultsearch_stock_msgInstance = [[search_stock_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultsearch_stock_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultsearch_stock_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSearchString) {
    return NO;
  }
  if (!self.hasSelector) {
    return NO;
  }
  if (!self.selector.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSearchString) {
    [output writeString:1 value:self.searchString];
  }
  if (self.hasTotalCount) {
    [output writeInt32:2 value:self.totalCount];
  }
  if (self.hasOffset) {
    [output writeInt32:3 value:self.offset];
  }
  if (self.hasSelector) {
    [output writeMessage:4 value:self.selector];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSearchString) {
    size_ += computeStringSize(1, self.searchString);
  }
  if (self.hasTotalCount) {
    size_ += computeInt32Size(2, self.totalCount);
  }
  if (self.hasOffset) {
    size_ += computeInt32Size(3, self.offset);
  }
  if (self.hasSelector) {
    size_ += computeMessageSize(4, self.selector);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (search_stock_msg*) parseFromData:(NSData*) data {
  return (search_stock_msg*)[[[search_stock_msg builder] mergeFromData:data] build];
}
+ (search_stock_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (search_stock_msg*)[[[search_stock_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (search_stock_msg*) parseFromInputStream:(NSInputStream*) input {
  return (search_stock_msg*)[[[search_stock_msg builder] mergeFromInputStream:input] build];
}
+ (search_stock_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (search_stock_msg*)[[[search_stock_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (search_stock_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (search_stock_msg*)[[[search_stock_msg builder] mergeFromCodedInputStream:input] build];
}
+ (search_stock_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (search_stock_msg*)[[[search_stock_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (search_stock_msgBuilder*) builder {
  return [[search_stock_msgBuilder alloc] init];
}
+ (search_stock_msgBuilder*) builderWithPrototype:(search_stock_msg*) prototype {
  return [[search_stock_msg builder] mergeFrom:prototype];
}
- (search_stock_msgBuilder*) builder {
  return [search_stock_msg builder];
}
- (search_stock_msgBuilder*) toBuilder {
  return [search_stock_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSearchString) {
    [output appendFormat:@"%@%@: %@\n", indent, @"searchString", self.searchString];
  }
  if (self.hasTotalCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalCount", [NSNumber numberWithInteger:self.totalCount]];
  }
  if (self.hasOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"offset", [NSNumber numberWithInteger:self.offset]];
  }
  if (self.hasSelector) {
    [output appendFormat:@"%@%@ {\n", indent, @"selector"];
    [self.selector writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSearchString) {
    [dictionary setObject: self.searchString forKey: @"searchString"];
  }
  if (self.hasTotalCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.totalCount] forKey: @"totalCount"];
  }
  if (self.hasOffset) {
    [dictionary setObject: [NSNumber numberWithInteger:self.offset] forKey: @"offset"];
  }
  if (self.hasSelector) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.selector storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"selector"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[search_stock_msg class]]) {
    return NO;
  }
  search_stock_msg *otherMessage = other;
  return
      self.hasSearchString == otherMessage.hasSearchString &&
      (!self.hasSearchString || [self.searchString isEqual:otherMessage.searchString]) &&
      self.hasTotalCount == otherMessage.hasTotalCount &&
      (!self.hasTotalCount || self.totalCount == otherMessage.totalCount) &&
      self.hasOffset == otherMessage.hasOffset &&
      (!self.hasOffset || self.offset == otherMessage.offset) &&
      self.hasSelector == otherMessage.hasSelector &&
      (!self.hasSelector || [self.selector isEqual:otherMessage.selector]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSearchString) {
    hashCode = hashCode * 31 + [self.searchString hash];
  }
  if (self.hasTotalCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.totalCount] hash];
  }
  if (self.hasOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.offset] hash];
  }
  if (self.hasSelector) {
    hashCode = hashCode * 31 + [self.selector hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface search_stock_msgBuilder()
@property (strong) search_stock_msg* resultSearchStockMsg;
@end

@implementation search_stock_msgBuilder
@synthesize resultSearchStockMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSearchStockMsg = [[search_stock_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSearchStockMsg;
}
- (search_stock_msgBuilder*) clear {
  self.resultSearchStockMsg = [[search_stock_msg alloc] init];
  return self;
}
- (search_stock_msgBuilder*) clone {
  return [search_stock_msg builderWithPrototype:resultSearchStockMsg];
}
- (search_stock_msg*) defaultInstance {
  return [search_stock_msg defaultInstance];
}
- (search_stock_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (search_stock_msg*) buildPartial {
  search_stock_msg* returnMe = resultSearchStockMsg;
  self.resultSearchStockMsg = nil;
  return returnMe;
}
- (search_stock_msgBuilder*) mergeFrom:(search_stock_msg*) other {
  if (other == [search_stock_msg defaultInstance]) {
    return self;
  }
  if (other.hasSearchString) {
    [self setSearchString:other.searchString];
  }
  if (other.hasTotalCount) {
    [self setTotalCount:other.totalCount];
  }
  if (other.hasOffset) {
    [self setOffset:other.offset];
  }
  if (other.hasSelector) {
    [self mergeSelector:other.selector];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (search_stock_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (search_stock_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSearchString:[input readString]];
        break;
      }
      case 16: {
        [self setTotalCount:[input readInt32]];
        break;
      }
      case 24: {
        [self setOffset:[input readInt32]];
        break;
      }
      case 34: {
        data_selectorBuilder* subBuilder = [data_selector builder];
        if (self.hasSelector) {
          [subBuilder mergeFrom:self.selector];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSelector:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasSearchString {
  return resultSearchStockMsg.hasSearchString;
}
- (NSString*) searchString {
  return resultSearchStockMsg.searchString;
}
- (search_stock_msgBuilder*) setSearchString:(NSString*) value {
  resultSearchStockMsg.hasSearchString = YES;
  resultSearchStockMsg.searchString = value;
  return self;
}
- (search_stock_msgBuilder*) clearSearchString {
  resultSearchStockMsg.hasSearchString = NO;
  resultSearchStockMsg.searchString = @"";
  return self;
}
- (BOOL) hasTotalCount {
  return resultSearchStockMsg.hasTotalCount;
}
- (SInt32) totalCount {
  return resultSearchStockMsg.totalCount;
}
- (search_stock_msgBuilder*) setTotalCount:(SInt32) value {
  resultSearchStockMsg.hasTotalCount = YES;
  resultSearchStockMsg.totalCount = value;
  return self;
}
- (search_stock_msgBuilder*) clearTotalCount {
  resultSearchStockMsg.hasTotalCount = NO;
  resultSearchStockMsg.totalCount = 20;
  return self;
}
- (BOOL) hasOffset {
  return resultSearchStockMsg.hasOffset;
}
- (SInt32) offset {
  return resultSearchStockMsg.offset;
}
- (search_stock_msgBuilder*) setOffset:(SInt32) value {
  resultSearchStockMsg.hasOffset = YES;
  resultSearchStockMsg.offset = value;
  return self;
}
- (search_stock_msgBuilder*) clearOffset {
  resultSearchStockMsg.hasOffset = NO;
  resultSearchStockMsg.offset = 0;
  return self;
}
- (BOOL) hasSelector {
  return resultSearchStockMsg.hasSelector;
}
- (data_selector*) selector {
  return resultSearchStockMsg.selector;
}
- (search_stock_msgBuilder*) setSelector:(data_selector*) value {
  resultSearchStockMsg.hasSelector = YES;
  resultSearchStockMsg.selector = value;
  return self;
}
- (search_stock_msgBuilder*) setSelectorBuilder:(data_selectorBuilder*) builderForValue {
  return [self setSelector:[builderForValue build]];
}
- (search_stock_msgBuilder*) mergeSelector:(data_selector*) value {
  if (resultSearchStockMsg.hasSelector &&
      resultSearchStockMsg.selector != [data_selector defaultInstance]) {
    resultSearchStockMsg.selector =
      [[[data_selector builderWithPrototype:resultSearchStockMsg.selector] mergeFrom:value] buildPartial];
  } else {
    resultSearchStockMsg.selector = value;
  }
  resultSearchStockMsg.hasSelector = YES;
  return self;
}
- (search_stock_msgBuilder*) clearSelector {
  resultSearchStockMsg.hasSelector = NO;
  resultSearchStockMsg.selector = [data_selector defaultInstance];
  return self;
}
@end

@interface search_stock_result_msg ()
@property (strong) NSString* code;
@property (strong) NSString* name;
@end

@implementation search_stock_result_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.name = @"";
  }
  return self;
}
static search_stock_result_msg* defaultsearch_stock_result_msgInstance = nil;
+ (void) initialize {
  if (self == [search_stock_result_msg class]) {
    defaultsearch_stock_result_msgInstance = [[search_stock_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultsearch_stock_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultsearch_stock_result_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (search_stock_result_msg*) parseFromData:(NSData*) data {
  return (search_stock_result_msg*)[[[search_stock_result_msg builder] mergeFromData:data] build];
}
+ (search_stock_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (search_stock_result_msg*)[[[search_stock_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (search_stock_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (search_stock_result_msg*)[[[search_stock_result_msg builder] mergeFromInputStream:input] build];
}
+ (search_stock_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (search_stock_result_msg*)[[[search_stock_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (search_stock_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (search_stock_result_msg*)[[[search_stock_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (search_stock_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (search_stock_result_msg*)[[[search_stock_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (search_stock_result_msgBuilder*) builder {
  return [[search_stock_result_msgBuilder alloc] init];
}
+ (search_stock_result_msgBuilder*) builderWithPrototype:(search_stock_result_msg*) prototype {
  return [[search_stock_result_msg builder] mergeFrom:prototype];
}
- (search_stock_result_msgBuilder*) builder {
  return [search_stock_result_msg builder];
}
- (search_stock_result_msgBuilder*) toBuilder {
  return [search_stock_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[search_stock_result_msg class]]) {
    return NO;
  }
  search_stock_result_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface search_stock_result_msgBuilder()
@property (strong) search_stock_result_msg* resultSearchStockResultMsg;
@end

@implementation search_stock_result_msgBuilder
@synthesize resultSearchStockResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSearchStockResultMsg = [[search_stock_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSearchStockResultMsg;
}
- (search_stock_result_msgBuilder*) clear {
  self.resultSearchStockResultMsg = [[search_stock_result_msg alloc] init];
  return self;
}
- (search_stock_result_msgBuilder*) clone {
  return [search_stock_result_msg builderWithPrototype:resultSearchStockResultMsg];
}
- (search_stock_result_msg*) defaultInstance {
  return [search_stock_result_msg defaultInstance];
}
- (search_stock_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (search_stock_result_msg*) buildPartial {
  search_stock_result_msg* returnMe = resultSearchStockResultMsg;
  self.resultSearchStockResultMsg = nil;
  return returnMe;
}
- (search_stock_result_msgBuilder*) mergeFrom:(search_stock_result_msg*) other {
  if (other == [search_stock_result_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (search_stock_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (search_stock_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSearchStockResultMsg.hasCode;
}
- (NSString*) code {
  return resultSearchStockResultMsg.code;
}
- (search_stock_result_msgBuilder*) setCode:(NSString*) value {
  resultSearchStockResultMsg.hasCode = YES;
  resultSearchStockResultMsg.code = value;
  return self;
}
- (search_stock_result_msgBuilder*) clearCode {
  resultSearchStockResultMsg.hasCode = NO;
  resultSearchStockResultMsg.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultSearchStockResultMsg.hasName;
}
- (NSString*) name {
  return resultSearchStockResultMsg.name;
}
- (search_stock_result_msgBuilder*) setName:(NSString*) value {
  resultSearchStockResultMsg.hasName = YES;
  resultSearchStockResultMsg.name = value;
  return self;
}
- (search_stock_result_msgBuilder*) clearName {
  resultSearchStockResultMsg.hasName = NO;
  resultSearchStockResultMsg.name = @"";
  return self;
}
@end

@interface search_stock_array_result_msg ()
@property (strong) NSMutableArray * stockDataArray;
@end

@implementation search_stock_array_result_msg

@synthesize stockDataArray;
@dynamic stockData;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static search_stock_array_result_msg* defaultsearch_stock_array_result_msgInstance = nil;
+ (void) initialize {
  if (self == [search_stock_array_result_msg class]) {
    defaultsearch_stock_array_result_msgInstance = [[search_stock_array_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultsearch_stock_array_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultsearch_stock_array_result_msgInstance;
}
- (NSArray *)stockData {
  return stockDataArray;
}
- (search_stock_result_msg*)stockDataAtIndex:(NSUInteger)index {
  return [stockDataArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitstockData = YES;
   [self.stockData enumerateObjectsUsingBlock:^(search_stock_result_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitstockData = NO;
      *stop = YES;
    }
  }];
  if (!isInitstockData) return isInitstockData;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.stockDataArray enumerateObjectsUsingBlock:^(search_stock_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.stockDataArray enumerateObjectsUsingBlock:^(search_stock_result_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (search_stock_array_result_msg*) parseFromData:(NSData*) data {
  return (search_stock_array_result_msg*)[[[search_stock_array_result_msg builder] mergeFromData:data] build];
}
+ (search_stock_array_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (search_stock_array_result_msg*)[[[search_stock_array_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (search_stock_array_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (search_stock_array_result_msg*)[[[search_stock_array_result_msg builder] mergeFromInputStream:input] build];
}
+ (search_stock_array_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (search_stock_array_result_msg*)[[[search_stock_array_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (search_stock_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (search_stock_array_result_msg*)[[[search_stock_array_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (search_stock_array_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (search_stock_array_result_msg*)[[[search_stock_array_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (search_stock_array_result_msgBuilder*) builder {
  return [[search_stock_array_result_msgBuilder alloc] init];
}
+ (search_stock_array_result_msgBuilder*) builderWithPrototype:(search_stock_array_result_msg*) prototype {
  return [[search_stock_array_result_msg builder] mergeFrom:prototype];
}
- (search_stock_array_result_msgBuilder*) builder {
  return [search_stock_array_result_msg builder];
}
- (search_stock_array_result_msgBuilder*) toBuilder {
  return [search_stock_array_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.stockDataArray enumerateObjectsUsingBlock:^(search_stock_result_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"stockData"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (search_stock_result_msg* element in self.stockDataArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"stockData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[search_stock_array_result_msg class]]) {
    return NO;
  }
  search_stock_array_result_msg *otherMessage = other;
  return
      [self.stockDataArray isEqualToArray:otherMessage.stockDataArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.stockDataArray enumerateObjectsUsingBlock:^(search_stock_result_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface search_stock_array_result_msgBuilder()
@property (strong) search_stock_array_result_msg* resultSearchStockArrayResultMsg;
@end

@implementation search_stock_array_result_msgBuilder
@synthesize resultSearchStockArrayResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSearchStockArrayResultMsg = [[search_stock_array_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSearchStockArrayResultMsg;
}
- (search_stock_array_result_msgBuilder*) clear {
  self.resultSearchStockArrayResultMsg = [[search_stock_array_result_msg alloc] init];
  return self;
}
- (search_stock_array_result_msgBuilder*) clone {
  return [search_stock_array_result_msg builderWithPrototype:resultSearchStockArrayResultMsg];
}
- (search_stock_array_result_msg*) defaultInstance {
  return [search_stock_array_result_msg defaultInstance];
}
- (search_stock_array_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (search_stock_array_result_msg*) buildPartial {
  search_stock_array_result_msg* returnMe = resultSearchStockArrayResultMsg;
  self.resultSearchStockArrayResultMsg = nil;
  return returnMe;
}
- (search_stock_array_result_msgBuilder*) mergeFrom:(search_stock_array_result_msg*) other {
  if (other == [search_stock_array_result_msg defaultInstance]) {
    return self;
  }
  if (other.stockDataArray.count > 0) {
    if (resultSearchStockArrayResultMsg.stockDataArray == nil) {
      resultSearchStockArrayResultMsg.stockDataArray = [[NSMutableArray alloc] initWithArray:other.stockDataArray];
    } else {
      [resultSearchStockArrayResultMsg.stockDataArray addObjectsFromArray:other.stockDataArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (search_stock_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (search_stock_array_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        search_stock_result_msgBuilder* subBuilder = [search_stock_result_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addStockData:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)stockData {
  return resultSearchStockArrayResultMsg.stockDataArray;
}
- (search_stock_result_msg*)stockDataAtIndex:(NSUInteger)index {
  return [resultSearchStockArrayResultMsg stockDataAtIndex:index];
}
- (search_stock_array_result_msgBuilder *)addStockData:(search_stock_result_msg*)value {
  if (resultSearchStockArrayResultMsg.stockDataArray == nil) {
    resultSearchStockArrayResultMsg.stockDataArray = [[NSMutableArray alloc]init];
  }
  [resultSearchStockArrayResultMsg.stockDataArray addObject:value];
  return self;
}
- (search_stock_array_result_msgBuilder *)setStockDataArray:(NSArray *)array {
  resultSearchStockArrayResultMsg.stockDataArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (search_stock_array_result_msgBuilder *)clearStockData {
  resultSearchStockArrayResultMsg.stockDataArray = nil;
  return self;
}
@end

@interface s_board_report_data_msg ()
@property UInt32 blockCode;
@property UInt32 blockOffset;
@property UInt32 count;
@property colum_type sortColum;
@property BOOL isAsc;
@property (strong) PBAppendableArray * columArrayArray;
@end

@implementation s_board_report_data_msg

- (BOOL) hasBlockCode {
  return !!hasBlockCode_;
}
- (void) setHasBlockCode:(BOOL) _value_ {
  hasBlockCode_ = !!_value_;
}
@synthesize blockCode;
- (BOOL) hasBlockOffset {
  return !!hasBlockOffset_;
}
- (void) setHasBlockOffset:(BOOL) _value_ {
  hasBlockOffset_ = !!_value_;
}
@synthesize blockOffset;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) _value_ {
  hasCount_ = !!_value_;
}
@synthesize count;
- (BOOL) hasSortColum {
  return !!hasSortColum_;
}
- (void) setHasSortColum:(BOOL) _value_ {
  hasSortColum_ = !!_value_;
}
@synthesize sortColum;
- (BOOL) hasIsAsc {
  return !!hasIsAsc_;
}
- (void) setHasIsAsc:(BOOL) _value_ {
  hasIsAsc_ = !!_value_;
}
- (BOOL) isAsc {
  return !!isAsc_;
}
- (void) setIsAsc:(BOOL) _value_ {
  isAsc_ = !!_value_;
}
@synthesize columArrayArray;
@dynamic columArray;
- (instancetype) init {
  if ((self = [super init])) {
    self.blockCode = 0;
    self.blockOffset = 0;
    self.count = 0;
    self.sortColum = colum_typeColIndex;
    self.isAsc = NO;
  }
  return self;
}
static s_board_report_data_msg* defaults_board_report_data_msgInstance = nil;
+ (void) initialize {
  if (self == [s_board_report_data_msg class]) {
    defaults_board_report_data_msgInstance = [[s_board_report_data_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_board_report_data_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_board_report_data_msgInstance;
}
- (PBArray *)columArray {
  return columArrayArray;
}
- (colum_type)columArrayAtIndex:(NSUInteger)index {
  return (colum_type)[columArrayArray enumAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasBlockCode) {
    return NO;
  }
  if (!self.hasBlockOffset) {
    return NO;
  }
  if (!self.hasCount) {
    return NO;
  }
  if (!self.hasSortColum) {
    return NO;
  }
  if (!self.hasIsAsc) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBlockCode) {
    [output writeUInt32:1 value:self.blockCode];
  }
  if (self.hasBlockOffset) {
    [output writeUInt32:2 value:self.blockOffset];
  }
  if (self.hasCount) {
    [output writeUInt32:3 value:self.count];
  }
  if (self.hasSortColum) {
    [output writeEnum:4 value:self.sortColum];
  }
  if (self.hasIsAsc) {
    [output writeBool:5 value:self.isAsc];
  }
  const NSUInteger columArrayArrayCount = self.columArrayArray.count;
  const colum_type *columArrayArrayValues = (const colum_type *)self.columArrayArray.data;
  for (NSUInteger i = 0; i < columArrayArrayCount; ++i) {
    [output writeEnum:6 value:columArrayArrayValues[i]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBlockCode) {
    size_ += computeUInt32Size(1, self.blockCode);
  }
  if (self.hasBlockOffset) {
    size_ += computeUInt32Size(2, self.blockOffset);
  }
  if (self.hasCount) {
    size_ += computeUInt32Size(3, self.count);
  }
  if (self.hasSortColum) {
    size_ += computeEnumSize(4, self.sortColum);
  }
  if (self.hasIsAsc) {
    size_ += computeBoolSize(5, self.isAsc);
  }
  {
    SInt32 dataSize = 0;
    const NSUInteger count = self.columArrayArray.count;
    const colum_type *values = (const colum_type *)self.columArrayArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeEnumSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_board_report_data_msg*) parseFromData:(NSData*) data {
  return (s_board_report_data_msg*)[[[s_board_report_data_msg builder] mergeFromData:data] build];
}
+ (s_board_report_data_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_board_report_data_msg*)[[[s_board_report_data_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_board_report_data_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_board_report_data_msg*)[[[s_board_report_data_msg builder] mergeFromInputStream:input] build];
}
+ (s_board_report_data_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_board_report_data_msg*)[[[s_board_report_data_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_board_report_data_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_board_report_data_msg*)[[[s_board_report_data_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_board_report_data_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_board_report_data_msg*)[[[s_board_report_data_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_board_report_data_msgBuilder*) builder {
  return [[s_board_report_data_msgBuilder alloc] init];
}
+ (s_board_report_data_msgBuilder*) builderWithPrototype:(s_board_report_data_msg*) prototype {
  return [[s_board_report_data_msg builder] mergeFrom:prototype];
}
- (s_board_report_data_msgBuilder*) builder {
  return [s_board_report_data_msg builder];
}
- (s_board_report_data_msgBuilder*) toBuilder {
  return [s_board_report_data_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBlockCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blockCode", [NSNumber numberWithInteger:self.blockCode]];
  }
  if (self.hasBlockOffset) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blockOffset", [NSNumber numberWithInteger:self.blockOffset]];
  }
  if (self.hasCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"count", [NSNumber numberWithInteger:self.count]];
  }
  if (self.hasSortColum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sortColum", NSStringFromcolum_type(self.sortColum)];
  }
  if (self.hasIsAsc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isAsc", [NSNumber numberWithBool:self.isAsc]];
  }
  [self.columArrayArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"columArray", NSStringFromcolum_type([(NSNumber *)element intValue])];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBlockCode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.blockCode] forKey: @"blockCode"];
  }
  if (self.hasBlockOffset) {
    [dictionary setObject: [NSNumber numberWithInteger:self.blockOffset] forKey: @"blockOffset"];
  }
  if (self.hasCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.count] forKey: @"count"];
  }
  if (self.hasSortColum) {
    [dictionary setObject: @(self.sortColum) forKey: @"sortColum"];
  }
  if (self.hasIsAsc) {
    [dictionary setObject: [NSNumber numberWithBool:self.isAsc] forKey: @"isAsc"];
  }
  const NSUInteger columArrayArrayCount = self.columArrayArray.count;
  if (columArrayArrayCount > 0) {
    const colum_type *columArrayArrayValues = (const colum_type *)self.columArrayArray.data;
    NSMutableArray * columArrayArrayArray = [NSMutableArray new];
    for (NSUInteger i = 0; i < columArrayArrayCount; ++i) {
      [columArrayArrayArray addObject: @(columArrayArrayValues[i])];
    }
    [dictionary setObject: columArrayArrayArray forKey: @"columArray"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_board_report_data_msg class]]) {
    return NO;
  }
  s_board_report_data_msg *otherMessage = other;
  return
      self.hasBlockCode == otherMessage.hasBlockCode &&
      (!self.hasBlockCode || self.blockCode == otherMessage.blockCode) &&
      self.hasBlockOffset == otherMessage.hasBlockOffset &&
      (!self.hasBlockOffset || self.blockOffset == otherMessage.blockOffset) &&
      self.hasCount == otherMessage.hasCount &&
      (!self.hasCount || self.count == otherMessage.count) &&
      self.hasSortColum == otherMessage.hasSortColum &&
      (!self.hasSortColum || self.sortColum == otherMessage.sortColum) &&
      self.hasIsAsc == otherMessage.hasIsAsc &&
      (!self.hasIsAsc || self.isAsc == otherMessage.isAsc) &&
      [self.columArrayArray isEqualToArray:otherMessage.columArrayArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBlockCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.blockCode] hash];
  }
  if (self.hasBlockOffset) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.blockOffset] hash];
  }
  if (self.hasCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.count] hash];
  }
  if (self.hasSortColum) {
    hashCode = hashCode * 31 + self.sortColum;
  }
  if (self.hasIsAsc) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isAsc] hash];
  }
  [self.columArrayArray enumerateObjectsUsingBlock:^(NSNumber* element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + element.longValue;
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_board_report_data_msgBuilder()
@property (strong) s_board_report_data_msg* resultSBoardReportDataMsg;
@end

@implementation s_board_report_data_msgBuilder
@synthesize resultSBoardReportDataMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBoardReportDataMsg = [[s_board_report_data_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBoardReportDataMsg;
}
- (s_board_report_data_msgBuilder*) clear {
  self.resultSBoardReportDataMsg = [[s_board_report_data_msg alloc] init];
  return self;
}
- (s_board_report_data_msgBuilder*) clone {
  return [s_board_report_data_msg builderWithPrototype:resultSBoardReportDataMsg];
}
- (s_board_report_data_msg*) defaultInstance {
  return [s_board_report_data_msg defaultInstance];
}
- (s_board_report_data_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_board_report_data_msg*) buildPartial {
  s_board_report_data_msg* returnMe = resultSBoardReportDataMsg;
  self.resultSBoardReportDataMsg = nil;
  return returnMe;
}
- (s_board_report_data_msgBuilder*) mergeFrom:(s_board_report_data_msg*) other {
  if (other == [s_board_report_data_msg defaultInstance]) {
    return self;
  }
  if (other.hasBlockCode) {
    [self setBlockCode:other.blockCode];
  }
  if (other.hasBlockOffset) {
    [self setBlockOffset:other.blockOffset];
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  if (other.hasSortColum) {
    [self setSortColum:other.sortColum];
  }
  if (other.hasIsAsc) {
    [self setIsAsc:other.isAsc];
  }
  if (other.columArrayArray.count > 0) {
    if (resultSBoardReportDataMsg.columArrayArray == nil) {
      resultSBoardReportDataMsg.columArrayArray = [other.columArrayArray copy];
    } else {
      [resultSBoardReportDataMsg.columArrayArray appendArray:other.columArrayArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_board_report_data_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_board_report_data_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBlockCode:[input readUInt32]];
        break;
      }
      case 16: {
        [self setBlockOffset:[input readUInt32]];
        break;
      }
      case 24: {
        [self setCount:[input readUInt32]];
        break;
      }
      case 32: {
        colum_type value = (colum_type)[input readEnum];
        if (colum_typeIsValidValue(value)) {
          [self setSortColum:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setIsAsc:[input readBool]];
        break;
      }
      case 48: {
        colum_type value = (colum_type)[input readEnum];
        if (colum_typeIsValidValue(value)) {
          [self addColumArray:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasBlockCode {
  return resultSBoardReportDataMsg.hasBlockCode;
}
- (UInt32) blockCode {
  return resultSBoardReportDataMsg.blockCode;
}
- (s_board_report_data_msgBuilder*) setBlockCode:(UInt32) value {
  resultSBoardReportDataMsg.hasBlockCode = YES;
  resultSBoardReportDataMsg.blockCode = value;
  return self;
}
- (s_board_report_data_msgBuilder*) clearBlockCode {
  resultSBoardReportDataMsg.hasBlockCode = NO;
  resultSBoardReportDataMsg.blockCode = 0;
  return self;
}
- (BOOL) hasBlockOffset {
  return resultSBoardReportDataMsg.hasBlockOffset;
}
- (UInt32) blockOffset {
  return resultSBoardReportDataMsg.blockOffset;
}
- (s_board_report_data_msgBuilder*) setBlockOffset:(UInt32) value {
  resultSBoardReportDataMsg.hasBlockOffset = YES;
  resultSBoardReportDataMsg.blockOffset = value;
  return self;
}
- (s_board_report_data_msgBuilder*) clearBlockOffset {
  resultSBoardReportDataMsg.hasBlockOffset = NO;
  resultSBoardReportDataMsg.blockOffset = 0;
  return self;
}
- (BOOL) hasCount {
  return resultSBoardReportDataMsg.hasCount;
}
- (UInt32) count {
  return resultSBoardReportDataMsg.count;
}
- (s_board_report_data_msgBuilder*) setCount:(UInt32) value {
  resultSBoardReportDataMsg.hasCount = YES;
  resultSBoardReportDataMsg.count = value;
  return self;
}
- (s_board_report_data_msgBuilder*) clearCount {
  resultSBoardReportDataMsg.hasCount = NO;
  resultSBoardReportDataMsg.count = 0;
  return self;
}
- (BOOL) hasSortColum {
  return resultSBoardReportDataMsg.hasSortColum;
}
- (colum_type) sortColum {
  return resultSBoardReportDataMsg.sortColum;
}
- (s_board_report_data_msgBuilder*) setSortColum:(colum_type) value {
  resultSBoardReportDataMsg.hasSortColum = YES;
  resultSBoardReportDataMsg.sortColum = value;
  return self;
}
- (s_board_report_data_msgBuilder*) clearSortColum {
  resultSBoardReportDataMsg.hasSortColum = NO;
  resultSBoardReportDataMsg.sortColum = colum_typeColIndex;
  return self;
}
- (BOOL) hasIsAsc {
  return resultSBoardReportDataMsg.hasIsAsc;
}
- (BOOL) isAsc {
  return resultSBoardReportDataMsg.isAsc;
}
- (s_board_report_data_msgBuilder*) setIsAsc:(BOOL) value {
  resultSBoardReportDataMsg.hasIsAsc = YES;
  resultSBoardReportDataMsg.isAsc = value;
  return self;
}
- (s_board_report_data_msgBuilder*) clearIsAsc {
  resultSBoardReportDataMsg.hasIsAsc = NO;
  resultSBoardReportDataMsg.isAsc = NO;
  return self;
}
- (PBAppendableArray *)columArray {
  return resultSBoardReportDataMsg.columArrayArray;
}
- (colum_type)columArrayAtIndex:(NSUInteger)index {
  return [resultSBoardReportDataMsg columArrayAtIndex:index];
}
- (s_board_report_data_msgBuilder *)addColumArray:(colum_type)value {
  if (resultSBoardReportDataMsg.columArrayArray == nil) {
    resultSBoardReportDataMsg.columArrayArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [resultSBoardReportDataMsg.columArrayArray addEnum:value];
  return self;
}
- (s_board_report_data_msgBuilder *)setColumArrayArray:(NSArray *)array {
  resultSBoardReportDataMsg.columArrayArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (s_board_report_data_msgBuilder *)setColumArrayValues:(const colum_type *)values count:(NSUInteger)count {
  resultSBoardReportDataMsg.columArrayArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (s_board_report_data_msgBuilder *)clearColumArray {
  resultSBoardReportDataMsg.columArrayArray = nil;
  return self;
}
@end

@interface s_board_report_colum_data_msg ()
@property colum_type key;
@property Float64 value;
@property (strong) NSString* strvalue;
@end

@implementation s_board_report_colum_data_msg

- (BOOL) hasKey {
  return !!hasKey_;
}
- (void) setHasKey:(BOOL) _value_ {
  hasKey_ = !!_value_;
}
@synthesize key;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) _value_ {
  hasValue_ = !!_value_;
}
@synthesize value;
- (BOOL) hasStrvalue {
  return !!hasStrvalue_;
}
- (void) setHasStrvalue:(BOOL) _value_ {
  hasStrvalue_ = !!_value_;
}
@synthesize strvalue;
- (instancetype) init {
  if ((self = [super init])) {
    self.key = colum_typeColIndex;
    self.value = 0;
    self.strvalue = @"";
  }
  return self;
}
static s_board_report_colum_data_msg* defaults_board_report_colum_data_msgInstance = nil;
+ (void) initialize {
  if (self == [s_board_report_colum_data_msg class]) {
    defaults_board_report_colum_data_msgInstance = [[s_board_report_colum_data_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_board_report_colum_data_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_board_report_colum_data_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasKey) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKey) {
    [output writeEnum:1 value:self.key];
  }
  if (self.hasValue) {
    [output writeDouble:2 value:self.value];
  }
  if (self.hasStrvalue) {
    [output writeString:3 value:self.strvalue];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasKey) {
    size_ += computeEnumSize(1, self.key);
  }
  if (self.hasValue) {
    size_ += computeDoubleSize(2, self.value);
  }
  if (self.hasStrvalue) {
    size_ += computeStringSize(3, self.strvalue);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_board_report_colum_data_msg*) parseFromData:(NSData*) data {
  return (s_board_report_colum_data_msg*)[[[s_board_report_colum_data_msg builder] mergeFromData:data] build];
}
+ (s_board_report_colum_data_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_board_report_colum_data_msg*)[[[s_board_report_colum_data_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_board_report_colum_data_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_board_report_colum_data_msg*)[[[s_board_report_colum_data_msg builder] mergeFromInputStream:input] build];
}
+ (s_board_report_colum_data_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_board_report_colum_data_msg*)[[[s_board_report_colum_data_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_board_report_colum_data_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_board_report_colum_data_msg*)[[[s_board_report_colum_data_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_board_report_colum_data_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_board_report_colum_data_msg*)[[[s_board_report_colum_data_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_board_report_colum_data_msgBuilder*) builder {
  return [[s_board_report_colum_data_msgBuilder alloc] init];
}
+ (s_board_report_colum_data_msgBuilder*) builderWithPrototype:(s_board_report_colum_data_msg*) prototype {
  return [[s_board_report_colum_data_msg builder] mergeFrom:prototype];
}
- (s_board_report_colum_data_msgBuilder*) builder {
  return [s_board_report_colum_data_msg builder];
}
- (s_board_report_colum_data_msgBuilder*) toBuilder {
  return [s_board_report_colum_data_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"key", NSStringFromcolum_type(self.key)];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", [NSNumber numberWithDouble:self.value]];
  }
  if (self.hasStrvalue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"strvalue", self.strvalue];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasKey) {
    [dictionary setObject: @(self.key) forKey: @"key"];
  }
  if (self.hasValue) {
    [dictionary setObject: [NSNumber numberWithDouble:self.value] forKey: @"value"];
  }
  if (self.hasStrvalue) {
    [dictionary setObject: self.strvalue forKey: @"strvalue"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_board_report_colum_data_msg class]]) {
    return NO;
  }
  s_board_report_colum_data_msg *otherMessage = other;
  return
      self.hasKey == otherMessage.hasKey &&
      (!self.hasKey || self.key == otherMessage.key) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || self.value == otherMessage.value) &&
      self.hasStrvalue == otherMessage.hasStrvalue &&
      (!self.hasStrvalue || [self.strvalue isEqual:otherMessage.strvalue]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasKey) {
    hashCode = hashCode * 31 + self.key;
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.value] hash];
  }
  if (self.hasStrvalue) {
    hashCode = hashCode * 31 + [self.strvalue hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_board_report_colum_data_msgBuilder()
@property (strong) s_board_report_colum_data_msg* resultSBoardReportColumDataMsg;
@end

@implementation s_board_report_colum_data_msgBuilder
@synthesize resultSBoardReportColumDataMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBoardReportColumDataMsg = [[s_board_report_colum_data_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBoardReportColumDataMsg;
}
- (s_board_report_colum_data_msgBuilder*) clear {
  self.resultSBoardReportColumDataMsg = [[s_board_report_colum_data_msg alloc] init];
  return self;
}
- (s_board_report_colum_data_msgBuilder*) clone {
  return [s_board_report_colum_data_msg builderWithPrototype:resultSBoardReportColumDataMsg];
}
- (s_board_report_colum_data_msg*) defaultInstance {
  return [s_board_report_colum_data_msg defaultInstance];
}
- (s_board_report_colum_data_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_board_report_colum_data_msg*) buildPartial {
  s_board_report_colum_data_msg* returnMe = resultSBoardReportColumDataMsg;
  self.resultSBoardReportColumDataMsg = nil;
  return returnMe;
}
- (s_board_report_colum_data_msgBuilder*) mergeFrom:(s_board_report_colum_data_msg*) other {
  if (other == [s_board_report_colum_data_msg defaultInstance]) {
    return self;
  }
  if (other.hasKey) {
    [self setKey:other.key];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  if (other.hasStrvalue) {
    [self setStrvalue:other.strvalue];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_board_report_colum_data_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_board_report_colum_data_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        colum_type value = (colum_type)[input readEnum];
        if (colum_typeIsValidValue(value)) {
          [self setKey:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 17: {
        [self setValue:[input readDouble]];
        break;
      }
      case 26: {
        [self setStrvalue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasKey {
  return resultSBoardReportColumDataMsg.hasKey;
}
- (colum_type) key {
  return resultSBoardReportColumDataMsg.key;
}
- (s_board_report_colum_data_msgBuilder*) setKey:(colum_type) value {
  resultSBoardReportColumDataMsg.hasKey = YES;
  resultSBoardReportColumDataMsg.key = value;
  return self;
}
- (s_board_report_colum_data_msgBuilder*) clearKey {
  resultSBoardReportColumDataMsg.hasKey = NO;
  resultSBoardReportColumDataMsg.key = colum_typeColIndex;
  return self;
}
- (BOOL) hasValue {
  return resultSBoardReportColumDataMsg.hasValue;
}
- (Float64) value {
  return resultSBoardReportColumDataMsg.value;
}
- (s_board_report_colum_data_msgBuilder*) setValue:(Float64) value {
  resultSBoardReportColumDataMsg.hasValue = YES;
  resultSBoardReportColumDataMsg.value = value;
  return self;
}
- (s_board_report_colum_data_msgBuilder*) clearValue {
  resultSBoardReportColumDataMsg.hasValue = NO;
  resultSBoardReportColumDataMsg.value = 0;
  return self;
}
- (BOOL) hasStrvalue {
  return resultSBoardReportColumDataMsg.hasStrvalue;
}
- (NSString*) strvalue {
  return resultSBoardReportColumDataMsg.strvalue;
}
- (s_board_report_colum_data_msgBuilder*) setStrvalue:(NSString*) value {
  resultSBoardReportColumDataMsg.hasStrvalue = YES;
  resultSBoardReportColumDataMsg.strvalue = value;
  return self;
}
- (s_board_report_colum_data_msgBuilder*) clearStrvalue {
  resultSBoardReportColumDataMsg.hasStrvalue = NO;
  resultSBoardReportColumDataMsg.strvalue = @"";
  return self;
}
@end

@interface s_borad_report_line_data ()
@property UInt32 index;
@property (strong) NSString* code;
@property (strong) NSString* name;
@property (strong) NSMutableArray * columDataArray;
@end

@implementation s_borad_report_line_data

- (BOOL) hasIndex {
  return !!hasIndex_;
}
- (void) setHasIndex:(BOOL) _value_ {
  hasIndex_ = !!_value_;
}
@synthesize index;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
@synthesize columDataArray;
@dynamic columData;
- (instancetype) init {
  if ((self = [super init])) {
    self.index = 0;
    self.code = @"";
    self.name = @"";
  }
  return self;
}
static s_borad_report_line_data* defaults_borad_report_line_dataInstance = nil;
+ (void) initialize {
  if (self == [s_borad_report_line_data class]) {
    defaults_borad_report_line_dataInstance = [[s_borad_report_line_data alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_borad_report_line_dataInstance;
}
- (instancetype) defaultInstance {
  return defaults_borad_report_line_dataInstance;
}
- (NSArray *)columData {
  return columDataArray;
}
- (s_board_report_colum_data_msg*)columDataAtIndex:(NSUInteger)index {
  return [columDataArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitcolumData = YES;
   [self.columData enumerateObjectsUsingBlock:^(s_board_report_colum_data_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcolumData = NO;
      *stop = YES;
    }
  }];
  if (!isInitcolumData) return isInitcolumData;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIndex) {
    [output writeUInt32:1 value:self.index];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  [self.columDataArray enumerateObjectsUsingBlock:^(s_board_report_colum_data_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasIndex) {
    size_ += computeUInt32Size(1, self.index);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  [self.columDataArray enumerateObjectsUsingBlock:^(s_board_report_colum_data_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_borad_report_line_data*) parseFromData:(NSData*) data {
  return (s_borad_report_line_data*)[[[s_borad_report_line_data builder] mergeFromData:data] build];
}
+ (s_borad_report_line_data*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_line_data*)[[[s_borad_report_line_data builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_line_data*) parseFromInputStream:(NSInputStream*) input {
  return (s_borad_report_line_data*)[[[s_borad_report_line_data builder] mergeFromInputStream:input] build];
}
+ (s_borad_report_line_data*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_line_data*)[[[s_borad_report_line_data builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_line_data*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_borad_report_line_data*)[[[s_borad_report_line_data builder] mergeFromCodedInputStream:input] build];
}
+ (s_borad_report_line_data*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_line_data*)[[[s_borad_report_line_data builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_line_dataBuilder*) builder {
  return [[s_borad_report_line_dataBuilder alloc] init];
}
+ (s_borad_report_line_dataBuilder*) builderWithPrototype:(s_borad_report_line_data*) prototype {
  return [[s_borad_report_line_data builder] mergeFrom:prototype];
}
- (s_borad_report_line_dataBuilder*) builder {
  return [s_borad_report_line_data builder];
}
- (s_borad_report_line_dataBuilder*) toBuilder {
  return [s_borad_report_line_data builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasIndex) {
    [output appendFormat:@"%@%@: %@\n", indent, @"index", [NSNumber numberWithInteger:self.index]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.columDataArray enumerateObjectsUsingBlock:^(s_board_report_colum_data_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"columData"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasIndex) {
    [dictionary setObject: [NSNumber numberWithInteger:self.index] forKey: @"index"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  for (s_board_report_colum_data_msg* element in self.columDataArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"columData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_borad_report_line_data class]]) {
    return NO;
  }
  s_borad_report_line_data *otherMessage = other;
  return
      self.hasIndex == otherMessage.hasIndex &&
      (!self.hasIndex || self.index == otherMessage.index) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      [self.columDataArray isEqualToArray:otherMessage.columDataArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasIndex) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.index] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  [self.columDataArray enumerateObjectsUsingBlock:^(s_board_report_colum_data_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_borad_report_line_dataBuilder()
@property (strong) s_borad_report_line_data* resultSBoradReportLineData;
@end

@implementation s_borad_report_line_dataBuilder
@synthesize resultSBoradReportLineData;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBoradReportLineData = [[s_borad_report_line_data alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBoradReportLineData;
}
- (s_borad_report_line_dataBuilder*) clear {
  self.resultSBoradReportLineData = [[s_borad_report_line_data alloc] init];
  return self;
}
- (s_borad_report_line_dataBuilder*) clone {
  return [s_borad_report_line_data builderWithPrototype:resultSBoradReportLineData];
}
- (s_borad_report_line_data*) defaultInstance {
  return [s_borad_report_line_data defaultInstance];
}
- (s_borad_report_line_data*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_borad_report_line_data*) buildPartial {
  s_borad_report_line_data* returnMe = resultSBoradReportLineData;
  self.resultSBoradReportLineData = nil;
  return returnMe;
}
- (s_borad_report_line_dataBuilder*) mergeFrom:(s_borad_report_line_data*) other {
  if (other == [s_borad_report_line_data defaultInstance]) {
    return self;
  }
  if (other.hasIndex) {
    [self setIndex:other.index];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.columDataArray.count > 0) {
    if (resultSBoradReportLineData.columDataArray == nil) {
      resultSBoradReportLineData.columDataArray = [[NSMutableArray alloc] initWithArray:other.columDataArray];
    } else {
      [resultSBoradReportLineData.columDataArray addObjectsFromArray:other.columDataArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_borad_report_line_dataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_borad_report_line_dataBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIndex:[input readUInt32]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        s_board_report_colum_data_msgBuilder* subBuilder = [s_board_report_colum_data_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addColumData:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIndex {
  return resultSBoradReportLineData.hasIndex;
}
- (UInt32) index {
  return resultSBoradReportLineData.index;
}
- (s_borad_report_line_dataBuilder*) setIndex:(UInt32) value {
  resultSBoradReportLineData.hasIndex = YES;
  resultSBoradReportLineData.index = value;
  return self;
}
- (s_borad_report_line_dataBuilder*) clearIndex {
  resultSBoradReportLineData.hasIndex = NO;
  resultSBoradReportLineData.index = 0;
  return self;
}
- (BOOL) hasCode {
  return resultSBoradReportLineData.hasCode;
}
- (NSString*) code {
  return resultSBoradReportLineData.code;
}
- (s_borad_report_line_dataBuilder*) setCode:(NSString*) value {
  resultSBoradReportLineData.hasCode = YES;
  resultSBoradReportLineData.code = value;
  return self;
}
- (s_borad_report_line_dataBuilder*) clearCode {
  resultSBoradReportLineData.hasCode = NO;
  resultSBoradReportLineData.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultSBoradReportLineData.hasName;
}
- (NSString*) name {
  return resultSBoradReportLineData.name;
}
- (s_borad_report_line_dataBuilder*) setName:(NSString*) value {
  resultSBoradReportLineData.hasName = YES;
  resultSBoradReportLineData.name = value;
  return self;
}
- (s_borad_report_line_dataBuilder*) clearName {
  resultSBoradReportLineData.hasName = NO;
  resultSBoradReportLineData.name = @"";
  return self;
}
- (NSMutableArray *)columData {
  return resultSBoradReportLineData.columDataArray;
}
- (s_board_report_colum_data_msg*)columDataAtIndex:(NSUInteger)index {
  return [resultSBoradReportLineData columDataAtIndex:index];
}
- (s_borad_report_line_dataBuilder *)addColumData:(s_board_report_colum_data_msg*)value {
  if (resultSBoradReportLineData.columDataArray == nil) {
    resultSBoradReportLineData.columDataArray = [[NSMutableArray alloc]init];
  }
  [resultSBoradReportLineData.columDataArray addObject:value];
  return self;
}
- (s_borad_report_line_dataBuilder *)setColumDataArray:(NSArray *)array {
  resultSBoradReportLineData.columDataArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_borad_report_line_dataBuilder *)clearColumData {
  resultSBoradReportLineData.columDataArray = nil;
  return self;
}
@end

@interface s_borad_report_result_msg ()
@property (strong) NSMutableArray * datasArray;
@end

@implementation s_borad_report_result_msg

@synthesize datasArray;
@dynamic datas;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_borad_report_result_msg* defaults_borad_report_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_borad_report_result_msg class]) {
    defaults_borad_report_result_msgInstance = [[s_borad_report_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_borad_report_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_borad_report_result_msgInstance;
}
- (NSArray *)datas {
  return datasArray;
}
- (s_borad_report_line_data*)datasAtIndex:(NSUInteger)index {
  return [datasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitdatas = YES;
   [self.datas enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitdatas = NO;
      *stop = YES;
    }
  }];
  if (!isInitdatas) return isInitdatas;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_borad_report_result_msg*) parseFromData:(NSData*) data {
  return (s_borad_report_result_msg*)[[[s_borad_report_result_msg builder] mergeFromData:data] build];
}
+ (s_borad_report_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_result_msg*)[[[s_borad_report_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_borad_report_result_msg*)[[[s_borad_report_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_borad_report_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_result_msg*)[[[s_borad_report_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_borad_report_result_msg*)[[[s_borad_report_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_borad_report_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_result_msg*)[[[s_borad_report_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_result_msgBuilder*) builder {
  return [[s_borad_report_result_msgBuilder alloc] init];
}
+ (s_borad_report_result_msgBuilder*) builderWithPrototype:(s_borad_report_result_msg*) prototype {
  return [[s_borad_report_result_msg builder] mergeFrom:prototype];
}
- (s_borad_report_result_msgBuilder*) builder {
  return [s_borad_report_result_msg builder];
}
- (s_borad_report_result_msgBuilder*) toBuilder {
  return [s_borad_report_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"datas"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_borad_report_line_data* element in self.datasArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"datas"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_borad_report_result_msg class]]) {
    return NO;
  }
  s_borad_report_result_msg *otherMessage = other;
  return
      [self.datasArray isEqualToArray:otherMessage.datasArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_borad_report_result_msgBuilder()
@property (strong) s_borad_report_result_msg* resultSBoradReportResultMsg;
@end

@implementation s_borad_report_result_msgBuilder
@synthesize resultSBoradReportResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBoradReportResultMsg = [[s_borad_report_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBoradReportResultMsg;
}
- (s_borad_report_result_msgBuilder*) clear {
  self.resultSBoradReportResultMsg = [[s_borad_report_result_msg alloc] init];
  return self;
}
- (s_borad_report_result_msgBuilder*) clone {
  return [s_borad_report_result_msg builderWithPrototype:resultSBoradReportResultMsg];
}
- (s_borad_report_result_msg*) defaultInstance {
  return [s_borad_report_result_msg defaultInstance];
}
- (s_borad_report_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_borad_report_result_msg*) buildPartial {
  s_borad_report_result_msg* returnMe = resultSBoradReportResultMsg;
  self.resultSBoradReportResultMsg = nil;
  return returnMe;
}
- (s_borad_report_result_msgBuilder*) mergeFrom:(s_borad_report_result_msg*) other {
  if (other == [s_borad_report_result_msg defaultInstance]) {
    return self;
  }
  if (other.datasArray.count > 0) {
    if (resultSBoradReportResultMsg.datasArray == nil) {
      resultSBoradReportResultMsg.datasArray = [[NSMutableArray alloc] initWithArray:other.datasArray];
    } else {
      [resultSBoradReportResultMsg.datasArray addObjectsFromArray:other.datasArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_borad_report_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_borad_report_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_borad_report_line_dataBuilder* subBuilder = [s_borad_report_line_data builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDatas:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)datas {
  return resultSBoradReportResultMsg.datasArray;
}
- (s_borad_report_line_data*)datasAtIndex:(NSUInteger)index {
  return [resultSBoradReportResultMsg datasAtIndex:index];
}
- (s_borad_report_result_msgBuilder *)addDatas:(s_borad_report_line_data*)value {
  if (resultSBoradReportResultMsg.datasArray == nil) {
    resultSBoradReportResultMsg.datasArray = [[NSMutableArray alloc]init];
  }
  [resultSBoradReportResultMsg.datasArray addObject:value];
  return self;
}
- (s_borad_report_result_msgBuilder *)setDatasArray:(NSArray *)array {
  resultSBoradReportResultMsg.datasArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_borad_report_result_msgBuilder *)clearDatas {
  resultSBoradReportResultMsg.datasArray = nil;
  return self;
}
@end

@interface open_day_result_msg ()
@property UInt32 day;
@property BOOL status;
@end

@implementation open_day_result_msg

- (BOOL) hasDay {
  return !!hasDay_;
}
- (void) setHasDay:(BOOL) _value_ {
  hasDay_ = !!_value_;
}
@synthesize day;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
- (BOOL) status {
  return !!status_;
}
- (void) setStatus:(BOOL) _value_ {
  status_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.day = 0;
    self.status = NO;
  }
  return self;
}
static open_day_result_msg* defaultopen_day_result_msgInstance = nil;
+ (void) initialize {
  if (self == [open_day_result_msg class]) {
    defaultopen_day_result_msgInstance = [[open_day_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultopen_day_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaultopen_day_result_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDay) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDay) {
    [output writeUInt32:1 value:self.day];
  }
  if (self.hasStatus) {
    [output writeBool:2 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDay) {
    size_ += computeUInt32Size(1, self.day);
  }
  if (self.hasStatus) {
    size_ += computeBoolSize(2, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (open_day_result_msg*) parseFromData:(NSData*) data {
  return (open_day_result_msg*)[[[open_day_result_msg builder] mergeFromData:data] build];
}
+ (open_day_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (open_day_result_msg*)[[[open_day_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (open_day_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (open_day_result_msg*)[[[open_day_result_msg builder] mergeFromInputStream:input] build];
}
+ (open_day_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (open_day_result_msg*)[[[open_day_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (open_day_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (open_day_result_msg*)[[[open_day_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (open_day_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (open_day_result_msg*)[[[open_day_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (open_day_result_msgBuilder*) builder {
  return [[open_day_result_msgBuilder alloc] init];
}
+ (open_day_result_msgBuilder*) builderWithPrototype:(open_day_result_msg*) prototype {
  return [[open_day_result_msg builder] mergeFrom:prototype];
}
- (open_day_result_msgBuilder*) builder {
  return [open_day_result_msg builder];
}
- (open_day_result_msgBuilder*) toBuilder {
  return [open_day_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDay) {
    [output appendFormat:@"%@%@: %@\n", indent, @"day", [NSNumber numberWithInteger:self.day]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithBool:self.status]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDay) {
    [dictionary setObject: [NSNumber numberWithInteger:self.day] forKey: @"day"];
  }
  if (self.hasStatus) {
    [dictionary setObject: [NSNumber numberWithBool:self.status] forKey: @"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[open_day_result_msg class]]) {
    return NO;
  }
  open_day_result_msg *otherMessage = other;
  return
      self.hasDay == otherMessage.hasDay &&
      (!self.hasDay || self.day == otherMessage.day) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDay) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.day] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.status] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface open_day_result_msgBuilder()
@property (strong) open_day_result_msg* resultOpenDayResultMsg;
@end

@implementation open_day_result_msgBuilder
@synthesize resultOpenDayResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultOpenDayResultMsg = [[open_day_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultOpenDayResultMsg;
}
- (open_day_result_msgBuilder*) clear {
  self.resultOpenDayResultMsg = [[open_day_result_msg alloc] init];
  return self;
}
- (open_day_result_msgBuilder*) clone {
  return [open_day_result_msg builderWithPrototype:resultOpenDayResultMsg];
}
- (open_day_result_msg*) defaultInstance {
  return [open_day_result_msg defaultInstance];
}
- (open_day_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (open_day_result_msg*) buildPartial {
  open_day_result_msg* returnMe = resultOpenDayResultMsg;
  self.resultOpenDayResultMsg = nil;
  return returnMe;
}
- (open_day_result_msgBuilder*) mergeFrom:(open_day_result_msg*) other {
  if (other == [open_day_result_msg defaultInstance]) {
    return self;
  }
  if (other.hasDay) {
    [self setDay:other.day];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (open_day_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (open_day_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDay:[input readUInt32]];
        break;
      }
      case 16: {
        [self setStatus:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasDay {
  return resultOpenDayResultMsg.hasDay;
}
- (UInt32) day {
  return resultOpenDayResultMsg.day;
}
- (open_day_result_msgBuilder*) setDay:(UInt32) value {
  resultOpenDayResultMsg.hasDay = YES;
  resultOpenDayResultMsg.day = value;
  return self;
}
- (open_day_result_msgBuilder*) clearDay {
  resultOpenDayResultMsg.hasDay = NO;
  resultOpenDayResultMsg.day = 0;
  return self;
}
- (BOOL) hasStatus {
  return resultOpenDayResultMsg.hasStatus;
}
- (BOOL) status {
  return resultOpenDayResultMsg.status;
}
- (open_day_result_msgBuilder*) setStatus:(BOOL) value {
  resultOpenDayResultMsg.hasStatus = YES;
  resultOpenDayResultMsg.status = value;
  return self;
}
- (open_day_result_msgBuilder*) clearStatus {
  resultOpenDayResultMsg.hasStatus = NO;
  resultOpenDayResultMsg.status = NO;
  return self;
}
@end

@interface s_board_report_optional_msg ()
@property (strong) NSMutableArray * codesArray;
@property colum_type sortColum;
@property BOOL isAsc;
@property (strong) PBAppendableArray * columArrayArray;
@end

@implementation s_board_report_optional_msg

@synthesize codesArray;
@dynamic codes;
- (BOOL) hasSortColum {
  return !!hasSortColum_;
}
- (void) setHasSortColum:(BOOL) _value_ {
  hasSortColum_ = !!_value_;
}
@synthesize sortColum;
- (BOOL) hasIsAsc {
  return !!hasIsAsc_;
}
- (void) setHasIsAsc:(BOOL) _value_ {
  hasIsAsc_ = !!_value_;
}
- (BOOL) isAsc {
  return !!isAsc_;
}
- (void) setIsAsc:(BOOL) _value_ {
  isAsc_ = !!_value_;
}
@synthesize columArrayArray;
@dynamic columArray;
- (instancetype) init {
  if ((self = [super init])) {
    self.sortColum = colum_typeColIndex;
    self.isAsc = NO;
  }
  return self;
}
static s_board_report_optional_msg* defaults_board_report_optional_msgInstance = nil;
+ (void) initialize {
  if (self == [s_board_report_optional_msg class]) {
    defaults_board_report_optional_msgInstance = [[s_board_report_optional_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_board_report_optional_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_board_report_optional_msgInstance;
}
- (NSArray *)codes {
  return codesArray;
}
- (NSString*)codesAtIndex:(NSUInteger)index {
  return [codesArray objectAtIndex:index];
}
- (PBArray *)columArray {
  return columArrayArray;
}
- (colum_type)columArrayAtIndex:(NSUInteger)index {
  return (colum_type)[columArrayArray enumAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.codesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:1 value:element];
  }];
  if (self.hasIsAsc) {
    [output writeBool:2 value:self.isAsc];
  }
  const NSUInteger columArrayArrayCount = self.columArrayArray.count;
  const colum_type *columArrayArrayValues = (const colum_type *)self.columArrayArray.data;
  for (NSUInteger i = 0; i < columArrayArrayCount; ++i) {
    [output writeEnum:3 value:columArrayArrayValues[i]];
  }
  if (self.hasSortColum) {
    [output writeEnum:4 value:self.sortColum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.codesArray.count;
    [self.codesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasIsAsc) {
    size_ += computeBoolSize(2, self.isAsc);
  }
  {
    SInt32 dataSize = 0;
    const NSUInteger count = self.columArrayArray.count;
    const colum_type *values = (const colum_type *)self.columArrayArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeEnumSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasSortColum) {
    size_ += computeEnumSize(4, self.sortColum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_board_report_optional_msg*) parseFromData:(NSData*) data {
  return (s_board_report_optional_msg*)[[[s_board_report_optional_msg builder] mergeFromData:data] build];
}
+ (s_board_report_optional_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_board_report_optional_msg*)[[[s_board_report_optional_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_board_report_optional_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_board_report_optional_msg*)[[[s_board_report_optional_msg builder] mergeFromInputStream:input] build];
}
+ (s_board_report_optional_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_board_report_optional_msg*)[[[s_board_report_optional_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_board_report_optional_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_board_report_optional_msg*)[[[s_board_report_optional_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_board_report_optional_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_board_report_optional_msg*)[[[s_board_report_optional_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_board_report_optional_msgBuilder*) builder {
  return [[s_board_report_optional_msgBuilder alloc] init];
}
+ (s_board_report_optional_msgBuilder*) builderWithPrototype:(s_board_report_optional_msg*) prototype {
  return [[s_board_report_optional_msg builder] mergeFrom:prototype];
}
- (s_board_report_optional_msgBuilder*) builder {
  return [s_board_report_optional_msg builder];
}
- (s_board_report_optional_msgBuilder*) toBuilder {
  return [s_board_report_optional_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.codesArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"codes", obj];
  }];
  if (self.hasIsAsc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isAsc", [NSNumber numberWithBool:self.isAsc]];
  }
  [self.columArrayArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"columArray", NSStringFromcolum_type([(NSNumber *)element intValue])];
  }];
  if (self.hasSortColum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sortColum", NSStringFromcolum_type(self.sortColum)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [dictionary setObject:self.codes forKey: @"codes"];
  if (self.hasIsAsc) {
    [dictionary setObject: [NSNumber numberWithBool:self.isAsc] forKey: @"isAsc"];
  }
  const NSUInteger columArrayArrayCount = self.columArrayArray.count;
  if (columArrayArrayCount > 0) {
    const colum_type *columArrayArrayValues = (const colum_type *)self.columArrayArray.data;
    NSMutableArray * columArrayArrayArray = [NSMutableArray new];
    for (NSUInteger i = 0; i < columArrayArrayCount; ++i) {
      [columArrayArrayArray addObject: @(columArrayArrayValues[i])];
    }
    [dictionary setObject: columArrayArrayArray forKey: @"columArray"];
  }
  if (self.hasSortColum) {
    [dictionary setObject: @(self.sortColum) forKey: @"sortColum"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_board_report_optional_msg class]]) {
    return NO;
  }
  s_board_report_optional_msg *otherMessage = other;
  return
      [self.codesArray isEqualToArray:otherMessage.codesArray] &&
      self.hasIsAsc == otherMessage.hasIsAsc &&
      (!self.hasIsAsc || self.isAsc == otherMessage.isAsc) &&
      [self.columArrayArray isEqualToArray:otherMessage.columArrayArray] &&
      self.hasSortColum == otherMessage.hasSortColum &&
      (!self.hasSortColum || self.sortColum == otherMessage.sortColum) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.codesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasIsAsc) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isAsc] hash];
  }
  [self.columArrayArray enumerateObjectsUsingBlock:^(NSNumber* element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + element.longValue;
  }];
  if (self.hasSortColum) {
    hashCode = hashCode * 31 + self.sortColum;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_board_report_optional_msgBuilder()
@property (strong) s_board_report_optional_msg* resultSBoardReportOptionalMsg;
@end

@implementation s_board_report_optional_msgBuilder
@synthesize resultSBoardReportOptionalMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBoardReportOptionalMsg = [[s_board_report_optional_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBoardReportOptionalMsg;
}
- (s_board_report_optional_msgBuilder*) clear {
  self.resultSBoardReportOptionalMsg = [[s_board_report_optional_msg alloc] init];
  return self;
}
- (s_board_report_optional_msgBuilder*) clone {
  return [s_board_report_optional_msg builderWithPrototype:resultSBoardReportOptionalMsg];
}
- (s_board_report_optional_msg*) defaultInstance {
  return [s_board_report_optional_msg defaultInstance];
}
- (s_board_report_optional_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_board_report_optional_msg*) buildPartial {
  s_board_report_optional_msg* returnMe = resultSBoardReportOptionalMsg;
  self.resultSBoardReportOptionalMsg = nil;
  return returnMe;
}
- (s_board_report_optional_msgBuilder*) mergeFrom:(s_board_report_optional_msg*) other {
  if (other == [s_board_report_optional_msg defaultInstance]) {
    return self;
  }
  if (other.codesArray.count > 0) {
    if (resultSBoardReportOptionalMsg.codesArray == nil) {
      resultSBoardReportOptionalMsg.codesArray = [[NSMutableArray alloc] initWithArray:other.codesArray];
    } else {
      [resultSBoardReportOptionalMsg.codesArray addObjectsFromArray:other.codesArray];
    }
  }
  if (other.hasSortColum) {
    [self setSortColum:other.sortColum];
  }
  if (other.hasIsAsc) {
    [self setIsAsc:other.isAsc];
  }
  if (other.columArrayArray.count > 0) {
    if (resultSBoardReportOptionalMsg.columArrayArray == nil) {
      resultSBoardReportOptionalMsg.columArrayArray = [other.columArrayArray copy];
    } else {
      [resultSBoardReportOptionalMsg.columArrayArray appendArray:other.columArrayArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_board_report_optional_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_board_report_optional_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addCodes:[input readString]];
        break;
      }
      case 16: {
        [self setIsAsc:[input readBool]];
        break;
      }
      case 24: {
        colum_type value = (colum_type)[input readEnum];
        if (colum_typeIsValidValue(value)) {
          [self addColumArray:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        colum_type value = (colum_type)[input readEnum];
        if (colum_typeIsValidValue(value)) {
          [self setSortColum:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
    }
  }
}
- (NSMutableArray *)codes {
  return resultSBoardReportOptionalMsg.codesArray;
}
- (NSString*)codesAtIndex:(NSUInteger)index {
  return [resultSBoardReportOptionalMsg codesAtIndex:index];
}
- (s_board_report_optional_msgBuilder *)addCodes:(NSString*)value {
  if (resultSBoardReportOptionalMsg.codesArray == nil) {
    resultSBoardReportOptionalMsg.codesArray = [[NSMutableArray alloc]init];
  }
  [resultSBoardReportOptionalMsg.codesArray addObject:value];
  return self;
}
- (s_board_report_optional_msgBuilder *)setCodesArray:(NSArray *)array {
  resultSBoardReportOptionalMsg.codesArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (s_board_report_optional_msgBuilder *)clearCodes {
  resultSBoardReportOptionalMsg.codesArray = nil;
  return self;
}
- (BOOL) hasSortColum {
  return resultSBoardReportOptionalMsg.hasSortColum;
}
- (colum_type) sortColum {
  return resultSBoardReportOptionalMsg.sortColum;
}
- (s_board_report_optional_msgBuilder*) setSortColum:(colum_type) value {
  resultSBoardReportOptionalMsg.hasSortColum = YES;
  resultSBoardReportOptionalMsg.sortColum = value;
  return self;
}
- (s_board_report_optional_msgBuilder*) clearSortColum {
  resultSBoardReportOptionalMsg.hasSortColum = NO;
  resultSBoardReportOptionalMsg.sortColum = colum_typeColIndex;
  return self;
}
- (BOOL) hasIsAsc {
  return resultSBoardReportOptionalMsg.hasIsAsc;
}
- (BOOL) isAsc {
  return resultSBoardReportOptionalMsg.isAsc;
}
- (s_board_report_optional_msgBuilder*) setIsAsc:(BOOL) value {
  resultSBoardReportOptionalMsg.hasIsAsc = YES;
  resultSBoardReportOptionalMsg.isAsc = value;
  return self;
}
- (s_board_report_optional_msgBuilder*) clearIsAsc {
  resultSBoardReportOptionalMsg.hasIsAsc = NO;
  resultSBoardReportOptionalMsg.isAsc = NO;
  return self;
}
- (PBAppendableArray *)columArray {
  return resultSBoardReportOptionalMsg.columArrayArray;
}
- (colum_type)columArrayAtIndex:(NSUInteger)index {
  return [resultSBoardReportOptionalMsg columArrayAtIndex:index];
}
- (s_board_report_optional_msgBuilder *)addColumArray:(colum_type)value {
  if (resultSBoardReportOptionalMsg.columArrayArray == nil) {
    resultSBoardReportOptionalMsg.columArrayArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [resultSBoardReportOptionalMsg.columArrayArray addEnum:value];
  return self;
}
- (s_board_report_optional_msgBuilder *)setColumArrayArray:(NSArray *)array {
  resultSBoardReportOptionalMsg.columArrayArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (s_board_report_optional_msgBuilder *)setColumArrayValues:(const colum_type *)values count:(NSUInteger)count {
  resultSBoardReportOptionalMsg.columArrayArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (s_board_report_optional_msgBuilder *)clearColumArray {
  resultSBoardReportOptionalMsg.columArrayArray = nil;
  return self;
}
@end

@interface s_borad_report_optional_result_msg ()
@property (strong) NSMutableArray * datasArray;
@end

@implementation s_borad_report_optional_result_msg

@synthesize datasArray;
@dynamic datas;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_borad_report_optional_result_msg* defaults_borad_report_optional_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_borad_report_optional_result_msg class]) {
    defaults_borad_report_optional_result_msgInstance = [[s_borad_report_optional_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_borad_report_optional_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_borad_report_optional_result_msgInstance;
}
- (NSArray *)datas {
  return datasArray;
}
- (s_borad_report_line_data*)datasAtIndex:(NSUInteger)index {
  return [datasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitdatas = YES;
   [self.datas enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitdatas = NO;
      *stop = YES;
    }
  }];
  if (!isInitdatas) return isInitdatas;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_borad_report_optional_result_msg*) parseFromData:(NSData*) data {
  return (s_borad_report_optional_result_msg*)[[[s_borad_report_optional_result_msg builder] mergeFromData:data] build];
}
+ (s_borad_report_optional_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_optional_result_msg*)[[[s_borad_report_optional_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_optional_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_borad_report_optional_result_msg*)[[[s_borad_report_optional_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_borad_report_optional_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_optional_result_msg*)[[[s_borad_report_optional_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_optional_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_borad_report_optional_result_msg*)[[[s_borad_report_optional_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_borad_report_optional_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_optional_result_msg*)[[[s_borad_report_optional_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_optional_result_msgBuilder*) builder {
  return [[s_borad_report_optional_result_msgBuilder alloc] init];
}
+ (s_borad_report_optional_result_msgBuilder*) builderWithPrototype:(s_borad_report_optional_result_msg*) prototype {
  return [[s_borad_report_optional_result_msg builder] mergeFrom:prototype];
}
- (s_borad_report_optional_result_msgBuilder*) builder {
  return [s_borad_report_optional_result_msg builder];
}
- (s_borad_report_optional_result_msgBuilder*) toBuilder {
  return [s_borad_report_optional_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"datas"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_borad_report_line_data* element in self.datasArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"datas"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_borad_report_optional_result_msg class]]) {
    return NO;
  }
  s_borad_report_optional_result_msg *otherMessage = other;
  return
      [self.datasArray isEqualToArray:otherMessage.datasArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_borad_report_optional_result_msgBuilder()
@property (strong) s_borad_report_optional_result_msg* resultSBoradReportOptionalResultMsg;
@end

@implementation s_borad_report_optional_result_msgBuilder
@synthesize resultSBoradReportOptionalResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBoradReportOptionalResultMsg = [[s_borad_report_optional_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBoradReportOptionalResultMsg;
}
- (s_borad_report_optional_result_msgBuilder*) clear {
  self.resultSBoradReportOptionalResultMsg = [[s_borad_report_optional_result_msg alloc] init];
  return self;
}
- (s_borad_report_optional_result_msgBuilder*) clone {
  return [s_borad_report_optional_result_msg builderWithPrototype:resultSBoradReportOptionalResultMsg];
}
- (s_borad_report_optional_result_msg*) defaultInstance {
  return [s_borad_report_optional_result_msg defaultInstance];
}
- (s_borad_report_optional_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_borad_report_optional_result_msg*) buildPartial {
  s_borad_report_optional_result_msg* returnMe = resultSBoradReportOptionalResultMsg;
  self.resultSBoradReportOptionalResultMsg = nil;
  return returnMe;
}
- (s_borad_report_optional_result_msgBuilder*) mergeFrom:(s_borad_report_optional_result_msg*) other {
  if (other == [s_borad_report_optional_result_msg defaultInstance]) {
    return self;
  }
  if (other.datasArray.count > 0) {
    if (resultSBoradReportOptionalResultMsg.datasArray == nil) {
      resultSBoradReportOptionalResultMsg.datasArray = [[NSMutableArray alloc] initWithArray:other.datasArray];
    } else {
      [resultSBoradReportOptionalResultMsg.datasArray addObjectsFromArray:other.datasArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_borad_report_optional_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_borad_report_optional_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_borad_report_line_dataBuilder* subBuilder = [s_borad_report_line_data builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDatas:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)datas {
  return resultSBoradReportOptionalResultMsg.datasArray;
}
- (s_borad_report_line_data*)datasAtIndex:(NSUInteger)index {
  return [resultSBoradReportOptionalResultMsg datasAtIndex:index];
}
- (s_borad_report_optional_result_msgBuilder *)addDatas:(s_borad_report_line_data*)value {
  if (resultSBoradReportOptionalResultMsg.datasArray == nil) {
    resultSBoradReportOptionalResultMsg.datasArray = [[NSMutableArray alloc]init];
  }
  [resultSBoradReportOptionalResultMsg.datasArray addObject:value];
  return self;
}
- (s_borad_report_optional_result_msgBuilder *)setDatasArray:(NSArray *)array {
  resultSBoradReportOptionalResultMsg.datasArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_borad_report_optional_result_msgBuilder *)clearDatas {
  resultSBoradReportOptionalResultMsg.datasArray = nil;
  return self;
}
@end

@interface s_borad_report_top_msg ()
@property (strong) PBAppendableArray * blockCodesArray;
@property colum_type sortColum;
@property BOOL isAsc;
@property (strong) PBAppendableArray * columArrayArray;
@property UInt32 count;
@end

@implementation s_borad_report_top_msg

@synthesize blockCodesArray;
@dynamic blockCodes;
- (BOOL) hasSortColum {
  return !!hasSortColum_;
}
- (void) setHasSortColum:(BOOL) _value_ {
  hasSortColum_ = !!_value_;
}
@synthesize sortColum;
- (BOOL) hasIsAsc {
  return !!hasIsAsc_;
}
- (void) setHasIsAsc:(BOOL) _value_ {
  hasIsAsc_ = !!_value_;
}
- (BOOL) isAsc {
  return !!isAsc_;
}
- (void) setIsAsc:(BOOL) _value_ {
  isAsc_ = !!_value_;
}
@synthesize columArrayArray;
@dynamic columArray;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) _value_ {
  hasCount_ = !!_value_;
}
@synthesize count;
- (instancetype) init {
  if ((self = [super init])) {
    self.sortColum = colum_typeColIndex;
    self.isAsc = NO;
    self.count = 0;
  }
  return self;
}
static s_borad_report_top_msg* defaults_borad_report_top_msgInstance = nil;
+ (void) initialize {
  if (self == [s_borad_report_top_msg class]) {
    defaults_borad_report_top_msgInstance = [[s_borad_report_top_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_borad_report_top_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_borad_report_top_msgInstance;
}
- (PBArray *)blockCodes {
  return blockCodesArray;
}
- (UInt32)blockCodesAtIndex:(NSUInteger)index {
  return [blockCodesArray uint32AtIndex:index];
}
- (PBArray *)columArray {
  return columArrayArray;
}
- (colum_type)columArrayAtIndex:(NSUInteger)index {
  return (colum_type)[columArrayArray enumAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasSortColum) {
    return NO;
  }
  if (!self.hasIsAsc) {
    return NO;
  }
  if (!self.hasCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger blockCodesArrayCount = self.blockCodesArray.count;
  if (blockCodesArrayCount > 0) {
    const UInt32 *values = (const UInt32 *)self.blockCodesArray.data;
    for (NSUInteger i = 0; i < blockCodesArrayCount; ++i) {
      [output writeUInt32:1 value:values[i]];
    }
  }
  if (self.hasSortColum) {
    [output writeEnum:2 value:self.sortColum];
  }
  if (self.hasIsAsc) {
    [output writeBool:3 value:self.isAsc];
  }
  const NSUInteger columArrayArrayCount = self.columArrayArray.count;
  const colum_type *columArrayArrayValues = (const colum_type *)self.columArrayArray.data;
  for (NSUInteger i = 0; i < columArrayArrayCount; ++i) {
    [output writeEnum:4 value:columArrayArrayValues[i]];
  }
  if (self.hasCount) {
    [output writeUInt32:5 value:self.count];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.blockCodesArray.count;
    const UInt32 *values = (const UInt32 *)self.blockCodesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeUInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasSortColum) {
    size_ += computeEnumSize(2, self.sortColum);
  }
  if (self.hasIsAsc) {
    size_ += computeBoolSize(3, self.isAsc);
  }
  {
    SInt32 dataSize = 0;
    const NSUInteger count = self.columArrayArray.count;
    const colum_type *values = (const colum_type *)self.columArrayArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeEnumSizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasCount) {
    size_ += computeUInt32Size(5, self.count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_borad_report_top_msg*) parseFromData:(NSData*) data {
  return (s_borad_report_top_msg*)[[[s_borad_report_top_msg builder] mergeFromData:data] build];
}
+ (s_borad_report_top_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_top_msg*)[[[s_borad_report_top_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_top_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_borad_report_top_msg*)[[[s_borad_report_top_msg builder] mergeFromInputStream:input] build];
}
+ (s_borad_report_top_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_top_msg*)[[[s_borad_report_top_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_top_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_borad_report_top_msg*)[[[s_borad_report_top_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_borad_report_top_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_top_msg*)[[[s_borad_report_top_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_top_msgBuilder*) builder {
  return [[s_borad_report_top_msgBuilder alloc] init];
}
+ (s_borad_report_top_msgBuilder*) builderWithPrototype:(s_borad_report_top_msg*) prototype {
  return [[s_borad_report_top_msg builder] mergeFrom:prototype];
}
- (s_borad_report_top_msgBuilder*) builder {
  return [s_borad_report_top_msg builder];
}
- (s_borad_report_top_msgBuilder*) toBuilder {
  return [s_borad_report_top_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.blockCodesArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blockCodes", obj];
  }];
  if (self.hasSortColum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sortColum", NSStringFromcolum_type(self.sortColum)];
  }
  if (self.hasIsAsc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isAsc", [NSNumber numberWithBool:self.isAsc]];
  }
  [self.columArrayArray enumerateObjectsUsingBlock:^(id element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"columArray", NSStringFromcolum_type([(NSNumber *)element intValue])];
  }];
  if (self.hasCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"count", [NSNumber numberWithInteger:self.count]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  NSMutableArray * blockCodesArrayArray = [NSMutableArray new];
  NSUInteger blockCodesArrayCount=self.blockCodesArray.count;
  for(int i=0;i<blockCodesArrayCount;i++){
    [blockCodesArrayArray addObject: @([self.blockCodesArray uint32AtIndex:i])];
  }
  [dictionary setObject: blockCodesArrayArray forKey: @"blockCodes"];
  if (self.hasSortColum) {
    [dictionary setObject: @(self.sortColum) forKey: @"sortColum"];
  }
  if (self.hasIsAsc) {
    [dictionary setObject: [NSNumber numberWithBool:self.isAsc] forKey: @"isAsc"];
  }
  const NSUInteger columArrayArrayCount = self.columArrayArray.count;
  if (columArrayArrayCount > 0) {
    const colum_type *columArrayArrayValues = (const colum_type *)self.columArrayArray.data;
    NSMutableArray * columArrayArrayArray = [NSMutableArray new];
    for (NSUInteger i = 0; i < columArrayArrayCount; ++i) {
      [columArrayArrayArray addObject: @(columArrayArrayValues[i])];
    }
    [dictionary setObject: columArrayArrayArray forKey: @"columArray"];
  }
  if (self.hasCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.count] forKey: @"count"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_borad_report_top_msg class]]) {
    return NO;
  }
  s_borad_report_top_msg *otherMessage = other;
  return
      [self.blockCodesArray isEqualToArray:otherMessage.blockCodesArray] &&
      self.hasSortColum == otherMessage.hasSortColum &&
      (!self.hasSortColum || self.sortColum == otherMessage.sortColum) &&
      self.hasIsAsc == otherMessage.hasIsAsc &&
      (!self.hasIsAsc || self.isAsc == otherMessage.isAsc) &&
      [self.columArrayArray isEqualToArray:otherMessage.columArrayArray] &&
      self.hasCount == otherMessage.hasCount &&
      (!self.hasCount || self.count == otherMessage.count) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.blockCodesArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasSortColum) {
    hashCode = hashCode * 31 + self.sortColum;
  }
  if (self.hasIsAsc) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isAsc] hash];
  }
  [self.columArrayArray enumerateObjectsUsingBlock:^(NSNumber* element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + element.longValue;
  }];
  if (self.hasCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.count] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_borad_report_top_msgBuilder()
@property (strong) s_borad_report_top_msg* resultSBoradReportTopMsg;
@end

@implementation s_borad_report_top_msgBuilder
@synthesize resultSBoradReportTopMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBoradReportTopMsg = [[s_borad_report_top_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBoradReportTopMsg;
}
- (s_borad_report_top_msgBuilder*) clear {
  self.resultSBoradReportTopMsg = [[s_borad_report_top_msg alloc] init];
  return self;
}
- (s_borad_report_top_msgBuilder*) clone {
  return [s_borad_report_top_msg builderWithPrototype:resultSBoradReportTopMsg];
}
- (s_borad_report_top_msg*) defaultInstance {
  return [s_borad_report_top_msg defaultInstance];
}
- (s_borad_report_top_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_borad_report_top_msg*) buildPartial {
  s_borad_report_top_msg* returnMe = resultSBoradReportTopMsg;
  self.resultSBoradReportTopMsg = nil;
  return returnMe;
}
- (s_borad_report_top_msgBuilder*) mergeFrom:(s_borad_report_top_msg*) other {
  if (other == [s_borad_report_top_msg defaultInstance]) {
    return self;
  }
  if (other.blockCodesArray.count > 0) {
    if (resultSBoradReportTopMsg.blockCodesArray == nil) {
      resultSBoradReportTopMsg.blockCodesArray = [other.blockCodesArray copy];
    } else {
      [resultSBoradReportTopMsg.blockCodesArray appendArray:other.blockCodesArray];
    }
  }
  if (other.hasSortColum) {
    [self setSortColum:other.sortColum];
  }
  if (other.hasIsAsc) {
    [self setIsAsc:other.isAsc];
  }
  if (other.columArrayArray.count > 0) {
    if (resultSBoradReportTopMsg.columArrayArray == nil) {
      resultSBoradReportTopMsg.columArrayArray = [other.columArrayArray copy];
    } else {
      [resultSBoradReportTopMsg.columArrayArray appendArray:other.columArrayArray];
    }
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_borad_report_top_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_borad_report_top_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addBlockCodes:[input readUInt32]];
        break;
      }
      case 16: {
        colum_type value = (colum_type)[input readEnum];
        if (colum_typeIsValidValue(value)) {
          [self setSortColum:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setIsAsc:[input readBool]];
        break;
      }
      case 32: {
        colum_type value = (colum_type)[input readEnum];
        if (colum_typeIsValidValue(value)) {
          [self addColumArray:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setCount:[input readUInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)blockCodes {
  return resultSBoradReportTopMsg.blockCodesArray;
}
- (UInt32)blockCodesAtIndex:(NSUInteger)index {
  return [resultSBoradReportTopMsg blockCodesAtIndex:index];
}
- (s_borad_report_top_msgBuilder *)addBlockCodes:(UInt32)value {
  if (resultSBoradReportTopMsg.blockCodesArray == nil) {
    resultSBoradReportTopMsg.blockCodesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeUInt32];
  }
  [resultSBoradReportTopMsg.blockCodesArray addUint32:value];
  return self;
}
- (s_borad_report_top_msgBuilder *)setBlockCodesArray:(NSArray *)array {
  resultSBoradReportTopMsg.blockCodesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeUInt32];
  return self;
}
- (s_borad_report_top_msgBuilder *)setBlockCodesValues:(const UInt32 *)values count:(NSUInteger)count {
  resultSBoradReportTopMsg.blockCodesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeUInt32];
  return self;
}
- (s_borad_report_top_msgBuilder *)clearBlockCodes {
  resultSBoradReportTopMsg.blockCodesArray = nil;
  return self;
}
- (BOOL) hasSortColum {
  return resultSBoradReportTopMsg.hasSortColum;
}
- (colum_type) sortColum {
  return resultSBoradReportTopMsg.sortColum;
}
- (s_borad_report_top_msgBuilder*) setSortColum:(colum_type) value {
  resultSBoradReportTopMsg.hasSortColum = YES;
  resultSBoradReportTopMsg.sortColum = value;
  return self;
}
- (s_borad_report_top_msgBuilder*) clearSortColum {
  resultSBoradReportTopMsg.hasSortColum = NO;
  resultSBoradReportTopMsg.sortColum = colum_typeColIndex;
  return self;
}
- (BOOL) hasIsAsc {
  return resultSBoradReportTopMsg.hasIsAsc;
}
- (BOOL) isAsc {
  return resultSBoradReportTopMsg.isAsc;
}
- (s_borad_report_top_msgBuilder*) setIsAsc:(BOOL) value {
  resultSBoradReportTopMsg.hasIsAsc = YES;
  resultSBoradReportTopMsg.isAsc = value;
  return self;
}
- (s_borad_report_top_msgBuilder*) clearIsAsc {
  resultSBoradReportTopMsg.hasIsAsc = NO;
  resultSBoradReportTopMsg.isAsc = NO;
  return self;
}
- (PBAppendableArray *)columArray {
  return resultSBoradReportTopMsg.columArrayArray;
}
- (colum_type)columArrayAtIndex:(NSUInteger)index {
  return [resultSBoradReportTopMsg columArrayAtIndex:index];
}
- (s_borad_report_top_msgBuilder *)addColumArray:(colum_type)value {
  if (resultSBoradReportTopMsg.columArrayArray == nil) {
    resultSBoradReportTopMsg.columArrayArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [resultSBoradReportTopMsg.columArrayArray addEnum:value];
  return self;
}
- (s_borad_report_top_msgBuilder *)setColumArrayArray:(NSArray *)array {
  resultSBoradReportTopMsg.columArrayArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (s_borad_report_top_msgBuilder *)setColumArrayValues:(const colum_type *)values count:(NSUInteger)count {
  resultSBoradReportTopMsg.columArrayArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (s_borad_report_top_msgBuilder *)clearColumArray {
  resultSBoradReportTopMsg.columArrayArray = nil;
  return self;
}
- (BOOL) hasCount {
  return resultSBoradReportTopMsg.hasCount;
}
- (UInt32) count {
  return resultSBoradReportTopMsg.count;
}
- (s_borad_report_top_msgBuilder*) setCount:(UInt32) value {
  resultSBoradReportTopMsg.hasCount = YES;
  resultSBoradReportTopMsg.count = value;
  return self;
}
- (s_borad_report_top_msgBuilder*) clearCount {
  resultSBoradReportTopMsg.hasCount = NO;
  resultSBoradReportTopMsg.count = 0;
  return self;
}
@end

@interface s_borad_report_block_msg ()
@property (strong) NSString* code;
@property (strong) NSString* name;
@property (strong) NSMutableArray * datasArray;
@end

@implementation s_borad_report_block_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
@synthesize datasArray;
@dynamic datas;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.name = @"";
  }
  return self;
}
static s_borad_report_block_msg* defaults_borad_report_block_msgInstance = nil;
+ (void) initialize {
  if (self == [s_borad_report_block_msg class]) {
    defaults_borad_report_block_msgInstance = [[s_borad_report_block_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_borad_report_block_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_borad_report_block_msgInstance;
}
- (NSArray *)datas {
  return datasArray;
}
- (s_borad_report_line_data*)datasAtIndex:(NSUInteger)index {
  return [datasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  __block BOOL isInitdatas = YES;
   [self.datas enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitdatas = NO;
      *stop = YES;
    }
  }];
  if (!isInitdatas) return isInitdatas;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_borad_report_block_msg*) parseFromData:(NSData*) data {
  return (s_borad_report_block_msg*)[[[s_borad_report_block_msg builder] mergeFromData:data] build];
}
+ (s_borad_report_block_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_block_msg*)[[[s_borad_report_block_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_block_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_borad_report_block_msg*)[[[s_borad_report_block_msg builder] mergeFromInputStream:input] build];
}
+ (s_borad_report_block_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_block_msg*)[[[s_borad_report_block_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_block_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_borad_report_block_msg*)[[[s_borad_report_block_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_borad_report_block_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_block_msg*)[[[s_borad_report_block_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_block_msgBuilder*) builder {
  return [[s_borad_report_block_msgBuilder alloc] init];
}
+ (s_borad_report_block_msgBuilder*) builderWithPrototype:(s_borad_report_block_msg*) prototype {
  return [[s_borad_report_block_msg builder] mergeFrom:prototype];
}
- (s_borad_report_block_msgBuilder*) builder {
  return [s_borad_report_block_msg builder];
}
- (s_borad_report_block_msgBuilder*) toBuilder {
  return [s_borad_report_block_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"datas"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  for (s_borad_report_line_data* element in self.datasArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"datas"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_borad_report_block_msg class]]) {
    return NO;
  }
  s_borad_report_block_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      [self.datasArray isEqualToArray:otherMessage.datasArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_line_data *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_borad_report_block_msgBuilder()
@property (strong) s_borad_report_block_msg* resultSBoradReportBlockMsg;
@end

@implementation s_borad_report_block_msgBuilder
@synthesize resultSBoradReportBlockMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBoradReportBlockMsg = [[s_borad_report_block_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBoradReportBlockMsg;
}
- (s_borad_report_block_msgBuilder*) clear {
  self.resultSBoradReportBlockMsg = [[s_borad_report_block_msg alloc] init];
  return self;
}
- (s_borad_report_block_msgBuilder*) clone {
  return [s_borad_report_block_msg builderWithPrototype:resultSBoradReportBlockMsg];
}
- (s_borad_report_block_msg*) defaultInstance {
  return [s_borad_report_block_msg defaultInstance];
}
- (s_borad_report_block_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_borad_report_block_msg*) buildPartial {
  s_borad_report_block_msg* returnMe = resultSBoradReportBlockMsg;
  self.resultSBoradReportBlockMsg = nil;
  return returnMe;
}
- (s_borad_report_block_msgBuilder*) mergeFrom:(s_borad_report_block_msg*) other {
  if (other == [s_borad_report_block_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.datasArray.count > 0) {
    if (resultSBoradReportBlockMsg.datasArray == nil) {
      resultSBoradReportBlockMsg.datasArray = [[NSMutableArray alloc] initWithArray:other.datasArray];
    } else {
      [resultSBoradReportBlockMsg.datasArray addObjectsFromArray:other.datasArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_borad_report_block_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_borad_report_block_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        s_borad_report_line_dataBuilder* subBuilder = [s_borad_report_line_data builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDatas:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSBoradReportBlockMsg.hasCode;
}
- (NSString*) code {
  return resultSBoradReportBlockMsg.code;
}
- (s_borad_report_block_msgBuilder*) setCode:(NSString*) value {
  resultSBoradReportBlockMsg.hasCode = YES;
  resultSBoradReportBlockMsg.code = value;
  return self;
}
- (s_borad_report_block_msgBuilder*) clearCode {
  resultSBoradReportBlockMsg.hasCode = NO;
  resultSBoradReportBlockMsg.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultSBoradReportBlockMsg.hasName;
}
- (NSString*) name {
  return resultSBoradReportBlockMsg.name;
}
- (s_borad_report_block_msgBuilder*) setName:(NSString*) value {
  resultSBoradReportBlockMsg.hasName = YES;
  resultSBoradReportBlockMsg.name = value;
  return self;
}
- (s_borad_report_block_msgBuilder*) clearName {
  resultSBoradReportBlockMsg.hasName = NO;
  resultSBoradReportBlockMsg.name = @"";
  return self;
}
- (NSMutableArray *)datas {
  return resultSBoradReportBlockMsg.datasArray;
}
- (s_borad_report_line_data*)datasAtIndex:(NSUInteger)index {
  return [resultSBoradReportBlockMsg datasAtIndex:index];
}
- (s_borad_report_block_msgBuilder *)addDatas:(s_borad_report_line_data*)value {
  if (resultSBoradReportBlockMsg.datasArray == nil) {
    resultSBoradReportBlockMsg.datasArray = [[NSMutableArray alloc]init];
  }
  [resultSBoradReportBlockMsg.datasArray addObject:value];
  return self;
}
- (s_borad_report_block_msgBuilder *)setDatasArray:(NSArray *)array {
  resultSBoradReportBlockMsg.datasArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_borad_report_block_msgBuilder *)clearDatas {
  resultSBoradReportBlockMsg.datasArray = nil;
  return self;
}
@end

@interface s_borad_report_top_result_msg ()
@property (strong) NSMutableArray * datasArray;
@end

@implementation s_borad_report_top_result_msg

@synthesize datasArray;
@dynamic datas;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_borad_report_top_result_msg* defaults_borad_report_top_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_borad_report_top_result_msg class]) {
    defaults_borad_report_top_result_msgInstance = [[s_borad_report_top_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_borad_report_top_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_borad_report_top_result_msgInstance;
}
- (NSArray *)datas {
  return datasArray;
}
- (s_borad_report_block_msg*)datasAtIndex:(NSUInteger)index {
  return [datasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitdatas = YES;
   [self.datas enumerateObjectsUsingBlock:^(s_borad_report_block_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitdatas = NO;
      *stop = YES;
    }
  }];
  if (!isInitdatas) return isInitdatas;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_block_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_block_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_borad_report_top_result_msg*) parseFromData:(NSData*) data {
  return (s_borad_report_top_result_msg*)[[[s_borad_report_top_result_msg builder] mergeFromData:data] build];
}
+ (s_borad_report_top_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_top_result_msg*)[[[s_borad_report_top_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_top_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_borad_report_top_result_msg*)[[[s_borad_report_top_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_borad_report_top_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_top_result_msg*)[[[s_borad_report_top_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_top_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_borad_report_top_result_msg*)[[[s_borad_report_top_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_borad_report_top_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_borad_report_top_result_msg*)[[[s_borad_report_top_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_borad_report_top_result_msgBuilder*) builder {
  return [[s_borad_report_top_result_msgBuilder alloc] init];
}
+ (s_borad_report_top_result_msgBuilder*) builderWithPrototype:(s_borad_report_top_result_msg*) prototype {
  return [[s_borad_report_top_result_msg builder] mergeFrom:prototype];
}
- (s_borad_report_top_result_msgBuilder*) builder {
  return [s_borad_report_top_result_msg builder];
}
- (s_borad_report_top_result_msgBuilder*) toBuilder {
  return [s_borad_report_top_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_block_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"datas"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_borad_report_block_msg* element in self.datasArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"datas"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_borad_report_top_result_msg class]]) {
    return NO;
  }
  s_borad_report_top_result_msg *otherMessage = other;
  return
      [self.datasArray isEqualToArray:otherMessage.datasArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.datasArray enumerateObjectsUsingBlock:^(s_borad_report_block_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_borad_report_top_result_msgBuilder()
@property (strong) s_borad_report_top_result_msg* resultSBoradReportTopResultMsg;
@end

@implementation s_borad_report_top_result_msgBuilder
@synthesize resultSBoradReportTopResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBoradReportTopResultMsg = [[s_borad_report_top_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBoradReportTopResultMsg;
}
- (s_borad_report_top_result_msgBuilder*) clear {
  self.resultSBoradReportTopResultMsg = [[s_borad_report_top_result_msg alloc] init];
  return self;
}
- (s_borad_report_top_result_msgBuilder*) clone {
  return [s_borad_report_top_result_msg builderWithPrototype:resultSBoradReportTopResultMsg];
}
- (s_borad_report_top_result_msg*) defaultInstance {
  return [s_borad_report_top_result_msg defaultInstance];
}
- (s_borad_report_top_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_borad_report_top_result_msg*) buildPartial {
  s_borad_report_top_result_msg* returnMe = resultSBoradReportTopResultMsg;
  self.resultSBoradReportTopResultMsg = nil;
  return returnMe;
}
- (s_borad_report_top_result_msgBuilder*) mergeFrom:(s_borad_report_top_result_msg*) other {
  if (other == [s_borad_report_top_result_msg defaultInstance]) {
    return self;
  }
  if (other.datasArray.count > 0) {
    if (resultSBoradReportTopResultMsg.datasArray == nil) {
      resultSBoradReportTopResultMsg.datasArray = [[NSMutableArray alloc] initWithArray:other.datasArray];
    } else {
      [resultSBoradReportTopResultMsg.datasArray addObjectsFromArray:other.datasArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_borad_report_top_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_borad_report_top_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_borad_report_block_msgBuilder* subBuilder = [s_borad_report_block_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDatas:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)datas {
  return resultSBoradReportTopResultMsg.datasArray;
}
- (s_borad_report_block_msg*)datasAtIndex:(NSUInteger)index {
  return [resultSBoradReportTopResultMsg datasAtIndex:index];
}
- (s_borad_report_top_result_msgBuilder *)addDatas:(s_borad_report_block_msg*)value {
  if (resultSBoradReportTopResultMsg.datasArray == nil) {
    resultSBoradReportTopResultMsg.datasArray = [[NSMutableArray alloc]init];
  }
  [resultSBoradReportTopResultMsg.datasArray addObject:value];
  return self;
}
- (s_borad_report_top_result_msgBuilder *)setDatasArray:(NSArray *)array {
  resultSBoradReportTopResultMsg.datasArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_borad_report_top_result_msgBuilder *)clearDatas {
  resultSBoradReportTopResultMsg.datasArray = nil;
  return self;
}
@end

@interface s_index_keep_line_msg ()
@property (strong) NSString* code;
@property (strong) NSString* name;
@property Float64 vol;
@property Float64 buykeep;
@property Float64 sellkeep;
@property Float64 voldif;
@property Float64 buykeepdif;
@property Float64 sellkeepdif;
@end

@implementation s_index_keep_line_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasVol {
  return !!hasVol_;
}
- (void) setHasVol:(BOOL) _value_ {
  hasVol_ = !!_value_;
}
@synthesize vol;
- (BOOL) hasBuykeep {
  return !!hasBuykeep_;
}
- (void) setHasBuykeep:(BOOL) _value_ {
  hasBuykeep_ = !!_value_;
}
@synthesize buykeep;
- (BOOL) hasSellkeep {
  return !!hasSellkeep_;
}
- (void) setHasSellkeep:(BOOL) _value_ {
  hasSellkeep_ = !!_value_;
}
@synthesize sellkeep;
- (BOOL) hasVoldif {
  return !!hasVoldif_;
}
- (void) setHasVoldif:(BOOL) _value_ {
  hasVoldif_ = !!_value_;
}
@synthesize voldif;
- (BOOL) hasBuykeepdif {
  return !!hasBuykeepdif_;
}
- (void) setHasBuykeepdif:(BOOL) _value_ {
  hasBuykeepdif_ = !!_value_;
}
@synthesize buykeepdif;
- (BOOL) hasSellkeepdif {
  return !!hasSellkeepdif_;
}
- (void) setHasSellkeepdif:(BOOL) _value_ {
  hasSellkeepdif_ = !!_value_;
}
@synthesize sellkeepdif;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.name = @"";
    self.vol = 0;
    self.buykeep = 0;
    self.sellkeep = 0;
    self.voldif = 0;
    self.buykeepdif = 0;
    self.sellkeepdif = 0;
  }
  return self;
}
static s_index_keep_line_msg* defaults_index_keep_line_msgInstance = nil;
+ (void) initialize {
  if (self == [s_index_keep_line_msg class]) {
    defaults_index_keep_line_msgInstance = [[s_index_keep_line_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_index_keep_line_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_index_keep_line_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasVol) {
    return NO;
  }
  if (!self.hasBuykeep) {
    return NO;
  }
  if (!self.hasSellkeep) {
    return NO;
  }
  if (!self.hasVoldif) {
    return NO;
  }
  if (!self.hasBuykeepdif) {
    return NO;
  }
  if (!self.hasSellkeepdif) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasVol) {
    [output writeDouble:3 value:self.vol];
  }
  if (self.hasBuykeep) {
    [output writeDouble:4 value:self.buykeep];
  }
  if (self.hasSellkeep) {
    [output writeDouble:5 value:self.sellkeep];
  }
  if (self.hasVoldif) {
    [output writeDouble:6 value:self.voldif];
  }
  if (self.hasBuykeepdif) {
    [output writeDouble:7 value:self.buykeepdif];
  }
  if (self.hasSellkeepdif) {
    [output writeDouble:8 value:self.sellkeepdif];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasVol) {
    size_ += computeDoubleSize(3, self.vol);
  }
  if (self.hasBuykeep) {
    size_ += computeDoubleSize(4, self.buykeep);
  }
  if (self.hasSellkeep) {
    size_ += computeDoubleSize(5, self.sellkeep);
  }
  if (self.hasVoldif) {
    size_ += computeDoubleSize(6, self.voldif);
  }
  if (self.hasBuykeepdif) {
    size_ += computeDoubleSize(7, self.buykeepdif);
  }
  if (self.hasSellkeepdif) {
    size_ += computeDoubleSize(8, self.sellkeepdif);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_index_keep_line_msg*) parseFromData:(NSData*) data {
  return (s_index_keep_line_msg*)[[[s_index_keep_line_msg builder] mergeFromData:data] build];
}
+ (s_index_keep_line_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_index_keep_line_msg*)[[[s_index_keep_line_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_index_keep_line_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_index_keep_line_msg*)[[[s_index_keep_line_msg builder] mergeFromInputStream:input] build];
}
+ (s_index_keep_line_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_index_keep_line_msg*)[[[s_index_keep_line_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_index_keep_line_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_index_keep_line_msg*)[[[s_index_keep_line_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_index_keep_line_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_index_keep_line_msg*)[[[s_index_keep_line_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_index_keep_line_msgBuilder*) builder {
  return [[s_index_keep_line_msgBuilder alloc] init];
}
+ (s_index_keep_line_msgBuilder*) builderWithPrototype:(s_index_keep_line_msg*) prototype {
  return [[s_index_keep_line_msg builder] mergeFrom:prototype];
}
- (s_index_keep_line_msgBuilder*) builder {
  return [s_index_keep_line_msg builder];
}
- (s_index_keep_line_msgBuilder*) toBuilder {
  return [s_index_keep_line_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasVol) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vol", [NSNumber numberWithDouble:self.vol]];
  }
  if (self.hasBuykeep) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buykeep", [NSNumber numberWithDouble:self.buykeep]];
  }
  if (self.hasSellkeep) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sellkeep", [NSNumber numberWithDouble:self.sellkeep]];
  }
  if (self.hasVoldif) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voldif", [NSNumber numberWithDouble:self.voldif]];
  }
  if (self.hasBuykeepdif) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buykeepdif", [NSNumber numberWithDouble:self.buykeepdif]];
  }
  if (self.hasSellkeepdif) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sellkeepdif", [NSNumber numberWithDouble:self.sellkeepdif]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasVol) {
    [dictionary setObject: [NSNumber numberWithDouble:self.vol] forKey: @"vol"];
  }
  if (self.hasBuykeep) {
    [dictionary setObject: [NSNumber numberWithDouble:self.buykeep] forKey: @"buykeep"];
  }
  if (self.hasSellkeep) {
    [dictionary setObject: [NSNumber numberWithDouble:self.sellkeep] forKey: @"sellkeep"];
  }
  if (self.hasVoldif) {
    [dictionary setObject: [NSNumber numberWithDouble:self.voldif] forKey: @"voldif"];
  }
  if (self.hasBuykeepdif) {
    [dictionary setObject: [NSNumber numberWithDouble:self.buykeepdif] forKey: @"buykeepdif"];
  }
  if (self.hasSellkeepdif) {
    [dictionary setObject: [NSNumber numberWithDouble:self.sellkeepdif] forKey: @"sellkeepdif"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_index_keep_line_msg class]]) {
    return NO;
  }
  s_index_keep_line_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasVol == otherMessage.hasVol &&
      (!self.hasVol || self.vol == otherMessage.vol) &&
      self.hasBuykeep == otherMessage.hasBuykeep &&
      (!self.hasBuykeep || self.buykeep == otherMessage.buykeep) &&
      self.hasSellkeep == otherMessage.hasSellkeep &&
      (!self.hasSellkeep || self.sellkeep == otherMessage.sellkeep) &&
      self.hasVoldif == otherMessage.hasVoldif &&
      (!self.hasVoldif || self.voldif == otherMessage.voldif) &&
      self.hasBuykeepdif == otherMessage.hasBuykeepdif &&
      (!self.hasBuykeepdif || self.buykeepdif == otherMessage.buykeepdif) &&
      self.hasSellkeepdif == otherMessage.hasSellkeepdif &&
      (!self.hasSellkeepdif || self.sellkeepdif == otherMessage.sellkeepdif) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasVol) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.vol] hash];
  }
  if (self.hasBuykeep) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.buykeep] hash];
  }
  if (self.hasSellkeep) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.sellkeep] hash];
  }
  if (self.hasVoldif) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.voldif] hash];
  }
  if (self.hasBuykeepdif) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.buykeepdif] hash];
  }
  if (self.hasSellkeepdif) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.sellkeepdif] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_index_keep_line_msgBuilder()
@property (strong) s_index_keep_line_msg* resultSIndexKeepLineMsg;
@end

@implementation s_index_keep_line_msgBuilder
@synthesize resultSIndexKeepLineMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSIndexKeepLineMsg = [[s_index_keep_line_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSIndexKeepLineMsg;
}
- (s_index_keep_line_msgBuilder*) clear {
  self.resultSIndexKeepLineMsg = [[s_index_keep_line_msg alloc] init];
  return self;
}
- (s_index_keep_line_msgBuilder*) clone {
  return [s_index_keep_line_msg builderWithPrototype:resultSIndexKeepLineMsg];
}
- (s_index_keep_line_msg*) defaultInstance {
  return [s_index_keep_line_msg defaultInstance];
}
- (s_index_keep_line_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_index_keep_line_msg*) buildPartial {
  s_index_keep_line_msg* returnMe = resultSIndexKeepLineMsg;
  self.resultSIndexKeepLineMsg = nil;
  return returnMe;
}
- (s_index_keep_line_msgBuilder*) mergeFrom:(s_index_keep_line_msg*) other {
  if (other == [s_index_keep_line_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasVol) {
    [self setVol:other.vol];
  }
  if (other.hasBuykeep) {
    [self setBuykeep:other.buykeep];
  }
  if (other.hasSellkeep) {
    [self setSellkeep:other.sellkeep];
  }
  if (other.hasVoldif) {
    [self setVoldif:other.voldif];
  }
  if (other.hasBuykeepdif) {
    [self setBuykeepdif:other.buykeepdif];
  }
  if (other.hasSellkeepdif) {
    [self setSellkeepdif:other.sellkeepdif];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_index_keep_line_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_index_keep_line_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 25: {
        [self setVol:[input readDouble]];
        break;
      }
      case 33: {
        [self setBuykeep:[input readDouble]];
        break;
      }
      case 41: {
        [self setSellkeep:[input readDouble]];
        break;
      }
      case 49: {
        [self setVoldif:[input readDouble]];
        break;
      }
      case 57: {
        [self setBuykeepdif:[input readDouble]];
        break;
      }
      case 65: {
        [self setSellkeepdif:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSIndexKeepLineMsg.hasCode;
}
- (NSString*) code {
  return resultSIndexKeepLineMsg.code;
}
- (s_index_keep_line_msgBuilder*) setCode:(NSString*) value {
  resultSIndexKeepLineMsg.hasCode = YES;
  resultSIndexKeepLineMsg.code = value;
  return self;
}
- (s_index_keep_line_msgBuilder*) clearCode {
  resultSIndexKeepLineMsg.hasCode = NO;
  resultSIndexKeepLineMsg.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultSIndexKeepLineMsg.hasName;
}
- (NSString*) name {
  return resultSIndexKeepLineMsg.name;
}
- (s_index_keep_line_msgBuilder*) setName:(NSString*) value {
  resultSIndexKeepLineMsg.hasName = YES;
  resultSIndexKeepLineMsg.name = value;
  return self;
}
- (s_index_keep_line_msgBuilder*) clearName {
  resultSIndexKeepLineMsg.hasName = NO;
  resultSIndexKeepLineMsg.name = @"";
  return self;
}
- (BOOL) hasVol {
  return resultSIndexKeepLineMsg.hasVol;
}
- (Float64) vol {
  return resultSIndexKeepLineMsg.vol;
}
- (s_index_keep_line_msgBuilder*) setVol:(Float64) value {
  resultSIndexKeepLineMsg.hasVol = YES;
  resultSIndexKeepLineMsg.vol = value;
  return self;
}
- (s_index_keep_line_msgBuilder*) clearVol {
  resultSIndexKeepLineMsg.hasVol = NO;
  resultSIndexKeepLineMsg.vol = 0;
  return self;
}
- (BOOL) hasBuykeep {
  return resultSIndexKeepLineMsg.hasBuykeep;
}
- (Float64) buykeep {
  return resultSIndexKeepLineMsg.buykeep;
}
- (s_index_keep_line_msgBuilder*) setBuykeep:(Float64) value {
  resultSIndexKeepLineMsg.hasBuykeep = YES;
  resultSIndexKeepLineMsg.buykeep = value;
  return self;
}
- (s_index_keep_line_msgBuilder*) clearBuykeep {
  resultSIndexKeepLineMsg.hasBuykeep = NO;
  resultSIndexKeepLineMsg.buykeep = 0;
  return self;
}
- (BOOL) hasSellkeep {
  return resultSIndexKeepLineMsg.hasSellkeep;
}
- (Float64) sellkeep {
  return resultSIndexKeepLineMsg.sellkeep;
}
- (s_index_keep_line_msgBuilder*) setSellkeep:(Float64) value {
  resultSIndexKeepLineMsg.hasSellkeep = YES;
  resultSIndexKeepLineMsg.sellkeep = value;
  return self;
}
- (s_index_keep_line_msgBuilder*) clearSellkeep {
  resultSIndexKeepLineMsg.hasSellkeep = NO;
  resultSIndexKeepLineMsg.sellkeep = 0;
  return self;
}
- (BOOL) hasVoldif {
  return resultSIndexKeepLineMsg.hasVoldif;
}
- (Float64) voldif {
  return resultSIndexKeepLineMsg.voldif;
}
- (s_index_keep_line_msgBuilder*) setVoldif:(Float64) value {
  resultSIndexKeepLineMsg.hasVoldif = YES;
  resultSIndexKeepLineMsg.voldif = value;
  return self;
}
- (s_index_keep_line_msgBuilder*) clearVoldif {
  resultSIndexKeepLineMsg.hasVoldif = NO;
  resultSIndexKeepLineMsg.voldif = 0;
  return self;
}
- (BOOL) hasBuykeepdif {
  return resultSIndexKeepLineMsg.hasBuykeepdif;
}
- (Float64) buykeepdif {
  return resultSIndexKeepLineMsg.buykeepdif;
}
- (s_index_keep_line_msgBuilder*) setBuykeepdif:(Float64) value {
  resultSIndexKeepLineMsg.hasBuykeepdif = YES;
  resultSIndexKeepLineMsg.buykeepdif = value;
  return self;
}
- (s_index_keep_line_msgBuilder*) clearBuykeepdif {
  resultSIndexKeepLineMsg.hasBuykeepdif = NO;
  resultSIndexKeepLineMsg.buykeepdif = 0;
  return self;
}
- (BOOL) hasSellkeepdif {
  return resultSIndexKeepLineMsg.hasSellkeepdif;
}
- (Float64) sellkeepdif {
  return resultSIndexKeepLineMsg.sellkeepdif;
}
- (s_index_keep_line_msgBuilder*) setSellkeepdif:(Float64) value {
  resultSIndexKeepLineMsg.hasSellkeepdif = YES;
  resultSIndexKeepLineMsg.sellkeepdif = value;
  return self;
}
- (s_index_keep_line_msgBuilder*) clearSellkeepdif {
  resultSIndexKeepLineMsg.hasSellkeepdif = NO;
  resultSIndexKeepLineMsg.sellkeepdif = 0;
  return self;
}
@end

@interface s_index_keep_result_msg ()
@property (strong) NSMutableArray * datasArray;
@end

@implementation s_index_keep_result_msg

@synthesize datasArray;
@dynamic datas;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_index_keep_result_msg* defaults_index_keep_result_msgInstance = nil;
+ (void) initialize {
  if (self == [s_index_keep_result_msg class]) {
    defaults_index_keep_result_msgInstance = [[s_index_keep_result_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_index_keep_result_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_index_keep_result_msgInstance;
}
- (NSArray *)datas {
  return datasArray;
}
- (s_index_keep_line_msg*)datasAtIndex:(NSUInteger)index {
  return [datasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitdatas = YES;
   [self.datas enumerateObjectsUsingBlock:^(s_index_keep_line_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitdatas = NO;
      *stop = YES;
    }
  }];
  if (!isInitdatas) return isInitdatas;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.datasArray enumerateObjectsUsingBlock:^(s_index_keep_line_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.datasArray enumerateObjectsUsingBlock:^(s_index_keep_line_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_index_keep_result_msg*) parseFromData:(NSData*) data {
  return (s_index_keep_result_msg*)[[[s_index_keep_result_msg builder] mergeFromData:data] build];
}
+ (s_index_keep_result_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_index_keep_result_msg*)[[[s_index_keep_result_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_index_keep_result_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_index_keep_result_msg*)[[[s_index_keep_result_msg builder] mergeFromInputStream:input] build];
}
+ (s_index_keep_result_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_index_keep_result_msg*)[[[s_index_keep_result_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_index_keep_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_index_keep_result_msg*)[[[s_index_keep_result_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_index_keep_result_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_index_keep_result_msg*)[[[s_index_keep_result_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_index_keep_result_msgBuilder*) builder {
  return [[s_index_keep_result_msgBuilder alloc] init];
}
+ (s_index_keep_result_msgBuilder*) builderWithPrototype:(s_index_keep_result_msg*) prototype {
  return [[s_index_keep_result_msg builder] mergeFrom:prototype];
}
- (s_index_keep_result_msgBuilder*) builder {
  return [s_index_keep_result_msg builder];
}
- (s_index_keep_result_msgBuilder*) toBuilder {
  return [s_index_keep_result_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.datasArray enumerateObjectsUsingBlock:^(s_index_keep_line_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"datas"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_index_keep_line_msg* element in self.datasArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"datas"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_index_keep_result_msg class]]) {
    return NO;
  }
  s_index_keep_result_msg *otherMessage = other;
  return
      [self.datasArray isEqualToArray:otherMessage.datasArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.datasArray enumerateObjectsUsingBlock:^(s_index_keep_line_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_index_keep_result_msgBuilder()
@property (strong) s_index_keep_result_msg* resultSIndexKeepResultMsg;
@end

@implementation s_index_keep_result_msgBuilder
@synthesize resultSIndexKeepResultMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSIndexKeepResultMsg = [[s_index_keep_result_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSIndexKeepResultMsg;
}
- (s_index_keep_result_msgBuilder*) clear {
  self.resultSIndexKeepResultMsg = [[s_index_keep_result_msg alloc] init];
  return self;
}
- (s_index_keep_result_msgBuilder*) clone {
  return [s_index_keep_result_msg builderWithPrototype:resultSIndexKeepResultMsg];
}
- (s_index_keep_result_msg*) defaultInstance {
  return [s_index_keep_result_msg defaultInstance];
}
- (s_index_keep_result_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_index_keep_result_msg*) buildPartial {
  s_index_keep_result_msg* returnMe = resultSIndexKeepResultMsg;
  self.resultSIndexKeepResultMsg = nil;
  return returnMe;
}
- (s_index_keep_result_msgBuilder*) mergeFrom:(s_index_keep_result_msg*) other {
  if (other == [s_index_keep_result_msg defaultInstance]) {
    return self;
  }
  if (other.datasArray.count > 0) {
    if (resultSIndexKeepResultMsg.datasArray == nil) {
      resultSIndexKeepResultMsg.datasArray = [[NSMutableArray alloc] initWithArray:other.datasArray];
    } else {
      [resultSIndexKeepResultMsg.datasArray addObjectsFromArray:other.datasArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_index_keep_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_index_keep_result_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_index_keep_line_msgBuilder* subBuilder = [s_index_keep_line_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDatas:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)datas {
  return resultSIndexKeepResultMsg.datasArray;
}
- (s_index_keep_line_msg*)datasAtIndex:(NSUInteger)index {
  return [resultSIndexKeepResultMsg datasAtIndex:index];
}
- (s_index_keep_result_msgBuilder *)addDatas:(s_index_keep_line_msg*)value {
  if (resultSIndexKeepResultMsg.datasArray == nil) {
    resultSIndexKeepResultMsg.datasArray = [[NSMutableArray alloc]init];
  }
  [resultSIndexKeepResultMsg.datasArray addObject:value];
  return self;
}
- (s_index_keep_result_msgBuilder *)setDatasArray:(NSArray *)array {
  resultSIndexKeepResultMsg.datasArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_index_keep_result_msgBuilder *)clearDatas {
  resultSIndexKeepResultMsg.datasArray = nil;
  return self;
}
@end

@interface s_block_relation_request ()
@property (strong) NSString* code;
@end

@implementation s_block_relation_request

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
  }
  return self;
}
static s_block_relation_request* defaults_block_relation_requestInstance = nil;
+ (void) initialize {
  if (self == [s_block_relation_request class]) {
    defaults_block_relation_requestInstance = [[s_block_relation_request alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_block_relation_requestInstance;
}
- (instancetype) defaultInstance {
  return defaults_block_relation_requestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_block_relation_request*) parseFromData:(NSData*) data {
  return (s_block_relation_request*)[[[s_block_relation_request builder] mergeFromData:data] build];
}
+ (s_block_relation_request*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_block_relation_request*)[[[s_block_relation_request builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_block_relation_request*) parseFromInputStream:(NSInputStream*) input {
  return (s_block_relation_request*)[[[s_block_relation_request builder] mergeFromInputStream:input] build];
}
+ (s_block_relation_request*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_block_relation_request*)[[[s_block_relation_request builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_block_relation_request*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_block_relation_request*)[[[s_block_relation_request builder] mergeFromCodedInputStream:input] build];
}
+ (s_block_relation_request*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_block_relation_request*)[[[s_block_relation_request builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_block_relation_requestBuilder*) builder {
  return [[s_block_relation_requestBuilder alloc] init];
}
+ (s_block_relation_requestBuilder*) builderWithPrototype:(s_block_relation_request*) prototype {
  return [[s_block_relation_request builder] mergeFrom:prototype];
}
- (s_block_relation_requestBuilder*) builder {
  return [s_block_relation_request builder];
}
- (s_block_relation_requestBuilder*) toBuilder {
  return [s_block_relation_request builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_block_relation_request class]]) {
    return NO;
  }
  s_block_relation_request *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_block_relation_requestBuilder()
@property (strong) s_block_relation_request* resultSBlockRelationRequest;
@end

@implementation s_block_relation_requestBuilder
@synthesize resultSBlockRelationRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBlockRelationRequest = [[s_block_relation_request alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBlockRelationRequest;
}
- (s_block_relation_requestBuilder*) clear {
  self.resultSBlockRelationRequest = [[s_block_relation_request alloc] init];
  return self;
}
- (s_block_relation_requestBuilder*) clone {
  return [s_block_relation_request builderWithPrototype:resultSBlockRelationRequest];
}
- (s_block_relation_request*) defaultInstance {
  return [s_block_relation_request defaultInstance];
}
- (s_block_relation_request*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_block_relation_request*) buildPartial {
  s_block_relation_request* returnMe = resultSBlockRelationRequest;
  self.resultSBlockRelationRequest = nil;
  return returnMe;
}
- (s_block_relation_requestBuilder*) mergeFrom:(s_block_relation_request*) other {
  if (other == [s_block_relation_request defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_block_relation_requestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_block_relation_requestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSBlockRelationRequest.hasCode;
}
- (NSString*) code {
  return resultSBlockRelationRequest.code;
}
- (s_block_relation_requestBuilder*) setCode:(NSString*) value {
  resultSBlockRelationRequest.hasCode = YES;
  resultSBlockRelationRequest.code = value;
  return self;
}
- (s_block_relation_requestBuilder*) clearCode {
  resultSBlockRelationRequest.hasCode = NO;
  resultSBlockRelationRequest.code = @"";
  return self;
}
@end

@interface s_block_relation_colunm_msg ()
@property (strong) NSString* code;
@property (strong) NSString* name;
@end

@implementation s_block_relation_colunm_msg

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.name = @"";
  }
  return self;
}
static s_block_relation_colunm_msg* defaults_block_relation_colunm_msgInstance = nil;
+ (void) initialize {
  if (self == [s_block_relation_colunm_msg class]) {
    defaults_block_relation_colunm_msgInstance = [[s_block_relation_colunm_msg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_block_relation_colunm_msgInstance;
}
- (instancetype) defaultInstance {
  return defaults_block_relation_colunm_msgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_block_relation_colunm_msg*) parseFromData:(NSData*) data {
  return (s_block_relation_colunm_msg*)[[[s_block_relation_colunm_msg builder] mergeFromData:data] build];
}
+ (s_block_relation_colunm_msg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_block_relation_colunm_msg*)[[[s_block_relation_colunm_msg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_block_relation_colunm_msg*) parseFromInputStream:(NSInputStream*) input {
  return (s_block_relation_colunm_msg*)[[[s_block_relation_colunm_msg builder] mergeFromInputStream:input] build];
}
+ (s_block_relation_colunm_msg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_block_relation_colunm_msg*)[[[s_block_relation_colunm_msg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_block_relation_colunm_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_block_relation_colunm_msg*)[[[s_block_relation_colunm_msg builder] mergeFromCodedInputStream:input] build];
}
+ (s_block_relation_colunm_msg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_block_relation_colunm_msg*)[[[s_block_relation_colunm_msg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_block_relation_colunm_msgBuilder*) builder {
  return [[s_block_relation_colunm_msgBuilder alloc] init];
}
+ (s_block_relation_colunm_msgBuilder*) builderWithPrototype:(s_block_relation_colunm_msg*) prototype {
  return [[s_block_relation_colunm_msg builder] mergeFrom:prototype];
}
- (s_block_relation_colunm_msgBuilder*) builder {
  return [s_block_relation_colunm_msg builder];
}
- (s_block_relation_colunm_msgBuilder*) toBuilder {
  return [s_block_relation_colunm_msg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_block_relation_colunm_msg class]]) {
    return NO;
  }
  s_block_relation_colunm_msg *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_block_relation_colunm_msgBuilder()
@property (strong) s_block_relation_colunm_msg* resultSBlockRelationColunmMsg;
@end

@implementation s_block_relation_colunm_msgBuilder
@synthesize resultSBlockRelationColunmMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBlockRelationColunmMsg = [[s_block_relation_colunm_msg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBlockRelationColunmMsg;
}
- (s_block_relation_colunm_msgBuilder*) clear {
  self.resultSBlockRelationColunmMsg = [[s_block_relation_colunm_msg alloc] init];
  return self;
}
- (s_block_relation_colunm_msgBuilder*) clone {
  return [s_block_relation_colunm_msg builderWithPrototype:resultSBlockRelationColunmMsg];
}
- (s_block_relation_colunm_msg*) defaultInstance {
  return [s_block_relation_colunm_msg defaultInstance];
}
- (s_block_relation_colunm_msg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_block_relation_colunm_msg*) buildPartial {
  s_block_relation_colunm_msg* returnMe = resultSBlockRelationColunmMsg;
  self.resultSBlockRelationColunmMsg = nil;
  return returnMe;
}
- (s_block_relation_colunm_msgBuilder*) mergeFrom:(s_block_relation_colunm_msg*) other {
  if (other == [s_block_relation_colunm_msg defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_block_relation_colunm_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_block_relation_colunm_msgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSBlockRelationColunmMsg.hasCode;
}
- (NSString*) code {
  return resultSBlockRelationColunmMsg.code;
}
- (s_block_relation_colunm_msgBuilder*) setCode:(NSString*) value {
  resultSBlockRelationColunmMsg.hasCode = YES;
  resultSBlockRelationColunmMsg.code = value;
  return self;
}
- (s_block_relation_colunm_msgBuilder*) clearCode {
  resultSBlockRelationColunmMsg.hasCode = NO;
  resultSBlockRelationColunmMsg.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultSBlockRelationColunmMsg.hasName;
}
- (NSString*) name {
  return resultSBlockRelationColunmMsg.name;
}
- (s_block_relation_colunm_msgBuilder*) setName:(NSString*) value {
  resultSBlockRelationColunmMsg.hasName = YES;
  resultSBlockRelationColunmMsg.name = value;
  return self;
}
- (s_block_relation_colunm_msgBuilder*) clearName {
  resultSBlockRelationColunmMsg.hasName = NO;
  resultSBlockRelationColunmMsg.name = @"";
  return self;
}
@end

@interface s_block_relation_result ()
@property (strong) NSMutableArray * datasArray;
@end

@implementation s_block_relation_result

@synthesize datasArray;
@dynamic datas;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_block_relation_result* defaults_block_relation_resultInstance = nil;
+ (void) initialize {
  if (self == [s_block_relation_result class]) {
    defaults_block_relation_resultInstance = [[s_block_relation_result alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_block_relation_resultInstance;
}
- (instancetype) defaultInstance {
  return defaults_block_relation_resultInstance;
}
- (NSArray *)datas {
  return datasArray;
}
- (s_block_relation_colunm_msg*)datasAtIndex:(NSUInteger)index {
  return [datasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitdatas = YES;
   [self.datas enumerateObjectsUsingBlock:^(s_block_relation_colunm_msg *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitdatas = NO;
      *stop = YES;
    }
  }];
  if (!isInitdatas) return isInitdatas;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.datasArray enumerateObjectsUsingBlock:^(s_block_relation_colunm_msg *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.datasArray enumerateObjectsUsingBlock:^(s_block_relation_colunm_msg *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_block_relation_result*) parseFromData:(NSData*) data {
  return (s_block_relation_result*)[[[s_block_relation_result builder] mergeFromData:data] build];
}
+ (s_block_relation_result*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_block_relation_result*)[[[s_block_relation_result builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_block_relation_result*) parseFromInputStream:(NSInputStream*) input {
  return (s_block_relation_result*)[[[s_block_relation_result builder] mergeFromInputStream:input] build];
}
+ (s_block_relation_result*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_block_relation_result*)[[[s_block_relation_result builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_block_relation_result*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_block_relation_result*)[[[s_block_relation_result builder] mergeFromCodedInputStream:input] build];
}
+ (s_block_relation_result*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_block_relation_result*)[[[s_block_relation_result builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_block_relation_resultBuilder*) builder {
  return [[s_block_relation_resultBuilder alloc] init];
}
+ (s_block_relation_resultBuilder*) builderWithPrototype:(s_block_relation_result*) prototype {
  return [[s_block_relation_result builder] mergeFrom:prototype];
}
- (s_block_relation_resultBuilder*) builder {
  return [s_block_relation_result builder];
}
- (s_block_relation_resultBuilder*) toBuilder {
  return [s_block_relation_result builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.datasArray enumerateObjectsUsingBlock:^(s_block_relation_colunm_msg *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"datas"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_block_relation_colunm_msg* element in self.datasArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"datas"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_block_relation_result class]]) {
    return NO;
  }
  s_block_relation_result *otherMessage = other;
  return
      [self.datasArray isEqualToArray:otherMessage.datasArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.datasArray enumerateObjectsUsingBlock:^(s_block_relation_colunm_msg *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_block_relation_resultBuilder()
@property (strong) s_block_relation_result* resultSBlockRelationResult;
@end

@implementation s_block_relation_resultBuilder
@synthesize resultSBlockRelationResult;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSBlockRelationResult = [[s_block_relation_result alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSBlockRelationResult;
}
- (s_block_relation_resultBuilder*) clear {
  self.resultSBlockRelationResult = [[s_block_relation_result alloc] init];
  return self;
}
- (s_block_relation_resultBuilder*) clone {
  return [s_block_relation_result builderWithPrototype:resultSBlockRelationResult];
}
- (s_block_relation_result*) defaultInstance {
  return [s_block_relation_result defaultInstance];
}
- (s_block_relation_result*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_block_relation_result*) buildPartial {
  s_block_relation_result* returnMe = resultSBlockRelationResult;
  self.resultSBlockRelationResult = nil;
  return returnMe;
}
- (s_block_relation_resultBuilder*) mergeFrom:(s_block_relation_result*) other {
  if (other == [s_block_relation_result defaultInstance]) {
    return self;
  }
  if (other.datasArray.count > 0) {
    if (resultSBlockRelationResult.datasArray == nil) {
      resultSBlockRelationResult.datasArray = [[NSMutableArray alloc] initWithArray:other.datasArray];
    } else {
      [resultSBlockRelationResult.datasArray addObjectsFromArray:other.datasArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_block_relation_resultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_block_relation_resultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_block_relation_colunm_msgBuilder* subBuilder = [s_block_relation_colunm_msg builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDatas:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)datas {
  return resultSBlockRelationResult.datasArray;
}
- (s_block_relation_colunm_msg*)datasAtIndex:(NSUInteger)index {
  return [resultSBlockRelationResult datasAtIndex:index];
}
- (s_block_relation_resultBuilder *)addDatas:(s_block_relation_colunm_msg*)value {
  if (resultSBlockRelationResult.datasArray == nil) {
    resultSBlockRelationResult.datasArray = [[NSMutableArray alloc]init];
  }
  [resultSBlockRelationResult.datasArray addObject:value];
  return self;
}
- (s_block_relation_resultBuilder *)setDatasArray:(NSArray *)array {
  resultSBlockRelationResult.datasArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_block_relation_resultBuilder *)clearDatas {
  resultSBlockRelationResult.datasArray = nil;
  return self;
}
@end

@interface s_code_name_line ()
@property (strong) NSString* code;
@property (strong) NSString* name;
@end

@implementation s_code_name_line

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.name = @"";
  }
  return self;
}
static s_code_name_line* defaults_code_name_lineInstance = nil;
+ (void) initialize {
  if (self == [s_code_name_line class]) {
    defaults_code_name_lineInstance = [[s_code_name_line alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_code_name_lineInstance;
}
- (instancetype) defaultInstance {
  return defaults_code_name_lineInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_code_name_line*) parseFromData:(NSData*) data {
  return (s_code_name_line*)[[[s_code_name_line builder] mergeFromData:data] build];
}
+ (s_code_name_line*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_code_name_line*)[[[s_code_name_line builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_code_name_line*) parseFromInputStream:(NSInputStream*) input {
  return (s_code_name_line*)[[[s_code_name_line builder] mergeFromInputStream:input] build];
}
+ (s_code_name_line*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_code_name_line*)[[[s_code_name_line builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_code_name_line*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_code_name_line*)[[[s_code_name_line builder] mergeFromCodedInputStream:input] build];
}
+ (s_code_name_line*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_code_name_line*)[[[s_code_name_line builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_code_name_lineBuilder*) builder {
  return [[s_code_name_lineBuilder alloc] init];
}
+ (s_code_name_lineBuilder*) builderWithPrototype:(s_code_name_line*) prototype {
  return [[s_code_name_line builder] mergeFrom:prototype];
}
- (s_code_name_lineBuilder*) builder {
  return [s_code_name_line builder];
}
- (s_code_name_lineBuilder*) toBuilder {
  return [s_code_name_line builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_code_name_line class]]) {
    return NO;
  }
  s_code_name_line *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_code_name_lineBuilder()
@property (strong) s_code_name_line* resultSCodeNameLine;
@end

@implementation s_code_name_lineBuilder
@synthesize resultSCodeNameLine;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSCodeNameLine = [[s_code_name_line alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSCodeNameLine;
}
- (s_code_name_lineBuilder*) clear {
  self.resultSCodeNameLine = [[s_code_name_line alloc] init];
  return self;
}
- (s_code_name_lineBuilder*) clone {
  return [s_code_name_line builderWithPrototype:resultSCodeNameLine];
}
- (s_code_name_line*) defaultInstance {
  return [s_code_name_line defaultInstance];
}
- (s_code_name_line*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_code_name_line*) buildPartial {
  s_code_name_line* returnMe = resultSCodeNameLine;
  self.resultSCodeNameLine = nil;
  return returnMe;
}
- (s_code_name_lineBuilder*) mergeFrom:(s_code_name_line*) other {
  if (other == [s_code_name_line defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_code_name_lineBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_code_name_lineBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSCodeNameLine.hasCode;
}
- (NSString*) code {
  return resultSCodeNameLine.code;
}
- (s_code_name_lineBuilder*) setCode:(NSString*) value {
  resultSCodeNameLine.hasCode = YES;
  resultSCodeNameLine.code = value;
  return self;
}
- (s_code_name_lineBuilder*) clearCode {
  resultSCodeNameLine.hasCode = NO;
  resultSCodeNameLine.code = @"";
  return self;
}
- (BOOL) hasName {
  return resultSCodeNameLine.hasName;
}
- (NSString*) name {
  return resultSCodeNameLine.name;
}
- (s_code_name_lineBuilder*) setName:(NSString*) value {
  resultSCodeNameLine.hasName = YES;
  resultSCodeNameLine.name = value;
  return self;
}
- (s_code_name_lineBuilder*) clearName {
  resultSCodeNameLine.hasName = NO;
  resultSCodeNameLine.name = @"";
  return self;
}
@end

@interface s_code_name_relation_result ()
@property (strong) NSMutableArray * datasArray;
@end

@implementation s_code_name_relation_result

@synthesize datasArray;
@dynamic datas;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static s_code_name_relation_result* defaults_code_name_relation_resultInstance = nil;
+ (void) initialize {
  if (self == [s_code_name_relation_result class]) {
    defaults_code_name_relation_resultInstance = [[s_code_name_relation_result alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaults_code_name_relation_resultInstance;
}
- (instancetype) defaultInstance {
  return defaults_code_name_relation_resultInstance;
}
- (NSArray *)datas {
  return datasArray;
}
- (s_code_name_line*)datasAtIndex:(NSUInteger)index {
  return [datasArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitdatas = YES;
   [self.datas enumerateObjectsUsingBlock:^(s_code_name_line *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitdatas = NO;
      *stop = YES;
    }
  }];
  if (!isInitdatas) return isInitdatas;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.datasArray enumerateObjectsUsingBlock:^(s_code_name_line *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.datasArray enumerateObjectsUsingBlock:^(s_code_name_line *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (s_code_name_relation_result*) parseFromData:(NSData*) data {
  return (s_code_name_relation_result*)[[[s_code_name_relation_result builder] mergeFromData:data] build];
}
+ (s_code_name_relation_result*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_code_name_relation_result*)[[[s_code_name_relation_result builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (s_code_name_relation_result*) parseFromInputStream:(NSInputStream*) input {
  return (s_code_name_relation_result*)[[[s_code_name_relation_result builder] mergeFromInputStream:input] build];
}
+ (s_code_name_relation_result*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_code_name_relation_result*)[[[s_code_name_relation_result builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_code_name_relation_result*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (s_code_name_relation_result*)[[[s_code_name_relation_result builder] mergeFromCodedInputStream:input] build];
}
+ (s_code_name_relation_result*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (s_code_name_relation_result*)[[[s_code_name_relation_result builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (s_code_name_relation_resultBuilder*) builder {
  return [[s_code_name_relation_resultBuilder alloc] init];
}
+ (s_code_name_relation_resultBuilder*) builderWithPrototype:(s_code_name_relation_result*) prototype {
  return [[s_code_name_relation_result builder] mergeFrom:prototype];
}
- (s_code_name_relation_resultBuilder*) builder {
  return [s_code_name_relation_result builder];
}
- (s_code_name_relation_resultBuilder*) toBuilder {
  return [s_code_name_relation_result builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.datasArray enumerateObjectsUsingBlock:^(s_code_name_line *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"datas"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (s_code_name_line* element in self.datasArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"datas"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[s_code_name_relation_result class]]) {
    return NO;
  }
  s_code_name_relation_result *otherMessage = other;
  return
      [self.datasArray isEqualToArray:otherMessage.datasArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.datasArray enumerateObjectsUsingBlock:^(s_code_name_line *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface s_code_name_relation_resultBuilder()
@property (strong) s_code_name_relation_result* resultSCodeNameRelationResult;
@end

@implementation s_code_name_relation_resultBuilder
@synthesize resultSCodeNameRelationResult;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSCodeNameRelationResult = [[s_code_name_relation_result alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSCodeNameRelationResult;
}
- (s_code_name_relation_resultBuilder*) clear {
  self.resultSCodeNameRelationResult = [[s_code_name_relation_result alloc] init];
  return self;
}
- (s_code_name_relation_resultBuilder*) clone {
  return [s_code_name_relation_result builderWithPrototype:resultSCodeNameRelationResult];
}
- (s_code_name_relation_result*) defaultInstance {
  return [s_code_name_relation_result defaultInstance];
}
- (s_code_name_relation_result*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (s_code_name_relation_result*) buildPartial {
  s_code_name_relation_result* returnMe = resultSCodeNameRelationResult;
  self.resultSCodeNameRelationResult = nil;
  return returnMe;
}
- (s_code_name_relation_resultBuilder*) mergeFrom:(s_code_name_relation_result*) other {
  if (other == [s_code_name_relation_result defaultInstance]) {
    return self;
  }
  if (other.datasArray.count > 0) {
    if (resultSCodeNameRelationResult.datasArray == nil) {
      resultSCodeNameRelationResult.datasArray = [[NSMutableArray alloc] initWithArray:other.datasArray];
    } else {
      [resultSCodeNameRelationResult.datasArray addObjectsFromArray:other.datasArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (s_code_name_relation_resultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (s_code_name_relation_resultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        s_code_name_lineBuilder* subBuilder = [s_code_name_line builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDatas:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)datas {
  return resultSCodeNameRelationResult.datasArray;
}
- (s_code_name_line*)datasAtIndex:(NSUInteger)index {
  return [resultSCodeNameRelationResult datasAtIndex:index];
}
- (s_code_name_relation_resultBuilder *)addDatas:(s_code_name_line*)value {
  if (resultSCodeNameRelationResult.datasArray == nil) {
    resultSCodeNameRelationResult.datasArray = [[NSMutableArray alloc]init];
  }
  [resultSCodeNameRelationResult.datasArray addObject:value];
  return self;
}
- (s_code_name_relation_resultBuilder *)setDatasArray:(NSArray *)array {
  resultSCodeNameRelationResult.datasArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (s_code_name_relation_resultBuilder *)clearDatas {
  resultSCodeNameRelationResult.datasArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
